{"version":3,"file":"main.f13e3d5e.iframe.bundle.js","mappings":";;AA0BA;AACA;ACtBA;ADyCA;AASA;AEpDA;AFsDA;AACA;AEnDA;ACPA;ACiOA;AACA;AACA;AAqIA;AACA;AACA;ACtTA;;AAEA;;AAEA;AAGA;;;;;AAOA;AACA;;AAEA;AC1BA;;;AAkJA;ACrKA;AACA;;AAIA;AAEA;AACA;AACA;;AAIA;ACHA;AACA;AACA;AA+CA;AAZA;AACA;AACA;AAIA;AC9DA;AAEA;AAIA;;AAGA;;;;;;;;;ACQA;ACwIA;;;;;ACkHA;;;;AAIA;AACA;;AA6DA","sources":["webpack://@indy/flow-web/./app/component/library/Article/ProductCarousel/helpers/updateItems.js","webpack://@indy/flow-web/../src/components/ProductCarouselCard/ProductCarouselCard.constants.ts","webpack://@indy/flow-web/../src/components/ProductComparison/ProductComparison.constants.ts","webpack://@indy/flow-web/./app/component/library/Article/ProductCarousel/ProductCarousel.js","webpack://@indy/flow-web/./app/component/library/Section/components/article/ArticleHeroNew.js","webpack://@indy/flow-web/./app/component/library/StaticPage/PaymentFlow/Confirmation/OnboardingJourney/Card/NewsletterFormCard.js","webpack://@indy/flow-web/./app/component/library/Article/LiveBlog/Native/LiveBlog.tsx","webpack://@indy/flow-web/./app/component/library/Article/Luxury/Embeds/Image.js","webpack://@indy/flow-web/./app/types/CustomPropTypes.js","webpack://@indy/flow-web/./app/types/ElementIdType.js","webpack://@indy/flow-web/./app/component/pages/Register.js","webpack://@indy/flow-web/./app/component/library/Article/RegisterWall/RegisterWallVariantThree/RegisterWallVariantThree.styles.js","webpack://@indy/flow-web/./app/component/library/Edition/components/common/TextSplashContent.js"],"sourcesContent":["import {\n  TILE_WIDTH_MOBILE as CAROUSEL_TILE_WIDTH_MOBILE,\n  TILE_WIDTH_TABLET as CAROUSEL_TILE_WIDTH_TABLET,\n  TILE_WIDTH_LAPTOP as CAROUSEL_TILE_WIDTH_LAPTOP,\n} from '@indy/ui/ProductCarousel';\nimport {\n  TILE_WIDTH_MOBILE as COMPARISON_TILE_WIDTH_MOBILE,\n  TILE_WIDTH_MAX_LARGE_MOBILE as COMPARISON_TILE_WIDTH_MAX_LARGE_MOBILE,\n  TILE_WIDTH_MAX_TABLET as COMPARISON_TILE_WIDTH_MAX_TABLET,\n  TILE_WIDTH_MAX_LAPTOP as COMPARISON_TILE_WIDTH_MAX_LAPTOP,\n  TILE_WIDTH_LAPTOP as COMPARISON_TILE_WIDTH_LAPTOP,\n} from '@indy/ui/ProductComparison';\n\nimport { maxMobile, maxTablet, maxLaptop } from '#app/constants/devices';\n\nimport { minify } from '#app/util/taggedTemplates';\n\nimport { getImage } from './getImage';\n\nconst carouselImageWidths = [\n  CAROUSEL_TILE_WIDTH_MOBILE,\n  CAROUSEL_TILE_WIDTH_TABLET,\n  CAROUSEL_TILE_WIDTH_LAPTOP,\n];\n\nconst carouselImageSizes = minify`\n  ${maxTablet} ${CAROUSEL_TILE_WIDTH_MOBILE}px,\n  ${maxLaptop} ${CAROUSEL_TILE_WIDTH_TABLET}px,\n  ${CAROUSEL_TILE_WIDTH_LAPTOP}px\n`;\n\nexport const updateItemsForCarousel = (items) =>\n  items.map((item) => {\n    const isExternalECommLink = item.isEComm && item.isExternal;\n    const rel = isExternalECommLink ? 'noreferrer nofollow' : null;\n    const target = isExternalECommLink ? '_blank' : null;\n\n    return {\n      ...item,\n      image: getImage(item, carouselImageWidths, carouselImageSizes),\n      endpoint: item.priceComparisonEndpoint,\n      rel,\n      target,\n    };\n  });\n\nconst comparisonImageWidths = [\n  COMPARISON_TILE_WIDTH_MOBILE,\n  COMPARISON_TILE_WIDTH_MAX_LARGE_MOBILE, // split the difference between mobile and tablet\n  COMPARISON_TILE_WIDTH_MAX_TABLET,\n  COMPARISON_TILE_WIDTH_MAX_LAPTOP,\n  COMPARISON_TILE_WIDTH_LAPTOP,\n];\n\nconst comparisonImageSizes = minify`\n  ${maxMobile} ${COMPARISON_TILE_WIDTH_MOBILE}px,\n  (max-width: 576px) ${COMPARISON_TILE_WIDTH_MAX_LARGE_MOBILE}px,\n  ${maxTablet} ${COMPARISON_TILE_WIDTH_MAX_TABLET}px,\n  ${maxLaptop} ${COMPARISON_TILE_WIDTH_MAX_LAPTOP}px,\n  ${COMPARISON_TILE_WIDTH_LAPTOP}px\n`;\n\nexport const updateItemsForComparison = (items) =>\n  items.map((item) => {\n    const isExternalECommLink = item.isEComm && item.isExternal;\n    const rel = isExternalECommLink ? 'noreferrer nofollow' : null;\n    const target = isExternalECommLink ? '_blank' : null;\n\n    return {\n      ...item,\n      image: getImage(item, comparisonImageWidths, comparisonImageSizes),\n      endpoint: item.priceComparisonEndpoint,\n      rel,\n      target,\n    };\n  });\n","import * as spacing from '#theme/spacings';\n\nexport const FOOTER_SPACING = spacing.x2;\nexport const TILE_WIDTH_MOBILE = 140;\nexport const TILE_WIDTH_TABLET = 156;\nexport const TILE_WIDTH_LAPTOP = 190;\n\nexport const UNAVAILABLE_LABEL = 'Unavailable';\nexport const BUY_NOW_LABEL = 'Buy now';\n","export const PRODUCT_COMPARISON_RESET = 'product-comparison-reset';\n\nexport const TILE_WIDTH_MOBILE = 148;\nexport const TILE_WIDTH_MAX_LARGE_MOBILE = 257;\nexport const TILE_WIDTH_MAX_TABLET = 352;\nexport const TILE_WIDTH_TABLET = 276;\nexport const TILE_WIDTH_MAX_LAPTOP = 368;\nexport const TILE_WIDTH_LAPTOP = 330;\n","import ProductCarousel from '@indy/ui/ProductCarousel';\nimport ProductComparison, {\n  PRODUCT_COMPARISON_RESET,\n} from '@indy/ui/ProductComparison';\n\nimport PageStateContext from '#app/context/PageState';\n\nimport propTypes from './ProductCarousel.types';\nimport { fetchPriceFactory } from './helpers/fetchPriceFactory';\nimport {\n  updateItemsForCarousel,\n  updateItemsForComparison,\n} from './helpers/updateItems';\n\nconst noop = () => {};\n\nconst ProductCarouselHydrated = ({\n  items,\n  title = 'Our Top Picks',\n  offsetKey,\n  isComparison,\n  hasDynamicPricing,\n}) => {\n  const updatedItemsForCarousel = updateItemsForCarousel(items);\n  const updatedItemsForComparison = updateItemsForComparison(items);\n\n  if (isComparison) {\n    return (\n      <PageStateContext.Consumer>\n        {({\n          productComparison: { selectedItems, showModal },\n          productPrices,\n          dispatchers,\n        }) => (\n          <>\n            <ProductCarousel\n              fetchPrice={\n                hasDynamicPricing ? fetchPriceFactory(dispatchers) : null\n              }\n              initialIndex={0}\n              isComparison={true}\n              livePrices={productPrices}\n              products={updatedItemsForCarousel}\n              selectedItemIDs={selectedItems}\n              title={title}\n              offsetKey={offsetKey}\n              onToggleSelectedProduct={dispatchers.toggleSelectedProduct}\n              onBuyNowClick={dispatchers.clickProductCarouselBuyNow}\n              onReadReviewClick={dispatchers.clickProductCarouselReadReview}\n            />\n\n            <ProductComparison\n              dispatchers={dispatchers}\n              products={updatedItemsForComparison}\n              returnFocus={`#${PRODUCT_COMPARISON_RESET}`}\n              selectedItemIDs={selectedItems}\n              showModal={showModal}\n              livePrices={productPrices}\n              onBuyNowClick={dispatchers.clickProductComparisonBuyNow}\n              onReadReviewClick={dispatchers.clickProductComparisonReadReview}\n            />\n          </>\n        )}\n      </PageStateContext.Consumer>\n    );\n  }\n\n  return (\n    <PageStateContext.Consumer>\n      {({ productPrices, dispatchers }) => (\n        <ProductCarousel\n          fetchPrice={hasDynamicPricing ? fetchPriceFactory(dispatchers) : null}\n          initialIndex={0}\n          isComparison={false}\n          livePrices={productPrices}\n          products={updatedItemsForCarousel}\n          title={title}\n          offsetKey={offsetKey}\n          onToggleSelectedProduct={noop}\n          onBuyNowClick={dispatchers.clickProductCarouselBuyNow}\n          onReadReviewClick={dispatchers.clickProductCarouselReadReview}\n        />\n      )}\n    </PageStateContext.Consumer>\n  );\n};\n\nProductCarouselHydrated.propTypes = propTypes;\n\nexport default ProductCarouselHydrated;\n","import PropTypes from 'prop-types';\nimport { css, styled } from 'styled-components';\n\nimport { withRequest } from '@brightsites/flow-core/lib/providers/RequestProvider';\n\nimport * as breakPoints from '#app/constants/breakpoints';\nimport {\n  CLASS_PREMIUM_BADGING,\n  CLASS_TABOOLA_EXCLUDED,\n} from '#app/constants/classNames';\nimport * as device from '#app/constants/devices';\n\nimport { isVideoHero } from '#app/services/article';\n\nimport { getClassName } from '#app/util/classes';\nimport { hex2rgba } from '#app/util/colours';\nimport { getComponentTheme } from '#app/util/themes';\n\nimport Camera from '#app/component/library/icons/Camera';\nimport Video from '#app/component/library/icons/Video';\n\nimport ArticleAuthor from './ArticleAuthor';\nimport ArticleCapsule from './ArticleCapsule';\nimport ArticleHeadline from './ArticleHeadline';\nimport ArticleIcon from './ArticleIcon';\nimport ArticleImageNew from './ArticleImageNew';\nimport ArticleLead from './ArticleLead';\nimport ArticleRelated from './ArticleRelated';\nimport ArticleTitle from './ArticleTitle';\nimport {\n  articleItemHoverColor,\n  articleItemPrimaryColor,\n  relatedArticleIcon,\n} from './helpers';\nimport isSectionArticlePremiumThemed from './helpers/isSectionArticlePremiumThemed';\n\nexport const articleHeroBackground = ({ sectionTheme, theme: { color } }) =>\n  sectionTheme === 'premium'\n    ? color.premium.dark.canvas.card\n    : sectionTheme === 'climate'\n      ? color.climate.primary.base\n      : sectionTheme === 'sgi'\n        ? color.sgi.primary.base\n        : hex2rgba(color.primary.base, 0.8);\n\nconst Wrapper = styled.div``;\n\nconst ArticleHeroNew = styled(\n  ({\n    req,\n    res,\n    section,\n    className,\n    heroSrcset,\n    configuration,\n    hideWow,\n    data,\n    data: {\n      path,\n      titleShort,\n      title,\n      hero,\n      lead,\n      sections,\n      sponsorName,\n      premium,\n      capsuleSection,\n      capsuleHighlight,\n      isLiveBlog,\n      isLiveVideo,\n      relatedLinks,\n      showRelatedLinks,\n      showLead,\n      taboolaExcluded,\n      extra,\n    },\n    sectionTheme,\n    includeLead = false,\n    fromDMPU = false,\n    preloadImage = false,\n    fetchImagePriority,\n    isParentPremium,\n    isSideColumn,\n    imageCropRatio,\n    shouldRenderAsImageOverlay = false,\n  }) => {\n    const theme = getComponentTheme(data, configuration);\n    const videoArticle = isVideoHero(hero);\n    const articleIcon = ArticleIcon(videoArticle);\n    const isPremiumThemed = isSectionArticlePremiumThemed(\n      premium,\n      section,\n      req,\n      res,\n    );\n\n    return (\n      <Wrapper\n        className={getClassName(className, 'hero-article', {\n          'article-premium': isPremiumThemed,\n          'from-dmpu': fromDMPU,\n          [`article-${sectionTheme}`]: sectionTheme?.length > 0,\n          [CLASS_TABOOLA_EXCLUDED]: taboolaExcluded,\n          'article-image-overlay': shouldRenderAsImageOverlay,\n        })}\n      >\n        <ArticleImageNew\n          hero={hero}\n          heroSrcset={heroSrcset}\n          path={path}\n          preload={preloadImage}\n          fetchPriority={fetchImagePriority}\n          cropRatio={imageCropRatio}\n        />\n        <ArticleCapsule\n          $sectionTheme={sectionTheme}\n          sections={sections}\n          sponsorName={sponsorName}\n          override={capsuleSection}\n          highlight={capsuleHighlight}\n          isLiveBlog={isLiveBlog}\n          isLiveVideo={isLiveVideo}\n          sponsoredCapsule={extra?.isShowSponsoredCapsule}\n          hideWow={hideWow}\n          premium={isPremiumThemed}\n          path={path}\n        />\n        <div\n          className={getClassName('content', {\n            'content-media': theme !== 'voices' && articleIcon,\n            [CLASS_PREMIUM_BADGING]: isPremiumThemed,\n          })}\n        >\n          {theme !== 'voices' && articleIcon}\n          {/* To not include Author name on HeroPlusDMPU component on Premium sections */}\n          <ArticleHeadline\n            sectionTheme={sectionTheme}\n            premium={isPremiumThemed}\n          >\n            <ArticleTitle\n              path={path}\n              title={title}\n              titleShort={titleShort}\n              sectionTheme={sectionTheme}\n            />\n          </ArticleHeadline>\n          {includeLead && showLead && (\n            <ArticleLead className=\"lead\">{lead}</ArticleLead>\n          )}\n          {showRelatedLinks && relatedLinks && (\n            <ArticleRelated\n              relatedLinks={relatedLinks}\n              sectionTheme={sectionTheme}\n              isParentPremium={isPremiumThemed || isParentPremium}\n              isSideColumn={isSideColumn}\n            />\n          )}\n        </div>\n      </Wrapper>\n    );\n  },\n)`\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  .title,\n  .lead,\n  .lead p {\n    color: ${(props) => props.theme.color.dark.ink.base};\n  }\n\n  .capsules {\n    display: flex;\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n\n  .capsule {\n    display: flex;\n    padding: 6px 8px 4px;\n    color: ${(props) => props.theme.color.ink.inverted};\n    font-size: 12px;\n    letter-spacing: 0.26px;\n    line-height: 12px;\n  }\n\n  .capsule-highlight {\n    margin-right: 0;\n    background: ${(props) => props.theme.color.semiotic.live};\n    color: ${(props) => props.theme.color.ink.base};\n  }\n\n  .live-blog::before {\n    background-position: center;\n  }\n\n  .image-wrap {\n    display: flex;\n    width: 100%;\n    height: auto;\n    flex-direction: column;\n    flex-grow: 1;\n\n    amp-img,\n    img {\n      aspect-ratio: 3 / 2;\n    }\n\n    img {\n      display: block;\n    }\n  }\n\n  .placeholder {\n    img {\n      object-fit: cover;\n    }\n  }\n\n  .content {\n    ${({ theme }) => {\n      const color = theme.color.dark.canvas.card;\n      return css`\n        --content-bg: ${color};\n        --content-bg-opaque: ${hex2rgba(color, 0.7)};\n      `;\n    }}\n    position: relative;\n    width: 100%;\n    box-sizing: border-box;\n    padding: 8px;\n    background: var(--content-bg);\n\n    @media ${device.laptop} {\n      padding: 16px;\n    }\n\n    h2 {\n      letter-spacing: -0.0208em;\n    }\n  }\n\n  ${ArticleHeadline} {\n    margin: 0;\n    font-size: 24px;\n    font-weight: bold;\n    line-height: 28px;\n\n    .title {\n      color: ${(props) => props.theme.color.dark.ink.base};\n\n      &:hover {\n        color: ${articleItemHoverColor};\n      }\n    }\n  }\n\n  ${ArticleRelated}:empty {\n    display: none;\n  }\n\n  ${ArticleRelated} li::before {\n    background-image: url(${relatedArticleIcon});\n  }\n\n  ${ArticleRelated} a:hover {\n    color: ${articleItemHoverColor};\n  }\n\n  .content-media {\n    position: relative;\n    padding-top: 24px;\n  }\n\n  .lead {\n    padding-top: 8px;\n  }\n\n  .lead + ${ArticleRelated} {\n    margin-top: 12px;\n  }\n\n  .lead a {\n    color: ${articleItemPrimaryColor};\n\n    &:hover {\n      color: ${articleItemHoverColor};\n    }\n  }\n\n  .lead,\n  .lead p {\n    margin: 0;\n    font-family: ${(props) => props.theme.fontFamily.secondaryFont};\n    font-size: 14px;\n    font-weight: normal;\n    line-height: 18px;\n\n    @media ${device.laptop} {\n      font-size: 16px;\n      line-height: 20px;\n    }\n  }\n  ${Camera}, ${Video} {\n    display: flex;\n    position: absolute;\n    top: -15px;\n    left: 8px;\n    width: 32px;\n    height: 32px;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    background-color: ${articleHeroBackground};\n\n    @media ${device.tablet} {\n      left: 12px;\n    }\n\n    > svg {\n      width: 60%;\n      fill: ${(props) => props.theme.color.canvas.base};\n      stroke: transparent;\n    }\n  }\n  ${Video} {\n    > svg {\n      width: 80%;\n    }\n  }\n\n  ${ArticleRelated} {\n    margin-top: 8px;\n  }\n\n  &.from-dmpu {\n    .content {\n      @media ${device.maxTablet} {\n        position: relative;\n        background: ${(props) => props.theme.color.dark.canvas.base};\n        opacity: 1;\n      }\n    }\n  }\n\n  &.article-voices {\n    ${ArticleAuthor} {\n      &:hover {\n        color: ${(props) => props.theme.color.actionBrand.base};\n      }\n    }\n  }\n\n  &.article-premium {\n    .content {\n      ${({ theme }) => {\n        const color = theme.color.premium.dark.canvas.card;\n        return css`\n          --content-bg: ${color};\n          --content-bg-opaque: ${hex2rgba(color, 0.7)};\n        `;\n      }}\n      display: flex;\n      box-sizing: border-box;\n      flex-direction: column;\n\n      @media ${device.laptop} {\n        padding-bottom: 8px;\n      }\n    }\n\n    .${CLASS_PREMIUM_BADGING}::after {\n      margin-top: auto;\n      background-image: url(https://static.independent.co.uk/static-assets/logo-premium-light.svg);\n      color: ${({ theme }) => theme.color.premium.divider.brand};\n    }\n\n    .title:hover {\n      color: ${(props) => props.theme.color.premium.actionBrand.alt};\n    }\n\n    ${ArticleRelated} a:hover {\n      color: ${(props) => props.theme.color.premium.actionBrand.alt};\n    }\n\n    ${ArticleRelated} li::before {\n      background-image: url(/img/icons/related-links-premium-new.svg);\n    }\n\n    .capsule:not(.capsule-highlight) {\n      background-color: ${(props) => props.theme.color.premium.primary.base};\n    }\n\n    ${ArticleAuthor} {\n      display: block;\n      color: ${(props) => props.theme.color.actionBrand.base};\n      font-family: ${(props) => props.theme.fontFamily.secondaryFont};\n      font-size: 14px;\n      font-style: normal;\n      font-weight: bold;\n      line-height: 1.4em;\n      text-transform: uppercase;\n\n      &:hover {\n        color: ${(props) => props.theme.color.actionBrand.alt};\n      }\n    }\n    ${Camera}, ${Video} {\n      background: ${({ theme }) =>\n        hex2rgba(theme.color.premium.primary.base, 0.8)};\n    }\n\n    .lead a {\n      color: ${(props) => props.theme.color.premium.actionBrand.base};\n      font-weight: bold;\n\n      &:hover {\n        color: ${(props) => props.theme.color.premium.actionBrand.alt};\n      }\n    }\n  }\n\n  &.article-best {\n    .title {\n      .highlight {\n        color: ${(props) => props.theme.color.actionBrand.base};\n        font-family: ${(props) => props.theme.fontFamily.secondaryFont};\n        text-transform: uppercase;\n\n        &:hover {\n          color: ${(props) => props.theme.color.actionBrand.alt};\n        }\n      }\n    }\n  }\n\n  &.article-image-overlay {\n    @media ${device.tablet} {\n      --parent-width: ${breakPoints.tablet}px;\n      --parent-padding: ${({ theme }) => theme.spacing.x3}px;\n      --container-width: calc(var(--parent-width) - var(--parent-padding));\n      --three-by-two-image-ratio: calc(3 / 2);\n      --overlapping-point-default: ${breakPoints.mobileS / 2}px;\n      --image-content-overlapping-point: var(--overlapping-point-default);\n      --overlapping-point-without-gap: calc(\n        var(--image-content-overlapping-point) - 1px\n      );\n\n      .image-wrap {\n        flex-shrink: 0;\n      }\n\n      .content {\n        min-height: var(--image-content-overlapping-point);\n        box-sizing: border-box;\n        flex-shrink: 0;\n        background: linear-gradient(\n            to top,\n            var(--content-bg) var(--image-content-overlapping-point),\n            var(--content-bg-opaque) 100%\n          )\n          no-repeat;\n        transform: translateY(\n          calc(-100% + var(--overlapping-point-without-gap))\n        );\n      }\n    }\n\n    @media ${device.laptop} {\n      --parent-width: ${breakPoints.laptop}px;\n      --parent-padding: ${({ theme }) => theme.spacing.x4}px;\n    }\n  }\n`;\n\nArticleHeroNew.propTypes = {\n  req: PropTypes.object.isRequired,\n  res: PropTypes.object.isRequired,\n  section: PropTypes.object,\n  className: PropTypes.string,\n  heroSrcset: PropTypes.array,\n  configuration: PropTypes.object,\n  hideWow: PropTypes.bool,\n  sectionTheme: PropTypes.string,\n  includeLead: PropTypes.bool,\n  fromDMPU: PropTypes.bool,\n  preloadImage: PropTypes.bool,\n  fetchImagePriority: PropTypes.string,\n  isParentPremium: PropTypes.bool,\n  isSideColumn: PropTypes.bool,\n  imageCropRatio: PropTypes.string,\n  shouldRenderAsImageOverlay: PropTypes.bool,\n  data: PropTypes.shape({\n    path: PropTypes.string,\n    titleShort: PropTypes.string,\n    title: PropTypes.string,\n    hero: PropTypes.array,\n    lead: PropTypes.string,\n    sections: PropTypes.array,\n    sponsorName: PropTypes.string,\n    premium: PropTypes.bool,\n    capsuleSection: PropTypes.object,\n    capsuleHighlight: PropTypes.object,\n    isLiveBlog: PropTypes.bool,\n    isLiveVideo: PropTypes.bool,\n    relatedLinks: PropTypes.array,\n    showRelatedLinks: PropTypes.bool,\n    showLead: PropTypes.bool,\n    taboolaExcluded: PropTypes.bool,\n    extra: PropTypes.object,\n  }),\n};\n\nexport default styled(withRequest(ArticleHeroNew))``;\n","import PropTypes from 'prop-types';\nimport { useEffect, useRef, forwardRef } from 'react';\nimport { css, styled } from 'styled-components';\n\nimport { BUTTON_VARIANT_TERTIARY } from '@indy/ui/Button';\nimport {\n  MultiStepCardWithExtraSpacing,\n  CLASS_IS_ACTIVE,\n  InnerWrapper,\n  GoBackToPreviousStep,\n  Description,\n  TagLine,\n} from '@indy/ui/MultiStepCard';\n\nimport * as device from '#app/constants/devices';\n\nimport NewsletterForm from '../NewsletterForm';\nimport {\n  ONBOARDING_CONTINUE_BUTTON,\n  ONBOARDING_GO_BACK_BUTTON,\n} from '../Onboarding.constants';\n\nimport { ContinueButton } from './CardButtons';\n\nconst GoBackButton = styled(GoBackToPreviousStep).attrs({\n  variant: BUTTON_VARIANT_TERTIARY,\n})`\n  z-index: 2;\n  color: ${({ theme }) => theme.color.primary.base};\n`;\n\nconst Wrapper = styled(MultiStepCardWithExtraSpacing)`\n  max-height: calc(var(--card-inactive-top-position) * 2);\n\n  ${InnerWrapper} {\n    padding-bottom: calc(\n      var(--card-inactive-top-position) + ${({ theme }) => theme.spacing.x3}px\n    );\n  }\n\n  &.${CLASS_IS_ACTIVE} {\n    ${({ $myStep }) => `max-height: var(--card-${$myStep}-height);`}\n    box-shadow: none;\n\n    ${TagLine} {\n      display: block;\n    }\n  }\n\n  ${({ $isOnPreviousStep }) =>\n    $isOnPreviousStep &&\n    css`\n      box-shadow: 2px -2px 8px 0 ${({ theme }) => theme.color.shadow.dark};\n\n      ${TagLine} {\n        display: block;\n        font: ${({ theme }) =>\n          theme.textStyle.subscriptionConfirmationPage.cardTwoStepSubBeforeReg\n            .font};\n        letter-spacing: ${({ theme }) =>\n          theme.textStyle.subscriptionConfirmationPage.cardTwoStepSubBeforeReg\n            .letterSpacing};\n        opacity: 1;\n        text-transform: none;\n      }\n\n      @media ${device.tablet} {\n        box-shadow: 0 -10px 8px -8px ${({ theme }) => theme.color.shadow.dark};\n      }\n    `}\n\n  ${({ $hasThreeSteps }) =>\n    $hasThreeSteps &&\n    'margin-top: calc(var(--card-inactive-top-position) * -1);'}\n\n  @media ${device.tablet} {\n    ${ContinueButton} {\n      width: 364px;\n    }\n\n    &:not(.${CLASS_IS_ACTIVE}) {\n      ${Description} {\n        opacity: 0;\n      }\n    }\n  }\n\n  @media ${device.laptop} {\n    ${ContinueButton} {\n      width: 312px;\n    }\n  }\n`;\n\nconst NewsletterFormCard = forwardRef(function NewsletterFormCard(\n  {\n    currentStep,\n    myTabIndex,\n    totalSteps,\n    myStep,\n    isCardActive,\n    handleCurrentStepUpdate,\n    newsletters,\n    hasThreeSteps,\n  },\n  ref,\n) {\n  const goBackButtonRef = useRef(null);\n  const isOnFutureStep = currentStep > myStep;\n\n  useEffect(() => {\n    if (isOnFutureStep) {\n      goBackButtonRef.current?.focus();\n    }\n  }, [isOnFutureStep]);\n\n  return (\n    <Wrapper\n      currentStep={\n        currentStep !== myStep\n          ? 'Choose your newsletters'\n          : `Step ${myStep}/${totalSteps}`\n      }\n      title=\"Choose your newsletters\"\n      description=\"Receive the stories that matter, straight to your inbox. We've selected a few we think you'll like\"\n      isCardActive={isCardActive}\n      ref={ref}\n      $myStep={myStep}\n      $hasThreeSteps={hasThreeSteps}\n      $isOnPreviousStep={currentStep < myStep}\n      {...(isOnFutureStep && {\n        goBackToPreviousStep: (\n          <GoBackButton\n            ref={goBackButtonRef}\n            onClick={() => handleCurrentStepUpdate(myStep)}\n            tabIndex={isCardActive ? -1 : 0}\n            data-test={ONBOARDING_GO_BACK_BUTTON}\n          >\n            Go back to Newsletters\n          </GoBackButton>\n        ),\n      })}\n    >\n      <NewsletterForm\n        newsletters={newsletters}\n        cardPrimaryTabIndex={myTabIndex}\n      />\n      <ContinueButton\n        onClick={() => handleCurrentStepUpdate(myStep + 1)}\n        tabIndex={myTabIndex}\n        data-test={ONBOARDING_CONTINUE_BUTTON}\n      >\n        Continue\n      </ContinueButton>\n    </Wrapper>\n  );\n});\n\nNewsletterFormCard.propTypes = {\n  currentStep: PropTypes.number,\n  handleCurrentStepUpdate: PropTypes.func,\n  myTabIndex: PropTypes.number,\n  totalSteps: PropTypes.number,\n  myStep: PropTypes.number,\n  isCardActive: PropTypes.bool,\n  newsletters: PropTypes.array.isRequired,\n  hasThreeSteps: PropTypes.bool,\n};\n\nexport default NewsletterFormCard;\n","import dayjs from 'dayjs';\nimport { Fragment, useState } from 'react';\nimport { css, styled } from 'styled-components';\n\nimport * as device from '#app/constants/devices';\nimport { ID_TABOOLA_MID_ARTICLE_THUMBNAILS_LIVEBLOGS } from '#app/constants/taboola';\n\nimport { redirect } from '#app/public/js/utils/redirect';\n\nimport PostAd from './Ad';\nimport KeyPoints from './KeyPoints';\nimport MPU from './MPU';\nimport Pagination from './Pagination';\nimport Post from './Post';\nimport TaboolaAdWrapper from './TaboolaAdWrapper';\nimport UpdateButton from './UpdateButton';\nimport useInterval from './useInterval';\n\nimport type {\n  LiveBlog as LiveBlogProps,\n  Post as LiveBlogPost,\n} from '#types/liveBlog';\n\nconst POLL_INTERVAL_MS = 1000;\nconst AD_INTERVAL_POSTS = 3;\n\nconst Wrapper = styled.div`\n  margin: 20px 0;\n`;\n\nconst formatDateFromTimestamp = (timestamp: number) => {\n  const date = new Date(timestamp * 1000);\n  return dayjs(date).format('DD MMM YYYY HH:mm');\n};\n\ninterface KeyPointsWrapperProps {\n  $isSubscribed: boolean;\n}\n\nconst KeyPointsWrapper = styled.div<KeyPointsWrapperProps>`\n  ${(props) =>\n    props.$isSubscribed &&\n    css`\n      @media ${device.laptop} {\n        display: none;\n      }\n    `}\n`;\n\nconst LiveBlog = ({\n  initialPosts = [],\n  paging = { total: 0, posts: 0 },\n  keyPointsHTML,\n  keyPointsTitle = '',\n  sensitive,\n  adTitleText,\n  customProps,\n  adUnitPathPrefix,\n  currentPage,\n  status,\n  videoPlayerInfo,\n  lang,\n  liveBlogId,\n  isAdFreeUser,\n  isClimate,\n  isSGI,\n}: LiveBlogProps) => {\n  const { isSubscribed } = customProps;\n  const allowAds = !isSubscribed && !sensitive && !isAdFreeUser;\n  const [posts, setPosts] = useState(initialPosts);\n  const [pendingPosts, setPendingPosts] = useState<Array<LiveBlogPost>>([]);\n  const [lastChangedTimestamp, setLastChangedTimestamp] = useState(\n    initialPosts.reduce((acc, post) => Math.max(acc, post.timestamp), 0),\n  );\n\n  useInterval(async () => {\n    const response = await fetch(`/external-api/liveblog/${liveBlogId}`);\n    if (!response.ok) {\n      console.error('Failed to fetch liveblog posts');\n      return;\n    }\n    const data: {\n      posts: Array<LiveBlogPost>;\n    } = await response.json();\n    const newPosts = data.posts\n      .filter(\n        (post) =>\n          !posts.some((p) => p.data.id === post.data.id) &&\n          parseInt(post.data.created) > lastChangedTimestamp,\n      )\n      .map((post) => {\n        const timestamp = parseInt(post.data.created);\n        return {\n          ...post,\n          formattedTimestamp: formatDateFromTimestamp(timestamp),\n          timestamp,\n        };\n      });\n    setLastChangedTimestamp(\n      newPosts.reduce(\n        (acc, post) => Math.max(acc, post.timestamp),\n        lastChangedTimestamp,\n      ),\n    );\n    setPendingPosts([...newPosts, ...pendingPosts]);\n  }, POLL_INTERVAL_MS);\n\n  return (\n    <Wrapper>\n      <KeyPointsWrapper $isSubscribed={isSubscribed}>\n        <KeyPoints\n          title={keyPointsTitle}\n          html={keyPointsHTML}\n          isSubscribed={isSubscribed}\n          isClimate={isClimate}\n          isSGI={isSGI}\n        />\n      </KeyPointsWrapper>\n      {pendingPosts.length > 0 && (\n        <UpdateButton\n          onClick={() => {\n            if (currentPage > 1) {\n              // If we are on a page other than the first one, we need to reset the page to 1\n              const url = new URL(window.location.href);\n              url.searchParams.set('page', '1');\n\n              redirect(url.toString());\n            }\n            setPosts(\n              [...pendingPosts, ...posts].sort((a, b) =>\n                status === 1\n                  ? b.timestamp - a.timestamp\n                  : a.timestamp - b.timestamp,\n              ),\n            );\n            setPendingPosts([]);\n          }}\n        />\n      )}\n      {posts.map(({ data, postJson, timestamp, formattedTimestamp }, index) => {\n        const postNumber = index + 1;\n        const isTaboola = postNumber === AD_INTERVAL_POSTS * 3;\n        const isTaboolaMidArticleThumbs = postNumber === 1;\n        const postHasAd =\n          isTaboolaMidArticleThumbs || postNumber % AD_INTERVAL_POSTS === 0;\n        const showAd = allowAds && postHasAd;\n        const taboolID = isTaboolaMidArticleThumbs\n          ? ID_TABOOLA_MID_ARTICLE_THUMBNAILS_LIVEBLOGS\n          : null;\n\n        return (\n          <Fragment key={data.uuid}>\n            <Post\n              data={data}\n              contentItems={postJson}\n              customProps={customProps}\n              timestamp={timestamp}\n              formattedTimestamp={formattedTimestamp}\n              videoPlayerInfo={videoPlayerInfo}\n              lang={lang}\n            />\n            {showAd && (\n              <PostAd\n                className={!isTaboola ? 'mobile-only' : ''}\n                {...{ data, adTitleText }}\n              >\n                <TaboolaAdWrapper\n                  id={taboolID}\n                  withTaboola={isTaboola || isTaboolaMidArticleThumbs}\n                >\n                  <MPU\n                    adUnitPathPrefix={adUnitPathPrefix}\n                    name={`blog_mpu_${Math.round(\n                      postNumber / AD_INTERVAL_POSTS,\n                    )}`}\n                  />\n                </TaboolaAdWrapper>\n              </PostAd>\n            )}\n          </Fragment>\n        );\n      })}\n      {paging.total > paging.posts && (\n        <Pagination paging={paging} currentPage={currentPage} status={status} />\n      )}\n    </Wrapper>\n  );\n};\n\nexport default LiveBlog;\n","import PropTypes from 'prop-types';\n\nimport {\n  FullBleedContainer,\n  InsetLeftContainer,\n  InsetRightContainer,\n} from '@indy/ui/Layout';\nimport { MediaPlusPaddedCaption } from '@indy/ui/MediaPlusCaption';\nimport { maxTablet, maxLaptop, maxDesktop } from '@indy/ui/devices';\n\nimport { buildSrcset } from '#app/util/image';\nimport { minify } from '#app/util/taggedTemplates';\n\nimport { StyledImage } from './Image.styles';\nimport { ALIGN_NONE, ALIGN_CENTRE, ALIGN_LEFT, ALIGN_RIGHT } from './constants';\n\n/**\n * @todo generate widths and sizes based on cols once the grid system is in\n * place\n * @explain The current implementation is a temporary solution whilst we await\n * the grid system. The widths and sizes are read from the rendered containers\n */\nexport const FULL_BLEED_WIDTHS = [360, 768, 1000, 1250];\nexport const FULL_BLEED_SIZES = minify`\n  ${maxLaptop} 100vw,\n  ${maxDesktop} 1000px,\n  1250px\n`;\n\nconst INSET_WIDTHS = [360, 767, 492, 410, 514];\nconst INSET_SIZES = minify`\n  ${maxTablet} 100vw,\n  ${maxLaptop} 492px,\n  ${maxDesktop} 410px,\n  514px,\n`;\n\nconst InsetImage = ({\n  data,\n  heroLocalCaption,\n  heroLocalCopyright,\n  objectFit = null,\n  aspectRatio,\n}) => {\n  const {\n    align = ALIGN_NONE,\n    url,\n    alt,\n    localCaption,\n    localCopyright,\n    extra,\n  } = data || {};\n\n  const width = extra?.imageSize?.width;\n  const height = extra?.imageSize?.height;\n\n  const isInset = align === ALIGN_LEFT || align === ALIGN_RIGHT;\n  const widths = isInset ? INSET_WIDTHS : FULL_BLEED_WIDTHS;\n  const sizes = isInset ? INSET_SIZES : FULL_BLEED_SIZES;\n\n  const srcset = buildSrcset(url, widths, [1, 2]);\n\n  const imageCopyright = heroLocalCopyright || localCopyright;\n\n  const imageCaption = `${heroLocalCaption || localCaption || ''}${\n    imageCopyright ? ` (${imageCopyright})` : ''\n  }`;\n\n  const imagePlusCaption = (\n    <MediaPlusPaddedCaption caption={imageCaption}>\n      <StyledImage\n        src={url}\n        srcSet={srcset}\n        sizes={sizes}\n        alt={alt}\n        $objectFit={objectFit}\n        $aspectRatio={\n          aspectRatio ?? (width && height ? (width / height).toFixed(4) : null)\n        }\n      />\n    </MediaPlusPaddedCaption>\n  );\n\n  if (!url) {\n    return null;\n  }\n\n  switch (align) {\n    case ALIGN_LEFT:\n      return <InsetLeftContainer>{imagePlusCaption}</InsetLeftContainer>;\n    case ALIGN_RIGHT:\n      return <InsetRightContainer>{imagePlusCaption}</InsetRightContainer>;\n    default:\n      return <FullBleedContainer>{imagePlusCaption}</FullBleedContainer>;\n  }\n};\n\nInsetImage.propTypes = {\n  data: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n    alt: PropTypes.string,\n    align: PropTypes.oneOf([ALIGN_NONE, ALIGN_CENTRE, ALIGN_LEFT, ALIGN_RIGHT]),\n  }).isRequired,\n  heroLocalCaption: PropTypes.string,\n  heroLocalCopyright: PropTypes.string,\n  objectFit: PropTypes.string,\n  aspectRatio: PropTypes.number,\n};\n\nexport default InsetImage;\n","/* cspell:ignore requireable */\n\nimport {\n  REGEXP_MUSTACHE_PLACEHOLDER,\n  REGEXP_AMP_ACTION,\n  REGEXP_EMPTY_PARAGRAPH,\n  REGEXP_EMPTY_STRING,\n  REGEXP_URL_REMOTE,\n  REGEXP_URL_LOCAL,\n  REGEXP_PRICE,\n} from '#app/constants/regexps';\n\nimport { minify } from '#app/util/taggedTemplates';\n\nconst isFalsy = (value) => [undefined, null].includes(value);\n\n/**\n * \"Invalid prop `propName` supplied to `componentName`.\n * Expected `expected` e.g. `example`.\n * Received `received`.\"\n * @param {string} propName The name of the prop being validated\n * @param {string} componentName The name of the component being validated\n * @param {string} expected The expected prop-type\n * @param {string} [received] The actual prop-type\n * @param {string} [example] An example of the expected prop-type\n * @returns {string} Preformatted error message\n */\nconst message = (\n  propName,\n  componentName,\n  expected,\n  received = '',\n  example = '',\n) => minify`\n  Invalid prop \\`${propName}\\` supplied to ${componentName}.\n  Expected ${expected}${example ? ` e.g. \\`${example}\\`` : ''}.\n  Received ${received || typeof received}.\n`;\n\n/**\n * Validates prop values\n * @name PropTypesValidator\n * @function\n * @param {string} props Component props object\n * @param {string} propName Name of the prop being validated\n * @param {string} componentName Name of the component being validated\n * @link https://reactjs.org/docs/typechecking-with-proptypes.html\n */\n\n/**\n * Creates a prop-type with its corresponding 'required' alternative\n * @param {import('prop-types').Validator} validator PropTypes custom validator\n * @returns {import('prop-types').Requireable} Prop-type validator with\n * chainable \"isRequired\" version\n */\nfunction generatePropType(validator) {\n  const propType = (props, propName, componentName) => {\n    const value = props[propName];\n\n    if (isFalsy(value)) {\n      return;\n    }\n\n    return validator(props, propName, componentName);\n  };\n\n  propType.isRequired = (props, propName, componentName) => {\n    const value = props[propName];\n\n    if (isFalsy(value)) {\n      return new Error(minify`\n        The prop \\`${propName}\\` is marked as required\n        in \\`${componentName}\\`,\n        but its value is \\`${value}\\`.\n      `);\n    }\n\n    return validator(props, propName, componentName);\n  };\n\n  return propType;\n}\n\nconst validators = {\n  mustachePlaceholder(props, propName, componentName) {\n    if (!REGEXP_MUSTACHE_PLACEHOLDER.test(props[propName])) {\n      return new Error(\n        message(\n          propName,\n          componentName,\n          'mustache placeholder',\n          props[propName],\n          '{{foo}}',\n        ),\n      );\n    }\n  },\n  ampAction(props, propName, componentName) {\n    if (!REGEXP_AMP_ACTION.test(props[propName])) {\n      return new Error(\n        message(\n          propName,\n          componentName,\n          'AMP action',\n          props[propName],\n          '`tap:...` or `select:...`',\n        ),\n      );\n    }\n  },\n  meaningfulString(props, propName, componentName) {\n    const value = props[propName];\n    const meaningless = [REGEXP_EMPTY_PARAGRAPH, REGEXP_EMPTY_STRING];\n\n    if (typeof value !== 'string') {\n      return new Error(\n        message(propName, componentName, 'type `string`', typeof value),\n      );\n    }\n\n    if (meaningless.some((pattern) => pattern.test(value))) {\n      return new Error(\n        message(propName, componentName, 'meaningful content', value),\n      );\n    }\n  },\n  emptyString(props, propName, componentName) {\n    const value = props[propName];\n\n    if (typeof value !== 'string') {\n      return new Error(\n        message(propName, componentName, 'type `string`', typeof value),\n      );\n    }\n\n    if (!REGEXP_EMPTY_STRING.test(value)) {\n      return new Error(message(propName, componentName, 'empty string', value));\n    }\n  },\n  nonEmptyArray(props, propName, componentName) {\n    const value = props[propName];\n\n    if (!Array.isArray(value)) {\n      return new Error(\n        message(propName, componentName, 'type `Array`', typeof value),\n      );\n    }\n\n    if (value.length < 1) {\n      return new Error(message(propName, componentName, 'non-empty array'));\n    }\n  },\n  url(props, propName, componentName) {\n    if (\n      !REGEXP_URL_REMOTE.test(props[propName]) &&\n      !REGEXP_URL_LOCAL.test(props[propName])\n    ) {\n      return new Error(\n        message(\n          propName,\n          componentName,\n          'URL',\n          props[propName],\n          'http://sub.domain.tld` or `/internal/path',\n        ),\n      );\n    }\n  },\n  currency(props, propName, componentName) {\n    const value = props[propName];\n    const float = parseFloat(value);\n\n    if (isNaN(float) || !REGEXP_PRICE.test(value)) {\n      return new Error(\n        message(\n          propName,\n          componentName,\n          'A currency value without symbol',\n          props[propName],\n          '\"2.99\"` or `2.99` or `2',\n        ),\n      );\n    }\n  },\n};\n\nexport default Object.entries(validators).reduce(\n  (acc, [propType, validator]) => {\n    acc[propType] = generatePropType(validator);\n    return acc;\n  },\n  {},\n);\n\n/**\n * @callback ConditionCallback\n * @param {object} props\n * @returns {boolean}\n */\n\n/**\n * This function creates a prop-type that is required if the condition is met\n * @param {PropTypes.Requireable} requireable\n * @param {ConditionCallback} condition\n * @returns\n */\nexport const isRequiredIf =\n  (requireable, condition) => (props, propName, componentName) => {\n    if (condition(props)) {\n      return requireable.isRequired(props, propName, componentName);\n    }\n\n    return null;\n  };\n","import { minify } from '#app/util/taggedTemplates';\n\n/**\n * Custom prop-type helper function for element ID.\n * @param {bool} isRequired\n * @returns {import('prop-types').Requireable}\n */\nconst createType = (isRequired) => (props, propName, componentName) => {\n  const regex = /^[a-z][a-z0-9-_]*$/i;\n  const prop = props[propName];\n\n  if ([null, undefined].includes(prop) && isRequired) {\n    const value =\n      typeof prop === 'undefined' ? 'undefined' : JSON.stringify(prop);\n    return new Error(minify`\n      The prop ${propName} is marked as required in ${componentName}, but its value is ${value}\n    `);\n  }\n\n  if (!regex.test(prop)) {\n    return new Error(minify`\n        Invalid prop ${propName} supplied to ${componentName}.\n        The prop must contain digits, alphabets, hyphen and underscore only.\n      `);\n  }\n};\n\nconst Type = createType(false);\nType.isRequired = createType(true);\n\nexport const ElementIdType = Type;\n","import PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { createGlobalStyle, styled } from 'styled-components';\n\nimport { withRequest } from '@brightsites/flow-core/lib/providers/RequestProvider';\n\nimport * as device from '#app/constants/devices';\nimport { ID_REGISTER_FORM_WRAPPER } from '#app/constants/ids';\n\nimport AmpAuth from '#app/component/library/AmpAuth';\nimport { Breadcrumb } from '#app/component/library/Breadcrumb';\nimport ConditionalFrame from '#app/component/library/ConditionalFrame';\nimport AmpDrawer from '#app/component/library/Header/LoginDrawerAmp';\nimport {\n  RegisterForm,\n  USER_FLOW_REGISTER,\n} from '#app/component/library/Register';\nimport RegisterFormHeader from '#app/component/library/StaticPage/Register/RegisterFormHeader';\nimport SubscribeOffer from '#app/component/library/StaticPage/Register/SubscribeOffer';\nimport { EnabledSubsType } from '#app/component/library/Subscribe/Subscribe.types';\n\nconst GlobalStyle = createGlobalStyle`\n  .tp-close.tp-active,\n  .tp-modal .tp-close {\n    display: none !important;\n  }\n\n  .tp-modal-open .tp-modal {\n    position: fixed !important;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 830px;\n  box-sizing: border-box;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px 20px 24px 20px;\n  margin: 0 auto;\n  color: ${(props) => props.theme.color.ink.base};\n  font-family: ${(props) => props.theme.fontFamily.secondaryFont};\n\n  @media ${device.maxMobileL} {\n    padding-top: 12px;\n    padding-right: 12px;\n    padding-left: 12px;\n  }\n\n  .already-registered {\n    padding-top: 16px;\n    color: ${(props) => props.theme.color.ink.base};\n    font-size: 16px;\n    line-height: 20px;\n\n    button {\n      color: ${(props) => props.theme.color.actionBrand.base};\n      font-weight: bold;\n\n      &:hover {\n        color: ${(props) => props.theme.color.actionBrand.alt};\n      }\n    }\n  }\n`;\n\nconst Register = (props) => {\n  const { className, req, enabledSubs } = props;\n  const { query } = req;\n\n  const isDonation = Object.keys(query).includes('donations');\n  const showSubOffer = enabledSubs.premium && !isDonation;\n\n  const ConditionalLoginDrawer =\n    query && Object.prototype.hasOwnProperty.call(query, 'noframe') ? (\n      <>\n        <AmpAuth />\n        <AmpDrawer />\n      </>\n    ) : null;\n\n  return (\n    <ConditionalFrame className={className}>\n      <GlobalStyle />\n      <Helmet>\n        <title>Register</title>\n      </Helmet>\n\n      <Breadcrumb currentPage=\"Register\" className=\"registration-breadcrumb\" />\n      <RegisterFormHeader />\n\n      <Wrapper id={ID_REGISTER_FORM_WRAPPER}>\n        <RegisterForm\n          alreadyHasAccountMessage=\"This account already exists.<br /> Please enter your password to log in.\"\n          submitButtonCopy=\"Create my account\"\n          regSourceMethod={query.regSourceMethod}\n          regSourceSection={query.regSourceSection}\n          userFlowType={USER_FLOW_REGISTER}\n          offerId={query.offerId}\n          termId={query.termId}\n        />\n      </Wrapper>\n      {showSubOffer && <SubscribeOffer />}\n      {ConditionalLoginDrawer}\n    </ConditionalFrame>\n  );\n};\n\nRegister.propTypes = {\n  className: PropTypes.string,\n  req: PropTypes.object,\n  enabledSubs: EnabledSubsType,\n  partialUserData: PropTypes.object,\n};\n\nexport default styled(withRequest(Register))`\n  .registration-breadcrumb {\n    display: flex;\n    justify-content: center;\n    padding: 22px 0 16px 0;\n  }\n`;\n","import { css, styled } from 'styled-components';\n\nimport Button, {\n  BUTTON_SIZE_LARGE,\n  BUTTON_VARIANT_SECONDARY,\n} from '@indy/ui/Button';\nimport FeatureList, {\n  Wrapper as FeatureListItem,\n  IconWrapper,\n} from '@indy/ui/FeatureList';\nimport { TextInput } from '@indy/ui/Form';\nimport Icon, { SIZE_LARGE } from '@indy/ui/Icon';\nimport { MessageBannerError, CLASS_IS_ACTIVE } from '@indy/ui/MessageBanner';\n\nimport { ZINDEX_AUTOGALLERY_BUTTON } from '#app/constants/zIndex';\n\nimport { hex2rgba } from '#app/util/colours';\n\nimport {\n  Privacy,\n  RecaptchaPolicy,\n} from '#app/component/library/Register/RegisterForm/Policies';\nimport { StyledPolicies as Policies } from '#app/component/library/StaticPage/PaymentFlow/Confirmation/OnboardingJourney/Card/CompleteYourProfileForm/CompleteYourProfileForm.styles';\n\nimport LogoStamp from '#app/component/icons/logoStampSimple.svg';\n\nexport const Wrapper = styled.div`\n  --spacing: ${({ theme }) => theme.spacing.x2}px;\n  --border-radius: 16px;\n  position: relative;\n  z-index: ${ZINDEX_AUTOGALLERY_BUTTON + 1};\n  box-sizing: border-box;\n  padding: ${({ theme }) => theme.spacing.x2}px\n    ${({ theme }) => theme.spacing.x1_5}px;\n  margin-bottom: var(--spacing);\n  background-color: ${({ theme }) => theme.color.canvas.secondary};\n  border-top-left-radius: var(--border-radius);\n  border-top-right-radius: var(--border-radius);\n  box-shadow: 0px -22px 16px 22px ${({ theme: { color } }) => hex2rgba(color.canvas.base, 0.95)};\n`;\n\nexport const TitleLogoWrapper = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: ${({ theme }) => theme.spacing.x1}px;\n  margin-bottom: var(--spacing);\n`;\n\nexport const Title = styled.h2`\n  margin: 0;\n  color: ${({ theme }) => theme.color.ink.base};\n  font: ${({ theme }) => theme.textStyle.registerWall.variantThree.title.font};\n  letter-spacing: ${({ theme }) =>\n    theme.textStyle.registerWall.variantThree.title.letterSpacing};\n`;\n\nexport const TitleAccent = styled.span`\n  text-transform: uppercase;\n`;\n\nexport const LogoWrapper = styled.div`\n  flex-shrink: 0;\n`;\n\nexport const IndyLogo = styled(Icon).attrs({\n  svg: LogoStamp,\n  size: SIZE_LARGE,\n})``;\n\nexport const SubTitle = styled.p`\n  margin: 0 0 var(--spacing);\n  color: ${({ theme }) => theme.color.ink.base};\n  font: ${({ theme }) => theme.textStyle.registerWall.variantThree.subTitle};\n`;\n\nexport const FeatureListWrapper = styled.figure`\n  margin: 0 0 var(--spacing);\n`;\n\nexport const FeatureListTitle = styled.figcaption`\n  margin-bottom: ${({ theme }) => theme.spacing.x1}px;\n  color: ${({ theme }) => theme.color.ink.base};\n  font: ${({ theme }) =>\n    theme.textStyle.registerWall.variantThree.featureListTitle};\n`;\n\nexport const StyledFeatureList = styled(FeatureList)`\n  ${FeatureListItem} {\n    gap: ${({ theme }) => theme.spacing.x0_5}px;\n  }\n\n  ${IconWrapper} {\n    color: ${({ theme }) => theme.color.primary.base};\n  }\n`;\n\nexport const NonEmailFieldsWrapper = styled.div`\n  display: ${({ $hasSubmittedValidEmail }) =>\n    $hasSubmittedValidEmail ? 'block' : 'none'};\n  margin-bottom: ${({ theme }) => theme.spacing.x0_5}px;\n`;\n\nexport const EmailField = styled(TextInput)`\n  display: ${({ $hasSubmittedValidEmail }) =>\n    $hasSubmittedValidEmail ? 'none' : 'block'};\n  margin-bottom: ${({ theme }) => theme.spacing.x4}px;\n`;\n\nexport const CheckboxLabel = styled.span`\n  font: ${({ theme }) =>\n    theme.textStyle.registerWall.variantThree.checkboxLabel};\n`;\n\nexport const SubmitButton = styled(Button).attrs({\n  size: BUTTON_SIZE_LARGE,\n})`\n  margin-bottom: ${({ theme }) => theme.spacing.x3}px;\n`;\n\nexport const MaybeLaterButton = styled(Button).attrs({\n  size: BUTTON_SIZE_LARGE,\n  variant: BUTTON_VARIANT_SECONDARY,\n})`\n  margin-bottom: var(--spacing);\n`;\n\nexport const AlreadyHaveAnAccountLink = styled.a`\n  display: block;\n  width: 100%;\n  color: ${({ theme }) => theme.color.primary.base};\n  font: ${({ theme }) =>\n    theme.textStyle.registerWall.variantThree.alreadyHaveAnAccountLink};\n  text-align: center;\n  text-decoration: underline;\n`;\n\nexport const StyledPolicies = styled(Policies)`\n  margin-top: var(--spacing);\n\n  ${Privacy},\n  ${RecaptchaPolicy} {\n    text-align: left;\n\n    a {\n      font-weight: bold;\n    }\n  }\n`;\n\nexport const OptOutLink = styled.a`\n  color: inherit;\n  font-weight: bold;\n  text-decoration: underline;\n\n  &:hover {\n    color: inherit;\n  }\n`;\n\nexport const LoadingEllipsisWrapper = styled.div`\n  margin-bottom: var(--spacing);\n`;\n\nexport const StyledMessageBannerError = styled(MessageBannerError)`\n  ${({ $hasNoServerErrors }) =>\n    $hasNoServerErrors &&\n    css`\n      &.${CLASS_IS_ACTIVE} {\n        opacity: 0;\n        transform: translateY(-100%);\n      }\n    `}\n`;\n","import { css, styled } from 'styled-components';\n\nimport * as device from '#app/constants/devices';\n\nimport { isPdf } from '#app/util/edition';\n\nconst Wrapper = styled.a`\n  color: ${(props) => props.theme.color.editionPrimary};\n  border-top: 1px solid ${(props) => props.theme.color.editionPrimary};\n  width: 100%;\n\n  &:hover {\n    color: ${(props) => props.theme.color.editionPrimary};\n  }\n`;\n\nconst ContentBody = styled.div`\n  column-count: 1;\n  font-family: ${(props) => props.theme.fontFamily.editionRegularFont};\n  font-weight: 300;\n  column-gap: 16px;\n  em {\n    font-family: ${(props) => props.theme.fontFamily.editionLightItalicFont};\n  }\n  @media ${isPdf} {\n    column-count: 3;\n    column-fill: auto;\n    break-word: break-all;\n    overflow-wrap: anywhere;\n    &.col-fill {\n      height: 180px;\n      column-fill: auto;\n    }\n\n    &.col-balance {\n      column-fill: balance;\n    }\n  }\n`;\n\nconst Markup = styled.div`\n  font-size: 14px;\n  line-height: 15px;\n  font-weight: 400;\n  @media ${device.maxPdf} {\n    margin: 10px 0;\n  }\n  p,\n  div {\n    text-align: left;\n    margin: 0;\n    font-family: ${(props) => props.theme.fontFamily.editionRegularFont};\n    font-size: inherit;\n    line-height: 16px; /* fixed to this value, so the text column evenly distributed */\n  }\n`;\nconst Author = styled.div`\n  font-family: ${(props) => props.theme.fontFamily.editionSansBoldFont};\n  font-size: 13px;\n  line-height: 16px;\n  text-transform: uppercase;\n  padding: 2px 0;\n  margin-bottom: 10px;\n  border-top: 1px solid ${(props) => props.theme.color.editionPrimary};\n  border-bottom: 1px solid ${(props) => props.theme.color.editionPrimary};\n  column-span: 1;\n\n  .author-info {\n    font-weight: normal;\n    font-family: ${(props) => props.theme.fontFamily.editionSansLightFont};\n    display: block;\n  }\n\n  @media ${device.tideLaptop} {\n    font-size: 14px;\n  }\n`;\nconst Capsule = styled.div`\n  text-transform: uppercase;\n  font-family: ${(props) => props.theme.fontFamily.editionSansBoldFont};\n  color: ${(props) => props.theme.color.primary.base};\n  line-height: 16px;\n`;\nconst HeadlineWrapper = styled.div`\n  font-size: 52px;\n  line-height: 48px;\n`;\nexport const Headline = styled.h1`\n  text-align: center;\n  font-family: ${(props) => props.theme.fontFamily.editionSerifBoldFont};\n  margin: ${(props) => props.theme.spacing.x1_5}px 0\n    ${(props) => props.theme.spacing.x0_25}px;\n  font-size: 40px;\n  line-height: 40px;\n  font-weight: bold;\n  letter-spacing: -0.0162em;\n\n  &.size-small {\n    font-size: 35px;\n    line-height: 35px;\n    letter-spacing: -0.0185em;\n  }\n\n  &.size-large {\n    font-size: 45px;\n    line-height: 45px;\n    letter-spacing: -0.0144em;\n  }\n\n  @media ${isPdf} {\n    font-size: 70px;\n    line-height: 70px;\n    letter-spacing: -0.0092em;\n\n    &.size-small {\n      font-size: 60px;\n      line-height: 60px;\n      letter-spacing: -0.0108em;\n    }\n\n    &.size-large {\n      font-size: 80px;\n      line-height: 80px;\n      letter-spacing: -0.0081em;\n    }\n  }\n\n  .sport & {\n    font-size: 30px;\n    line-height: 32px;\n    font-weight: 500;\n    margin: 16px 0 14px;\n    letter-spacing: 0.3px;\n    @media ${isPdf} {\n      font-size: 0.8em;\n      line-height: 40px;\n      margin: 12px 0 20px;\n    }\n\n    &.article-2 {\n      margin-bottom: 10px;\n    }\n  }\n`;\n\nconst SubHeadline = styled.div`\n  text-align: center;\n  font-family: ${(props) => props.theme.fontFamily.editionMediumFont};\n  font-weight: 500;\n  margin-bottom: ${(props) => props.theme.spacing.x1_5}px;\n\n  p,\n  li {\n    font-size: 18px;\n    margin: 0;\n    line-height: 20px;\n    letter-spacing: -0.0277em;\n\n    li::before {\n      width: 14px;\n      height: 14px;\n    }\n  }\n\n  &.size-small {\n    p,\n    li {\n      font-size: 16px;\n      line-height: 18px;\n      letter-spacing: -0.0312em;\n    }\n\n    li::before {\n      width: 12px;\n      height: 12px;\n    }\n  }\n\n  &.size-large {\n    p,\n    li {\n      font-size: 20px;\n      line-height: 22px;\n      letter-spacing: -0.025em;\n    }\n\n    li::before {\n      width: 16px;\n      height: 16px;\n    }\n  }\n\n  @media ${isPdf} {\n    p,\n    li {\n      font-size: 20px;\n      line-height: 22px;\n      letter-spacing: -0.025em;\n\n      li::before {\n        width: 16px;\n        height: 16px;\n      }\n    }\n\n    &.size-small {\n      p,\n      li {\n        font-size: 18px;\n        line-height: 20px;\n        letter-spacing: -0.0277em;\n      }\n\n      li::before {\n        width: 14px;\n        height: 14px;\n      }\n    }\n\n    &.size-large {\n      p,\n      li {\n        font-size: 22px;\n        line-height: 24px;\n        letter-spacing: -0.0227em;\n      }\n\n      li::before {\n        width: 18px;\n        height: 18px;\n      }\n    }\n  }\n\n  ul {\n    list-style: none;\n    text-align: left;\n    margin: 0;\n    padding-left: 0;\n\n    li {\n      &:not(:last-child) {\n        margin-bottom: ${(props) => props.theme.spacing.x0_5}px;\n      }\n\n      &:before {\n        content: '';\n        position: relative;\n        background-color: ${(props) => props.theme.color.primary.base};\n        display: inline-block;\n        width: 16px;\n        height: 16px;\n        border-radius: 100%;\n        margin-right: 5px;\n        margin-top: 0;\n        top: 2px;\n      }\n    }\n  }\n`;\n\nconst WobTitle = styled.h3`\n  background-color: ${(props) => props.theme.color.primary.base};\n  padding: ${(props) => props.theme.spacing.x0_5}px\n    ${(props) => props.theme.spacing.x1}px;\n  color: ${(props) => props.theme.color.ink.inverted};\n  width: fit-content;\n  text-align: center;\n  margin: ${(props) => props.theme.spacing.x1_5}px auto 0;\n  font: bold 15px/15px ${(props) => props.theme.fontFamily.secondaryFont};\n  letter-spacing: -0.0333em;\n  text-transform: uppercase;\n\n  @media ${isPdf} {\n    font-size: 20px;\n    line-height: 20px;\n    letter-spacing: -0.025em;\n  }\n\n  ${({ theme }) =>\n    theme?.pdfMode &&\n    css`\n      @media ${device.pdf} {\n        /* for some reason the padding is not even when generated as a pdf by BrightSites\n          so we compensate with magic numbers until it looks even\n        */\n        padding-top: ${(props) => props.theme.spacing.x0_5 + 2}px;\n        padding-bottom: ${(props) => props.theme.spacing.x0_5 - 2}px;\n      }\n    `}\n`;\n\nconst TextSplashContent = styled((props) => {\n  const { className, data, isSport, headShotData = {} } = props;\n  const {\n    body,\n    author,\n    authorLocation,\n    capsule,\n    headline,\n    subheadline,\n    articleRef,\n    headlineSize = 'normal',\n    subheadlineSize = 'normal',\n  } = data;\n  const { headshots = [] } = headShotData;\n  const wobTitle = headshots.at(1)?.title;\n\n  return (\n    <Wrapper\n      className={className}\n      href={articleRef ? `../${articleRef.id}/index.html` : ''}\n    >\n      <HeadlineWrapper>\n        {wobTitle && <WobTitle>{wobTitle}</WobTitle>}\n        <Headline\n          className={\n            isSport\n              ? `headline sport size-${headlineSize}`\n              : `headline size-${headlineSize}`\n          }\n        >\n          {headline}\n        </Headline>\n        {subheadline && (\n          <SubHeadline\n            className={`size-${subheadlineSize}`}\n            dangerouslySetInnerHTML={{ __html: subheadline }}\n          />\n        )}\n      </HeadlineWrapper>\n      {body && (\n        <ContentBody\n          className={`body ${body.length > 300 ? 'col-balance' : 'col-fill'}`}\n        >\n          {author && (\n            <Author className={isSport ? 'author sport' : 'author'}>\n              {capsule && <Capsule>{capsule}</Capsule>}\n              {author} <span className=\"author-info\">{authorLocation}</span>\n            </Author>\n          )}\n          <Markup dangerouslySetInnerHTML={{ __html: body }} />\n        </ContentBody>\n      )}\n    </Wrapper>\n  );\n})``;\n\nexport default TextSplashContent;\n"],"names":[],"sourceRoot":""}