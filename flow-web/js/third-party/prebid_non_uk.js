/*
Please update the URL below if you make any module adjustments

Current prebid preselected modules bundle download page: https://docs.prebid.org/download.html?version=9.0.0&modules=consentManagement%2CenrichmentFpdModule%2CgdprEnforcement%2CgptPreAuction%2CpermutiveRtdProvider%2CadyoulikeBidAdapter%2CappnexusBidAdapter%2CcriteoBidAdapter%2CixBidAdapter%2CozoneBidAdapter%2CpubmaticBidAdapter%2CrubiconBidAdapter%2CgumgumBidAdapter%2CsharedIdSystem%2CgridBidAdapter%2CpubxaiAnalyticsAdapter%2CpriceFloors%2CjwplayerRtdProvider%2Cadpod%2CsizeMappingV2%2CdfpAdServerVideo%2Ccurrency%2CfledgeForGpt%2CkargoBidAdapter%2CconsentManagementGpp%2CconsentManagementUsp%2CgppControl_usnat%2CriseBidAdapter%2CvidazooBidAdapter%2CnextMillenniumBidAdapter%2CadagioBidAdapter%2CconsentManagementTcf%2CpaapiForGpt%2CttdBidAdapter%2CtcfControl%2CinvibesBidAdapter


Bidder Adapters: Ozone Project, AppNexus, PubMatic, Index Exchange, Criteo, Kargo, TheMediaGrid (grid), GumGum, Next Millennium, Rubicon Project (Magnite), AdYouLike, Pubxai, Rise, Vidazoo, Adagio, Trade Desk, Invibes

Recommended Modules: Consent Management - GDPR, Consent Management - GPP, Consent Management - US Privacy, First Party Data Enrichment, GDPR Enforcement, GPP Control - USNat, GPT Pre-Auction, TCF Control

General Modules: Adpod, Currency, Fledge for GPT, Price Floors, Advanced Size Mapping

Vendor-Specific Modules: Permutive Real Time Data Module, Google Ad Manager Video Support, JW Player video ad targeting
User ID Modules: SharedID

Make sure to update prebid.test.js 'Bundle Modules Test' suite after updating this file
*/
/* prebid.js v9.0.0
Updated: 2024-10-01
Modules: paapi, rtdModule, userId, adagioBidAdapter, adyoulikeBidAdapter, appnexusBidAdapter, criteoBidAdapter, gridBidAdapter, gumgumBidAdapter, invibesBidAdapter, ixBidAdapter, kargoBidAdapter, nextMillenniumBidAdapter, ozoneBidAdapter, pubmaticBidAdapter, riseBidAdapter, rubiconBidAdapter, ttdBidAdapter, vidazooBidAdapter, pubxaiAnalyticsAdapter, consentManagementGpp, consentManagementTcf, gppControl_usnat, gptPreAuction, tcfControl, adpod, consentManagementUsp, currency, priceFloors, paapiForGpt, sizeMappingV2, dfpAdServerVideo, jwplayerRtdProvider, permutiveRtdProvider, sharedIdSystem */
if (window.pbjs && window.pbjs.libLoaded)
  try {
    window.pbjs.getConfig('debug') &&
      console.warn(
        "Attempted to load a copy of Prebid.js that clashes with the existing 'pbjs' instance. Load aborted.",
      );
  } catch (e) {}
else
  (function () {
    (() => {
      var r,
        t = {
          70433: (r, t, e) => {
            function n(r, t, e, n, o) {
              for (t = t.split ? t.split('.') : t, n = 0; n < t.length; n++)
                r = r ? r[t[n]] : o;
              return r === o ? e : r;
            }
            e.d(t, { A: () => n });
          },
          68128: (r) => {
            /*
             * @license MIT
             * Fun Hooks v0.9.10
             * (c) @snapwich
             */
            (u.SYNC = 1), (u.ASYNC = 2), (u.QUEUE = 4);
            var t = 'fun-hooks';
            var e = Object.freeze({ useProxy: !0, ready: 0 }),
              n = new WeakMap(),
              o =
                '2,1,0' ===
                [1]
                  .reduce(function (r, t, e) {
                    return [r, t, e];
                  }, 2)
                  .toString()
                  ? Array.prototype.reduce
                  : function (r, t) {
                      var e,
                        n = Object(this),
                        o = n.length >>> 0,
                        i = 0;
                      if (t) e = t;
                      else {
                        for (; i < o && !(i in n); ) i++;
                        e = n[i++];
                      }
                      for (; i < o; ) i in n && (e = r(e, n[i], i, n)), i++;
                      return e;
                    };
            function i(r, t) {
              return Array.prototype.slice.call(r, t);
            }
            var f =
              Object.assign ||
              function (r) {
                return o.call(
                  i(arguments, 1),
                  function (r, t) {
                    return (
                      t &&
                        Object.keys(t).forEach(function (e) {
                          r[e] = t[e];
                        }),
                      r
                    );
                  },
                  r,
                );
              };
            function u(r) {
              var a,
                c = {},
                l = [];
              function p(r, t) {
                return 'function' == typeof r
                  ? h.call(null, 'sync', r, t)
                  : 'string' == typeof r && 'function' == typeof t
                    ? h.apply(null, arguments)
                    : 'object' == typeof r
                      ? y.apply(null, arguments)
                      : void 0;
              }
              function y(r, t, e) {
                var n = !0;
                void 0 === t && ((t = Object.getOwnPropertyNames(r)), (n = !1));
                var o = {},
                  i = ['constructor'];
                do {
                  (t = t.filter(function (t) {
                    return !(
                      'function' != typeof r[t] ||
                      -1 !== i.indexOf(t) ||
                      t.match(/^_/)
                    );
                  })).forEach(function (t) {
                    var n = t.split(':'),
                      i = n[0],
                      f = n[1] || 'sync';
                    if (!o[i]) {
                      var u = r[i];
                      o[i] = r[i] = h(f, u, e ? [e, i] : void 0);
                    }
                  }),
                    (r = Object.getPrototypeOf(r));
                } while (n && r);
                return o;
              }
              function s(r) {
                var e = Array.isArray(r) ? r : r.split('.');
                return o.call(
                  e,
                  function (n, o, i) {
                    var f = n[o],
                      u = !1;
                    return (
                      f ||
                      (i === e.length - 1
                        ? (a ||
                            l.push(function () {
                              u ||
                                console.warn(
                                  t +
                                    ": referenced '" +
                                    r +
                                    "' but it was never created",
                                );
                            }),
                          (n[o] = v(function (r) {
                            (n[o] = r), (u = !0);
                          })))
                        : (n[o] = {}))
                    );
                  },
                  c,
                );
              }
              function v(r) {
                var t = [],
                  e = [],
                  o = function () {},
                  i = {
                    before: function (r, e) {
                      return a.call(this, t, 'before', r, e);
                    },
                    after: function (r, t) {
                      return a.call(this, e, 'after', r, t);
                    },
                    getHooks: function (r) {
                      var n = t.concat(e);
                      'object' == typeof r &&
                        (n = n.filter(function (t) {
                          return Object.keys(r).every(function (e) {
                            return t[e] === r[e];
                          });
                        }));
                      try {
                        f(n, {
                          remove: function () {
                            return (
                              n.forEach(function (r) {
                                r.remove();
                              }),
                              this
                            );
                          },
                        });
                      } catch (r) {
                        console.error(
                          'error adding `remove` to array, did you modify Array.prototype?',
                        );
                      }
                      return n;
                    },
                    removeAll: function () {
                      return this.getHooks().remove();
                    },
                  },
                  u = {
                    install: function (n, i, f) {
                      (this.type = n), (o = f), f(t, e), r && r(i);
                    },
                  };
                return n.set(i.after, u), i;
                function a(r, n, i, f) {
                  var u = {
                    hook: i,
                    type: n,
                    priority: f || 10,
                    remove: function () {
                      var n = r.indexOf(u);
                      -1 !== n && (r.splice(n, 1), o(t, e));
                    },
                  };
                  return (
                    r.push(u),
                    r.sort(function (r, t) {
                      return t.priority - r.priority;
                    }),
                    o(t, e),
                    this
                  );
                }
              }
              function h(e, o, c) {
                var p = o.after && n.get(o.after);
                if (p) {
                  if (p.type !== e)
                    throw t + ': recreated hookable with different type';
                  return o;
                }
                var y,
                  h,
                  d = c ? s(c) : v(),
                  b = {
                    get: function (r, t) {
                      return d[t] || Reflect.get.apply(Reflect, arguments);
                    },
                  };
                return (
                  a || l.push(g),
                  r.useProxy && 'function' == typeof Proxy && Proxy.revocable
                    ? (h = new Proxy(o, b))
                    : ((h = function () {
                        return b.apply
                          ? b.apply(o, this, i(arguments))
                          : o.apply(this, arguments);
                      }),
                      f(h, d)),
                  n.get(h.after).install(e, h, function (r, t) {
                    var n,
                      o = [];
                    r.length || t.length
                      ? (r.forEach(f),
                        (n = o.push(void 0) - 1),
                        t.forEach(f),
                        (y = function (r, t, f) {
                          var u,
                            a = 0,
                            c =
                              'async' === e &&
                              'function' == typeof f[f.length - 1] &&
                              f.pop();
                          function l(r) {
                            'sync' === e
                              ? (u = r)
                              : c && c.apply(null, arguments);
                          }
                          function p(r) {
                            if (o[a]) {
                              var n = i(arguments);
                              return (
                                (p.bail = l), n.unshift(p), o[a++].apply(t, n)
                              );
                            }
                            'sync' === e
                              ? (u = r)
                              : c && c.apply(null, arguments);
                          }
                          return (
                            (o[n] = function () {
                              var n = i(arguments, 1);
                              'async' === e && c && (delete p.bail, n.push(p));
                              var o = r.apply(t, n);
                              'sync' === e && p(o);
                            }),
                            p.apply(null, f),
                            u
                          );
                        }))
                      : (y = void 0);
                    function f(r) {
                      o.push(r.hook);
                    }
                    g();
                  }),
                  h
                );
                function g() {
                  !a &&
                  ('sync' !== e || r.ready & u.SYNC) &&
                  ('async' !== e || r.ready & u.ASYNC)
                    ? 'sync' !== e && r.ready & u.QUEUE
                      ? (b.apply = function () {
                          var r = arguments;
                          l.push(function () {
                            h.apply(r[1], r[2]);
                          });
                        })
                      : (b.apply = function () {
                          throw t + ': hooked function not ready';
                        })
                    : (b.apply = y);
                }
              }
              return (
                (r = f({}, e, r)).ready
                  ? (p.ready = function () {
                      (a = !0),
                        (function (r) {
                          for (var t; (t = r.shift()); ) t();
                        })(l);
                    })
                  : (a = !0),
                (p.get = s),
                p
              );
            }
            r.exports = u;
          },
          63172: (r, t, e) => {
            function n(r, t, e) {
              t.split && (t = t.split('.'));
              for (
                var n, o, i = 0, f = t.length, u = r;
                i < f &&
                '__proto__' !== (o = t[i++]) &&
                'constructor' !== o &&
                'prototype' !== o;

              )
                u = u[o] =
                  i === f
                    ? e
                    : typeof (n = u[o]) == typeof t
                      ? n
                      : 0 * t[i] != 0 || ~('' + t[i]).indexOf('.')
                        ? {}
                        : [];
            }
            e.d(t, { J: () => n });
          },
          45751: (r, t, e) => {
            function n(r) {
              var t, e, o;
              if (Array.isArray(r)) {
                for (e = Array((t = r.length)); t--; )
                  e[t] = (o = r[t]) && 'object' == typeof o ? n(o) : o;
                return e;
              }
              if ('[object Object]' === Object.prototype.toString.call(r)) {
                for (t in ((e = {}), r))
                  '__proto__' === t
                    ? Object.defineProperty(e, t, {
                        value: n(r[t]),
                        configurable: !0,
                        enumerable: !0,
                        writable: !0,
                      })
                    : (e[t] = (o = r[t]) && 'object' == typeof o ? n(o) : o);
                return e;
              }
              return r;
            }
            e.d(t, { Q: () => n });
          },
        },
        e = {};
      function n(r) {
        var o = e[r];
        if (void 0 !== o) return o.exports;
        var i = (e[r] = { exports: {} });
        return t[r].call(i.exports, i, i.exports, n), i.exports;
      }
      (n.m = t),
        (r = []),
        (n.O = (t, e, o, i) => {
          if (!e) {
            var f = 1 / 0;
            for (l = 0; l < r.length; l++) {
              (e = r[l][0]), (o = r[l][1]), (i = r[l][2]);
              for (var u = !0, a = 0; a < e.length; a++)
                (!1 & i || f >= i) &&
                Object.keys(n.O).every((r) => n.O[r](e[a]))
                  ? e.splice(a--, 1)
                  : ((u = !1), i < f && (f = i));
              if (u) {
                r.splice(l--, 1);
                var c = o();
                void 0 !== c && (t = c);
              }
            }
            return t;
          }
          i = i || 0;
          for (var l = r.length; l > 0 && r[l - 1][2] > i; l--) r[l] = r[l - 1];
          r[l] = [e, o, i];
        }),
        (n.n = (r) => {
          var t = r && r.__esModule ? () => r.default : () => r;
          return n.d(t, { a: t }), t;
        }),
        (n.d = (r, t) => {
          for (var e in t)
            n.o(t, e) &&
              !n.o(r, e) &&
              Object.defineProperty(r, e, { enumerable: !0, get: t[e] });
        }),
        (n.g = (function () {
          if ('object' == typeof globalThis) return globalThis;
          try {
            return this || new Function('return this')();
          } catch (r) {
            if ('object' == typeof window) return window;
          }
        })()),
        (n.o = (r, t) => Object.prototype.hasOwnProperty.call(r, t)),
        (n.r = (r) => {
          'undefined' != typeof Symbol &&
            Symbol.toStringTag &&
            Object.defineProperty(r, Symbol.toStringTag, { value: 'Module' }),
            Object.defineProperty(r, '__esModule', { value: !0 });
        }),
        (() => {
          var r = { 39673: 0 };
          n.O.j = (t) => 0 === r[t];
          var t = (t, e) => {
              var o,
                i,
                f = e[0],
                u = e[1],
                a = e[2],
                c = 0;
              if (f.some((t) => 0 !== r[t])) {
                for (o in u) n.o(u, o) && (n.m[o] = u[o]);
                if (a) var l = a(n);
              }
              for (t && t(e); c < f.length; c++)
                (i = f[c]), n.o(r, i) && r[i] && r[i][0](), (r[i] = 0);
              return n.O(l);
            },
            e = (self.pbjsChunk = self.pbjsChunk || []);
          e.forEach(t.bind(null, 0)), (e.push = t.bind(null, e.push.bind(e)));
        })();
      var o = n.O(void 0, [60802, 51085], () => n(42627));
      o = n.O(o);
    })();
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [60802],
      {
        95789: (e, t, n) => {
          n.d(t, { A4: () => c, J7: () => l, Pg: () => u });
          var r = n(41580),
            i = n(91069),
            o = n(70433),
            s = n(15901);
          const a = (0, n(7873).m)(),
            d = 'outstream';
          function c(e) {
            const {
              url: t,
              config: n,
              id: c,
              callback: l,
              loaded: u,
              adUnitCode: g,
              renderNow: f,
            } = e;
            (this.url = t),
              (this.config = n),
              (this.handlers = {}),
              (this.id = c),
              (this.renderNow = f),
              (this.loaded = u),
              (this.cmd = []),
              (this.push = (e) => {
                'function' == typeof e
                  ? this.loaded
                    ? e.call()
                    : this.cmd.push(e)
                  : (0, i.logError)(
                      'Commands given to Renderer.push must be wrapped in a function',
                    );
              }),
              (this.callback =
                l ||
                (() => {
                  (this.loaded = !0), this.process();
                })),
              (this.render = function () {
                const e = arguments,
                  n = () => {
                    this._render
                      ? this._render.apply(this, e)
                      : (0, i.logWarn)(
                          'No render function was provided, please use .setRender on the renderer',
                        );
                  };
                !(function (e) {
                  const t = a.adUnits,
                    n = (0, s.I6)(t, (t) => t.code === e);
                  if (!n) return !1;
                  const r = (0, o.A)(n, 'renderer'),
                    i = !!(r && r.url && r.render),
                    d = (0, o.A)(n, 'mediaTypes.video.renderer'),
                    c = !!(d && d.url && d.render);
                  return !!(
                    (i && !0 !== r.backupOnly) ||
                    (c && !0 !== d.backupOnly)
                  );
                })(g)
                  ? f
                    ? n()
                    : (this.cmd.unshift(n),
                      (0, r.R)(t, d, this.callback, this.documentContext))
                  : ((0, i.logWarn)(
                      `External Js not loaded by Renderer since renderer url and callback is already defined on adUnit ${g}`,
                    ),
                    n());
              }.bind(this));
          }
          function l(e) {
            return !(!e || (!e.url && !e.renderNow));
          }
          function u(e, t, n) {
            let r = null;
            e.config &&
              e.config.documentResolver &&
              (r = e.config.documentResolver(t, document, n)),
              r || (r = document),
              (e.documentContext = r),
              e.render(t, e.documentContext);
          }
          (c.install = function (e) {
            let {
              url: t,
              config: n,
              id: r,
              callback: i,
              loaded: o,
              adUnitCode: s,
              renderNow: a,
            } = e;
            return new c({
              url: t,
              config: n,
              id: r,
              callback: i,
              loaded: o,
              adUnitCode: s,
              renderNow: a,
            });
          }),
            (c.prototype.getConfig = function () {
              return this.config;
            }),
            (c.prototype.setRender = function (e) {
              this._render = e;
            }),
            (c.prototype.setEventHandlers = function (e) {
              this.handlers = e;
            }),
            (c.prototype.handleVideoEvent = function (e) {
              let { id: t, eventName: n } = e;
              'function' == typeof this.handlers[n] && this.handlers[n](),
                (0, i.logMessage)(
                  `Prebid Renderer event for id ${t} type ${n}`,
                );
            }),
            (c.prototype.process = function () {
              for (; this.cmd.length > 0; )
                try {
                  this.cmd.shift().call();
                } catch (e) {
                  (0, i.logError)('Error processing Renderer command: ', e);
                }
            });
        },
        76811: (e, t, n) => {
          n.d(t, {
            DL: () => l,
            Ml: () => i,
            Ue: () => r,
            VJ: () => g,
            hE: () => u,
            hq: () => c,
            mo: () => d,
            qX: () => o,
            uc: () => a,
            yl: () => s,
          });
          const r = 'accessDevice',
            i = 'syncUser',
            o = 'enrichUfpd',
            s = 'enrichEids',
            a = 'fetchBids',
            d = 'reportAnalytics',
            c = 'transmitEids',
            l = 'transmitUfpd',
            u = 'transmitPreciseGeo',
            g = 'transmitTid';
        },
        83441: (e, t, n) => {
          n.d(t, { s: () => i });
          var r = n(11445);
          const i = (0, n(2604).ZI)((e) => r.Ay.resolveAlias(e));
        },
        45569: (e, t, n) => {
          n.d(t, {
            Tn: () => a,
            fW: () => o,
            tW: () => i,
            tp: () => r,
            zu: () => s,
          });
          const r = 'prebid',
            i = 'bidder',
            o = 'userId',
            s = 'rtd',
            a = 'analytics';
        },
        2604: (e, t, n) => {
          n.d(t, {
            Dk: () => s,
            Ii: () => o,
            TQ: () => f,
            U3: () => m,
            XG: () => l,
            ZI: () => p,
            Zw: () => c,
            bt: () => u,
            e3: () => g,
            iK: () => a,
            q7: () => d,
          });
          var r = n(45569),
            i = n(16833);
          const o = 'component',
            s = o + 'Type',
            a = o + 'Name',
            d = 'adapterCode',
            c = 'storageType',
            l = 'configName',
            u = 'syncType',
            g = 'syncUrl',
            f = '_config';
          function p(e) {
            return function (t, n, i) {
              const c = { [s]: t, [a]: n, [o]: `${t}.${n}` };
              return t === r.tW && (c[d] = e(n)), m(Object.assign(c, i));
            };
          }
          const m = (0, i.A_)('sync', (e) => e);
        },
        3066: (e, t, n) => {
          n.d(t, {
            $V: () => f,
            $p: () => h,
            Vx: () => d,
            ZP: () => m,
            l7: () => a,
            nl: () => u,
            p4: () => p,
            uD: () => g,
          });
          var r = n(70433),
            i = n(43272),
            o = n(95139),
            s = n(76811);
          const a = [
              'data',
              'ext.data',
              'yob',
              'gender',
              'keywords',
              'kwarray',
              'id',
              'buyeruid',
              'customdata',
            ]
              .map((e) => `user.${e}`)
              .concat('device.ext.cdep'),
            d = ['user.eids', 'user.ext.eids'],
            c = [
              'user.geo.lat',
              'user.geo.lon',
              'device.geo.lat',
              'device.geo.lon',
            ];
          function l(e) {
            return Object.assign(
              {
                get() {},
                run(e, t, n, r, i) {
                  const o = n && n[r];
                  if (f(o) && i()) {
                    const e = this.get(o);
                    void 0 === e ? delete n[r] : (n[r] = e);
                  }
                },
              },
              e,
            );
          }
          function u(e) {
            return (
              e.forEach((e) => {
                e.paths = e.paths.map((e) => {
                  const t = e.split('.'),
                    n = t.pop();
                  return [t.length > 0 ? t.join('.') : null, n];
                });
              }),
              function (t, n) {
                const i = [];
                for (
                  var o = arguments.length,
                    s = new Array(o > 2 ? o - 2 : 0),
                    a = 2;
                  a < o;
                  a++
                )
                  s[a - 2] = arguments[a];
                const d = g(t, ...s);
                return (
                  e.forEach((e) => {
                    if (!1 !== t[e.name])
                      for (const [o, s] of e.paths) {
                        const a = null == o ? n : (0, r.A)(n, o);
                        if (
                          (i.push(e.run(n, o, a, s, d.bind(null, e))),
                          !1 === t[e.name])
                        )
                          return;
                      }
                  }),
                  i.filter((e) => null != e)
                );
              }
            );
          }
          function g(e) {
            for (
              var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1;
              r < t;
              r++
            )
              n[r - 1] = arguments[r];
            return function (t) {
              return (
                e.hasOwnProperty(t.name) || (e[t.name] = !!t.applies(...n)),
                e[t.name]
              );
            };
          }
          function f(e) {
            return (
              null != e && ('object' != typeof e || Object.keys(e).length > 0)
            );
          }
          function p(e) {
            let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : o.io;
            return function (n) {
              return !t(e, n);
            };
          }
          function m() {
            let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : o.io;
            return [
              { name: s.DL, paths: a, applies: p(s.DL, e) },
              { name: s.hq, paths: d, applies: p(s.hq, e) },
              {
                name: s.hE,
                paths: c,
                applies: p(s.hE, e),
                get: (e) => Math.round(100 * (e + Number.EPSILON)) / 100,
              },
              { name: s.VJ, paths: ['source.tid'], applies: p(s.VJ, e) },
            ].map(l);
          }
          const h = (function () {
            let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : o.io;
            const t = u(m(e)),
              n = u(
                (function () {
                  let e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : o.io;
                  return [
                    {
                      name: s.hq,
                      paths: ['userId', 'userIdAsEids'],
                      applies: p(s.hq, e),
                    },
                    {
                      name: s.VJ,
                      paths: ['ortb2Imp.ext.tid'],
                      applies: p(s.VJ, e),
                    },
                  ].map(l);
                })(e),
              );
            return function (e) {
              const r = {};
              return {
                ortb2: (n) => (t(r, n, e), n),
                bidRequest: (t) => (n(r, t, e), t),
              };
            };
          })();
          (0, o.qB)(s.VJ, 'enableTIDs config', () => {
            if (!i.$W.getConfig('enableTIDs'))
              return { allow: !1, reason: 'TIDs are disabled' };
          });
        },
        95139: (e, t, n) => {
          n.d(t, { io: () => s, qB: () => o });
          var r = n(91069),
            i = n(2604);
          const [o, s] = (function () {
            let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : (0, r.prefixLog)('Activity control:');
            const t = {};
            function n(e) {
              return (t[e] = t[e] || []);
            }
            function o(t, n, r, o) {
              let s;
              try {
                s = r(o);
              } catch (r) {
                e.logError(`Exception in rule ${n} for '${t}'`, r),
                  (s = { allow: !1, reason: r });
              }
              return (
                s &&
                Object.assign({ activity: t, name: n, component: o[i.Ii] }, s)
              );
            }
            const s = {};
            function a(t) {
              let {
                activity: n,
                name: r,
                allow: i,
                reason: o,
                component: a,
              } = t;
              const d = `${r} ${i ? 'allowed' : 'denied'} '${n}' for '${a}'${
                  o ? ':' : ''
                }`,
                c = s.hasOwnProperty(d);
              if (
                (c && clearTimeout(s[d]),
                (s[d] = setTimeout(() => delete s[d], 1e3)),
                !c)
              ) {
                const t = [d];
                o && t.push(o), (i ? e.logInfo : e.logWarn).apply(e, t);
              }
            }
            return [
              function (e, t, r) {
                let i =
                  arguments.length > 3 && void 0 !== arguments[3]
                    ? arguments[3]
                    : 10;
                const o = n(e),
                  s = o.findIndex((e) => {
                    let [t] = e;
                    return i < t;
                  }),
                  a = [i, t, r];
                return (
                  o.splice(s < 0 ? o.length : s, 0, a),
                  function () {
                    const e = o.indexOf(a);
                    e >= 0 && o.splice(e, 1);
                  }
                );
              },
              function (e, t) {
                let r, i;
                for (const [s, d, c] of n(e)) {
                  if (r !== s && i) break;
                  r = s;
                  const n = o(e, d, c, t);
                  if (n) {
                    if (!n.allow) return a(n), !1;
                    i = n;
                  }
                }
                return i && a(i), !0;
              },
            ];
          })();
        },
        29075: (e, t, n) => {
          n.d(t, {
            $A: () => E,
            BS: () => R,
            Uc: () => w,
            _0: () => B,
            bw: () => k,
            n6: () => A,
            vW: () => C,
            vd: () => O,
          });
          var r = n(91069),
            i = n(70433),
            o = n(75023),
            s = n(78969),
            a = n(43272),
            d = n(95789),
            c = n(71371),
            l = n(67314),
            u = n(46031),
            g = n(16833),
            f = n(12449),
            p = n(25555);
          const {
              AD_RENDER_FAILED: m,
              AD_RENDER_SUCCEEDED: h,
              STALE_RENDER: b,
              BID_WON: y,
            } = s.qY,
            { EXCEPTION: v } = s.as,
            E = (0, g.A_)('sync', function (e) {
              return (
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : p.k.resolve()
              )
                .then((t) => t ?? l.n.findBidByAdId(e))
                .catch(() => {});
            }),
            A = (0, g.A_)('sync', function (e) {
              o.emit(y, e), l.n.addWinningBid(e);
            });
          function I(e) {
            let { reason: t, message: n, bid: i, id: s } = e;
            const a = { reason: t, message: n };
            i && ((a.bid = i), (a.adId = i.adId)),
              s && (a.adId = s),
              (0, r.logError)(`Error rendering ad (id: ${s}): ${n}`),
              o.emit(m, a);
          }
          function T(e) {
            let { doc: t, bid: n, id: r } = e;
            const i = { doc: t };
            n && (i.bid = n), r && (i.adId = r), o.emit(h, i);
          }
          function w(e, t) {
            switch (e.event) {
              case s.qY.AD_RENDER_FAILED:
                I({
                  bid: t,
                  id: t.adId,
                  reason: e.info.reason,
                  message: e.info.message,
                });
                break;
              case s.qY.AD_RENDER_SUCCEEDED:
                T({ doc: null, bid: t, id: t.adId });
                break;
              default:
                (0, r.logError)(
                  `Received event request for unsupported event: '${e.event}' (adId: '${t.adId}')`,
                );
            }
          }
          function C(e, t, n) {
            let { resizeFn: r, fireTrackers: i = f.vO } = n;
            if ('resizeNativeHeight' === e.action) r(e.width, e.height);
            else i(e, t);
          }
          const S = { [s.nl.EVENT]: w };
          S[s.nl.NATIVE] = C;
          const O = (0, g.A_)('sync', function (e, t) {
              const {
                  ad: n,
                  adUrl: i,
                  cpm: o,
                  originalCpm: s,
                  width: a,
                  height: d,
                } = e,
                c = { AUCTION_PRICE: s || o, CLICKTHROUGH: t?.clickUrl || '' };
              return {
                ad: (0, r.replaceMacros)(n, c),
                adUrl: (0, r.replaceMacros)(i, c),
                width: a,
                height: d,
              };
            }),
            B = (0, g.A_)('sync', function (e) {
              let { renderFn: t, resizeFn: n, bidResponse: r, options: i } = e;
              if (r.mediaType === c.G_)
                return void I({
                  reason: s.as.PREVENT_WRITING_ON_MAIN_DOCUMENT,
                  message: 'Cannot render video ad',
                  bid: r,
                  id: r.adId,
                });
              const o = O(r, i);
              t(Object.assign({ adId: r.adId }, o));
              const { width: a, height: d } = o;
              null != (a ?? d) && n(a, d);
            });
          function k(e) {
            let {
              renderFn: t,
              resizeFn: n,
              adId: d,
              options: c,
              bidResponse: l,
              doc: u,
            } = e;
            if (null != l) {
              if (
                l.status !== s.tl.RENDERED ||
                ((0, r.logWarn)(`Ad id ${d} has been rendered before`),
                o.emit(b, l),
                !(0, i.A)(
                  a.$W.getConfig('auctionOptions'),
                  'suppressStaleRender',
                ))
              ) {
                try {
                  B({
                    renderFn: t,
                    resizeFn: n,
                    bidResponse: l,
                    options: c,
                    doc: u,
                  });
                } catch (e) {
                  I({
                    reason: s.as.EXCEPTION,
                    message: e.message,
                    id: d,
                    bid: l,
                  });
                }
                A(l);
              }
            } else
              I({
                reason: s.as.CANNOT_FIND_AD,
                message: `Cannot find ad '${d}'`,
                id: d,
              });
          }
          function R(e, t, n) {
            let i;
            function o(e, n) {
              I(Object.assign({ id: t, bid: i }, { reason: e, message: n }));
            }
            function a(t, n) {
              e.defaultView &&
                e.defaultView.frameElement &&
                (t && (e.defaultView.frameElement.width = t),
                n && (e.defaultView.frameElement.height = n));
            }
            const d =
              ((c = { resizeFn: a }),
              function (e, t, n) {
                S.hasOwnProperty(e) && S[e](t, n, c);
              });
            var c;
            function l(t) {
              t.ad
                ? (e.write(t.ad),
                  e.close(),
                  T({ doc: e, bid: i, adId: i.adId }))
                : (0, u.H)(i)
                    .then((n) =>
                      n(
                        t,
                        {
                          sendMessage: (e, t) => d(e, t, i),
                          mkFrame: r.createIframe,
                        },
                        e.defaultView,
                      ),
                    )
                    .then(
                      () => T({ doc: e, bid: i, adId: i.adId }),
                      (e) => {
                        o(e?.reason || s.as.EXCEPTION, e?.message),
                          e?.stack && (0, r.logError)(e);
                      },
                    );
              const n = document.createComment(
                `Creative ${i.creativeId} served by ${i.bidder} Prebid.js Header Bidding`,
              );
              (0, r.insertElement)(n, e, 'html');
            }
            try {
              t && e
                ? e !== document || (0, r.inIframe)()
                  ? E(t).then((r) => {
                      (i = r),
                        k({
                          renderFn: l,
                          resizeFn: a,
                          adId: t,
                          options: { clickUrl: n?.clickThrough },
                          bidResponse: r,
                          doc: e,
                        });
                    })
                  : o(
                      s.as.PREVENT_WRITING_ON_MAIN_DOCUMENT,
                      'renderAd was prevented from writing to the main document.',
                    )
                : o(
                    s.as.MISSING_DOC_OR_ADID,
                    'missing ' + (t ? 'doc' : 'adId'),
                  );
            } catch (e) {
              o(v, e.message);
            }
          }
          B.before(function (e, t) {
            const { bidResponse: n, doc: r } = t;
            (0, d.J7)(n.renderer)
              ? ((0, d.Pg)(n.renderer, n, r),
                T({ doc: r, bid: n, id: n.adId }),
                e.bail())
              : e(t);
          }, 100);
        },
        10201: (e, t, n) => {
          n.d(t, { U: () => s });
          var r = n(7873),
            i = n(91069);
          const o = (0, r.m)();
          function s(e, t) {
            (o.adServers = o.adServers || {}),
              (o.adServers[e] = o.adServers[e] || {}),
              Object.keys(t).forEach((n) => {
                o.adServers[e][n]
                  ? (0, i.logWarn)(
                      `Attempting to add an already registered function property ${n} for AdServer ${e}.`,
                    )
                  : (o.adServers[e][n] = t[n]);
              });
          }
        },
        69759: (e, t, n) => {
          function r(e) {
            var t = e;
            return {
              callBids: function () {},
              setBidderCode: function (e) {
                t = e;
              },
              getBidderCode: function () {
                return t;
              },
            };
          }
          n.d(t, { A: () => r });
        },
        11445: (e, t, n) => {
          n.d(t, {
            S1: () => B,
            Ay: () => z,
            tS: () => x,
            pX: () => P,
            Mf: () => M,
            K5: () => q,
            Gs: () => W,
          });
          var r = n(91069),
            i = n(70433),
            o = n(12449),
            s = n(57377),
            a = n(68044),
            d = n(43272),
            c = n(16833),
            l = n(15901);
          let u = {};
          function g(e, t, n) {
            let r = (function (e, t) {
              let n = (u[e] = u[e] || { bidders: {} });
              return t ? (n.bidders[t] = n.bidders[t] || {}) : n;
            })(e, n);
            return (r[t] = (r[t] || 0) + 1), r[t];
          }
          function f(e) {
            return (0, i.A)(u, `${e}.requestsCounter`) || 0;
          }
          function p(e, t) {
            return (0, i.A)(u, `${e}.bidders.${t}.requestsCounter`) || 0;
          }
          function m(e, t) {
            return (0, i.A)(u, `${e}.bidders.${t}.winsCounter`) || 0;
          }
          var h = n(27934),
            b = n(16916),
            y = n(75023),
            v = n(78969),
            E = n(16894),
            A = n(67314),
            I = n(45569),
            T = n(95139),
            w = n(76811),
            C = n(2604),
            S = n(3066);
          const O = 'pbsBidAdapter',
            B = { CLIENT: 'client', SERVER: 'server' },
            k = { isAllowed: T.io, redact: S.$p };
          let R = {},
            U = (R.bidderRegistry = {}),
            D = (R.aliasRegistry = {}),
            _ = [];
          d.$W.getConfig('s2sConfig', (e) => {
            e &&
              e.s2sConfig &&
              (_ = (0, r.isArray)(e.s2sConfig) ? e.s2sConfig : [e.s2sConfig]);
          });
          var j = {};
          const $ = (0, C.ZI)((e) => R.resolveAlias(e));
          function q(e) {
            return $(I.tp, O, { [C.XG]: e.configName });
          }
          const N = (0, c.A_)(
            'sync',
            function (e) {
              let {
                bidderCode: t,
                auctionId: n,
                bidderRequestId: o,
                adUnits: s,
                src: a,
                metrics: d,
              } = e;
              return s
                .reduce((e, s) => {
                  const c = s.bids.filter((e) => e.bidder === t);
                  return (
                    null == t &&
                      0 === c.length &&
                      null != s.s2sBid &&
                      c.push({ bidder: null }),
                    e.push(
                      c.reduce((e, c) => {
                        const l =
                          null ==
                          (c = Object.assign(
                            {},
                            c,
                            {
                              ortb2Imp: (0, r.mergeDeep)(
                                {},
                                s.ortb2Imp,
                                c.ortb2Imp,
                              ),
                            },
                            (0, r.getDefinedParams)(s, [
                              'nativeParams',
                              'nativeOrtbRequest',
                              'mediaType',
                              'renderer',
                            ]),
                          )).mediaTypes
                            ? s.mediaTypes
                            : c.mediaTypes;
                        return (
                          (0, r.isValidMediaTypes)(l)
                            ? (c = Object.assign({}, c, { mediaTypes: l }))
                            : (0, r.logError)(
                                `mediaTypes is not correctly configured for adunit ${s.code}`,
                              ),
                          'client' === a &&
                            (function (e, t) {
                              g(e, 'requestsCounter', t);
                            })(s.code, t),
                          e.push(
                            Object.assign({}, c, {
                              adUnitCode: s.code,
                              transactionId: s.transactionId,
                              adUnitId: s.adUnitId,
                              sizes:
                                (0, i.A)(l, 'banner.sizes') ||
                                (0, i.A)(l, 'video.playerSize') ||
                                [],
                              bidId:
                                c.bid_id || (0, r.getUniqueIdentifierStr)(),
                              bidderRequestId: o,
                              auctionId: n,
                              src: a,
                              metrics: d,
                              bidRequestsCount: f(s.code),
                              bidderRequestsCount: p(s.code, c.bidder),
                              bidderWinsCount: m(s.code, c.bidder),
                            }),
                          ),
                          e
                        );
                      }, []),
                    ),
                    e
                  );
                }, [])
                .reduce(r.flatten, [])
                .filter((e) => '' !== e);
            },
            'getBids',
          );
          const x = (0, c.A_)(
            'sync',
            function (e, t) {
              let { getS2SBidders: n = P } =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : {};
              if (null == t) return e;
              {
                const r = n(t);
                return e.filter((e) => r.has(e.bidder));
              }
            },
            'filterBidsForAdUnit',
          );
          const W = (0, c.A_)('sync', (e, t) => e, 'setupAdUnitMediaTypes');
          function P(e) {
            (0, r.isArray)(e) || (e = [e]);
            const t = new Set([null]);
            return (
              e
                .filter((e) => e && e.enabled)
                .flatMap((e) => e.bidders)
                .forEach((e) => t.add(e)),
              t
            );
          }
          const M = (0, c.A_)(
            'sync',
            function (e, t) {
              let { getS2SBidders: n = P } =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : {};
              const i = n(t);
              return (0, r.getBidderCodes)(e).reduce(
                (e, t) => (e[i.has(t) ? B.SERVER : B.CLIENT].push(t), e),
                { [B.CLIENT]: [], [B.SERVER]: [] },
              );
            },
            'partitionBidders',
          );
          function G(e, t) {
            const n = U[e],
              r = n?.getSpec && n.getSpec();
            if (r && r[t] && 'function' == typeof r[t]) return [r, r[t]];
          }
          function L(e, t, n, i) {
            try {
              (0, r.logInfo)(`Invoking ${e}.${t}`);
              for (
                var o = arguments.length,
                  s = new Array(o > 4 ? o - 4 : 0),
                  a = 4;
                a < o;
                a++
              )
                s[a - 4] = arguments[a];
              d.$W.runWithBidder(e, i.bind(n, ...s));
            } catch (n) {
              (0, r.logWarn)(`Error calling ${t} of ${e}`);
            }
          }
          function F(e, t, n) {
            if (n?.src !== v.RW.SRC) {
              const r = G(e, t);
              null != r && L(e, t, ...r, n);
            }
          }
          (R.makeBidRequests = (0, c.A_)(
            'sync',
            function (e, t, n, i, s) {
              let a =
                  arguments.length > 5 && void 0 !== arguments[5]
                    ? arguments[5]
                    : {},
                c = arguments.length > 6 ? arguments[6] : void 0;
              (c = (0, E.BO)(c)),
                y.emit(v.qY.BEFORE_REQUEST_BIDS, e),
                (0, o.nk)(e),
                e.forEach((e) => {
                  (0, r.isPlainObject)(e.mediaTypes) || (e.mediaTypes = {}),
                    (e.bids = e.bids.filter(
                      (e) => !e.bidder || k.isAllowed(w.uc, $(I.tW, e.bidder)),
                    )),
                    g(e.code, 'requestsCounter');
                }),
                (e = W(e, s));
              let { [B.CLIENT]: u, [B.SERVER]: f } = M(e, _);
              d.$W.getConfig('bidderSequence') === d.Ov &&
                (u = (0, r.shuffle)(u));
              const p = (0, h.EN)();
              let m = [];
              const A = a.global || {},
                T = a.bidder || {};
              function C(e, t) {
                const i = k.redact(null != t ? t : $(I.tW, e.bidderCode)),
                  o = Object.freeze(
                    i.ortb2(
                      (0, r.mergeDeep)(
                        { source: { tid: n } },
                        A,
                        T[e.bidderCode],
                      ),
                    ),
                  );
                return (
                  (e.ortb2 = o),
                  (e.bids = e.bids.map(
                    (e) => ((e.ortb2 = o), i.bidRequest(e)),
                  )),
                  e
                );
              }
              _.forEach((i) => {
                const o = q(i);
                if (i && i.enabled && k.isAllowed(w.uc, o)) {
                  let { adUnits: s, hasModuleBids: a } = (function (e, t) {
                      let n = (0, r.deepClone)(e),
                        i = !1;
                      return (
                        n.forEach((e) => {
                          const n = e.bids.filter(
                            (e) =>
                              e.module === O &&
                              e.params?.configName === t.configName,
                          );
                          1 === n.length
                            ? ((e.s2sBid = n[0]),
                              (i = !0),
                              (e.ortb2Imp = (0, r.mergeDeep)(
                                {},
                                e.s2sBid.ortb2Imp,
                                e.ortb2Imp,
                              )))
                            : n.length > 1 &&
                              (0, r.logWarn)(
                                'Multiple "module" bids for the same s2s configuration; all will be ignored',
                                n,
                              ),
                            (e.bids = x(e.bids, t).map(
                              (e) => (
                                (e.bid_id = (0, r.getUniqueIdentifierStr)()), e
                              ),
                            ));
                        }),
                        (n = n.filter(
                          (e) => 0 !== e.bids.length || null != e.s2sBid,
                        )),
                        { adUnits: n, hasModuleBids: i }
                      );
                    })(e, i),
                    d = (0, r.generateUUID)();
                  (0 === f.length && a ? [null] : f).forEach((e) => {
                    const a = (0, r.getUniqueIdentifierStr)(),
                      l = c.fork(),
                      u = C(
                        {
                          bidderCode: e,
                          auctionId: n,
                          bidderRequestId: a,
                          uniquePbsTid: d,
                          bids: N({
                            bidderCode: e,
                            auctionId: n,
                            bidderRequestId: a,
                            adUnits: (0, r.deepClone)(s),
                            src: v.RW.SRC,
                            metrics: l,
                          }),
                          auctionStart: t,
                          timeout: i.timeout,
                          src: v.RW.SRC,
                          refererInfo: p,
                          metrics: l,
                        },
                        o,
                      );
                    0 !== u.bids.length && m.push(u);
                  }),
                    s.forEach((e) => {
                      let t = e.bids.filter((e) =>
                        (0, l.I6)(m, (t) =>
                          (0, l.I6)(t.bids, (t) => t.bidId === e.bid_id),
                        ),
                      );
                      e.bids = t;
                    }),
                    m.forEach((e) => {
                      void 0 === e.adUnitsS2SCopy &&
                        (e.adUnitsS2SCopy = s.filter(
                          (e) => e.bids.length > 0 || null != e.s2sBid,
                        ));
                    });
                }
              });
              let S = (function (e) {
                let t = (0, r.deepClone)(e);
                return (
                  t.forEach((e) => {
                    e.bids = x(e.bids, null);
                  }),
                  (t = t.filter((e) => 0 !== e.bids.length)),
                  t
                );
              })(e);
              return (
                u.forEach((e) => {
                  const o = (0, r.getUniqueIdentifierStr)(),
                    a = c.fork(),
                    d = C({
                      bidderCode: e,
                      auctionId: n,
                      bidderRequestId: o,
                      bids: N({
                        bidderCode: e,
                        auctionId: n,
                        bidderRequestId: o,
                        adUnits: (0, r.deepClone)(S),
                        labels: s,
                        src: 'client',
                        metrics: a,
                      }),
                      auctionStart: t,
                      timeout: i,
                      refererInfo: p,
                      metrics: a,
                    }),
                    l = U[e];
                  l ||
                    (0, r.logError)(
                      `Trying to make a request for bidder that does not exist: ${e}`,
                    ),
                    l && d.bids && 0 !== d.bids.length && m.push(d);
                }),
                m.forEach((e) => {
                  b.mW.getConsentData() &&
                    (e.gdprConsent = b.mW.getConsentData()),
                    b.t6.getConsentData() &&
                      (e.uspConsent = b.t6.getConsentData()),
                    b.ad.getConsentData() &&
                      (e.gppConsent = b.ad.getConsentData());
                }),
                m
              );
            },
            'makeBidRequests',
          )),
            (R.callBids = function (e, t, n, i, o, s, c) {
              let l =
                arguments.length > 7 && void 0 !== arguments[7]
                  ? arguments[7]
                  : {};
              if (!t.length)
                return void (0, r.logWarn)(
                  'callBids executed with no bidRequests.  Were they filtered by labels or sizing?',
                );
              let [u, g] = t.reduce(
                (e, t) => (
                  e[Number(void 0 !== t.src && t.src === v.RW.SRC)].push(t), e
                ),
                [[], []],
              );
              var f = [];
              g.forEach((e) => {
                for (var t = -1, n = 0; n < f.length; ++n)
                  if (e.uniquePbsTid === f[n].uniquePbsTid) {
                    t = n;
                    break;
                  }
                t <= -1 && f.push(e);
              });
              let p = 0;
              _.forEach((e) => {
                if (e && f[p] && P(e).has(f[p].bidderCode)) {
                  const t = (0, a.g4)(
                    s,
                    o
                      ? { request: o.request.bind(null, 's2s'), done: o.done }
                      : void 0,
                  );
                  let d = e.bidders;
                  const u = U[e.adapter];
                  let m = f[p].uniquePbsTid,
                    h = f[p].adUnitsS2SCopy,
                    b = g.filter((e) => e.uniquePbsTid === m);
                  if (u) {
                    let o = {
                      ad_units: h,
                      s2sConfig: e,
                      ortb2Fragments: l,
                      requestBidsTimeout: s,
                    };
                    if (o.ad_units.length) {
                      let e = b.map(
                        (e) => (
                          (e.start = (0, r.timestamp)()),
                          function (t) {
                            t || c(e.bidderRequestId), i.apply(e, arguments);
                          }
                        ),
                      );
                      const s = (0, r.getBidderCodes)(o.ad_units).filter((e) =>
                        d.includes(e),
                      );
                      (0, r.logMessage)(
                        `CALLING S2S HEADER BIDDERS ==== ${
                          s.length > 0
                            ? s.join(', ')
                            : 'No bidder specified, using "ortb2Imp" definition(s) only'
                        }`,
                      ),
                        b.forEach((e) => {
                          y.emit(v.qY.BID_REQUESTED, {
                            ...e,
                            tid: e.auctionId,
                          });
                        }),
                        u.callBids(o, g, n, (t) => e.forEach((e) => e(t)), t);
                    }
                  } else (0, r.logError)('missing ' + e.adapter);
                  p++;
                }
              }),
                u.forEach((e) => {
                  e.start = (0, r.timestamp)();
                  const t = U[e.bidderCode];
                  d.$W.runWithBidder(e.bidderCode, () => {
                    (0, r.logMessage)('CALLING BIDDER'),
                      y.emit(v.qY.BID_REQUESTED, e);
                  });
                  let l = (0, a.g4)(
                    s,
                    o
                      ? {
                          request: o.request.bind(null, e.bidderCode),
                          done: o.done,
                        }
                      : void 0,
                  );
                  const u = i.bind(e);
                  try {
                    d.$W.runWithBidder(
                      e.bidderCode,
                      t.callBids.bind(
                        t,
                        e,
                        n,
                        u,
                        l,
                        () => c(e.bidderRequestId),
                        d.$W.callbackWithBidder(e.bidderCode),
                      ),
                    );
                  } catch (t) {
                    (0, r.logError)(
                      `${e.bidderCode} Bid Adapter emitted an uncaught error when parsing their bidRequest`,
                      { e: t, bidRequest: e },
                    ),
                      u();
                  }
                });
            }),
            (R.videoAdapters = []),
            (R.registerBidAdapter = function (e, t) {
              let { supportedMediaTypes: n = [] } =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : {};
              e && t
                ? 'function' == typeof e.callBids
                  ? ((U[t] = e),
                    b.o2.register(I.tW, t, e.getSpec?.().gvlid),
                    (0, l.mK)(n, 'video') && R.videoAdapters.push(t),
                    (0, l.mK)(n, 'native') && o.mT.push(t))
                  : (0, r.logError)(
                      'Bidder adaptor error for bidder code: ' +
                        t +
                        'bidder must implement a callBids() function',
                    )
                : (0, r.logError)('bidAdapter or bidderCode not specified');
            }),
            (R.aliasBidAdapter = function (e, t, n) {
              if (void 0 === U[t]) {
                let i = U[e];
                if (void 0 === i) {
                  const n = [];
                  _.forEach((r) => {
                    if (r.bidders && r.bidders.length) {
                      const i = r && r.bidders;
                      r && (0, l.mK)(i, t) ? (D[t] = e) : n.push(e);
                    }
                  }),
                    n.forEach((e) => {
                      (0, r.logError)(
                        'bidderCode "' + e + '" is not an existing bidder.',
                        'adapterManager.aliasBidAdapter',
                      );
                    });
                } else
                  try {
                    let a,
                      d = (function (e) {
                        let t = [];
                        return (
                          (0, l.mK)(R.videoAdapters, e) && t.push('video'),
                          (0, l.mK)(o.mT, e) && t.push('native'),
                          t
                        );
                      })(e);
                    if (i.constructor.prototype != Object.prototype)
                      (a = new i.constructor()), a.setBidderCode(t);
                    else {
                      let o = i.getSpec(),
                        d = n && n.gvlid;
                      null != o.gvlid &&
                        null == d &&
                        (0, r.logWarn)(
                          `Alias '${t}' will NOT re-use the GVL ID of the original adapter ('${o.code}', gvlid: ${o.gvlid}). Functionality that requires TCF consent may not work as expected.`,
                        );
                      let c = n && n.skipPbsAliasing;
                      (a = (0, s.xb)(
                        Object.assign({}, o, {
                          code: t,
                          gvlid: d,
                          skipPbsAliasing: c,
                        }),
                      )),
                        (D[t] = e);
                    }
                    R.registerBidAdapter(a, t, { supportedMediaTypes: d });
                  } catch (t) {
                    (0, r.logError)(
                      e + ' bidder does not currently support aliasing.',
                      'adapterManager.aliasBidAdapter',
                    );
                  }
              } else
                (0, r.logMessage)(
                  'alias name "' + t + '" has been already specified.',
                );
            }),
            (R.resolveAlias = function (e) {
              let t,
                n = e;
              for (; D[n] && (!t || !t.has(n)); )
                (n = D[n]), (t = t || new Set()).add(n);
              return n;
            }),
            (R.registerAnalyticsAdapter = function (e) {
              let { adapter: t, code: n, gvlid: i } = e;
              t && n
                ? 'function' == typeof t.enableAnalytics
                  ? ((t.code = n),
                    (j[n] = { adapter: t, gvlid: i }),
                    b.o2.register(I.Tn, n, i))
                  : (0, r.logError)(
                      `Prebid Error: Analytics adaptor error for analytics "${n}"\n        analytics adapter must implement an enableAnalytics() function`,
                    )
                : (0, r.logError)(
                    'Prebid Error: analyticsAdapter or analyticsCode not specified',
                  );
            }),
            (R.enableAnalytics = function (e) {
              (0, r.isArray)(e) || (e = [e]),
                e.forEach((e) => {
                  const t = j[e.provider];
                  t && t.adapter
                    ? k.isAllowed(w.mo, $(I.Tn, e.provider, { [C.TQ]: e })) &&
                      t.adapter.enableAnalytics(e)
                    : (0, r.logError)(
                        `Prebid Error: no analytics adapter found in registry for '${e.provider}'.`,
                      );
                });
            }),
            (R.getBidAdapter = function (e) {
              return U[e];
            }),
            (R.getAnalyticsAdapter = function (e) {
              return j[e];
            }),
            (R.callTimedOutBidders = function (e, t, n) {
              (t = t.map(
                (t) => (
                  (t.params = (0, r.getUserConfiguredParams)(
                    e,
                    t.adUnitCode,
                    t.bidder,
                  )),
                  (t.timeout = n),
                  t
                ),
              )),
                (t = (0, r.groupBy)(t, 'bidder')),
                Object.keys(t).forEach((e) => {
                  F(e, 'onTimeout', t[e]);
                });
            }),
            (R.callBidWonBidder = function (e, t, n) {
              var i, o;
              (t.params = (0, r.getUserConfiguredParams)(
                n,
                t.adUnitCode,
                t.bidder,
              )),
                (i = t.adUnitCode),
                (o = t.bidder),
                g(i, 'winsCounter', o),
                F(e, 'onBidWon', t);
            }),
            (R.callBidBillableBidder = function (e) {
              F(e.bidder, 'onBidBillable', e);
            }),
            (R.callSetTargetingBidder = function (e, t) {
              F(e, 'onSetTargeting', t);
            }),
            (R.callBidViewableBidder = function (e, t) {
              F(e, 'onBidViewable', t);
            }),
            (R.callBidderError = function (e, t, n) {
              F(e, 'onBidderError', { error: t, bidderRequest: n });
            }),
            (R.callDataDeletionRequest = (0, c.A_)('sync', function () {
              for (
                var e = arguments.length, t = new Array(e), n = 0;
                n < e;
                n++
              )
                t[n] = arguments[n];
              const i = 'onDataDeletionRequest';
              Object.keys(U)
                .filter((e) => !D.hasOwnProperty(e))
                .forEach((e) => {
                  const n = G(e, i);
                  if (null != n) {
                    const r = A.n.getBidsRequested().filter(
                      (t) =>
                        (function (e) {
                          const t = new Set();
                          for (; D.hasOwnProperty(e) && !t.has(e); )
                            t.add(e), (e = D[e]);
                          return e;
                        })(t.bidderCode) === e,
                    );
                    L(e, i, ...n, r, ...t);
                  }
                }),
                Object.entries(j).forEach((e) => {
                  let [n, o] = e;
                  const s = o?.adapter?.[i];
                  if ('function' == typeof s)
                    try {
                      s.apply(o.adapter, t);
                    } catch (e) {
                      (0, r.logError)(`error calling ${i} of ${n}`, e);
                    }
                });
            }));
          const z = R;
        },
        57377: (e, t, n) => {
          n.d(t, { JN: () => k, a$: () => w, fn: () => R, xb: () => C });
          var r = n(69759),
            i = n(11445),
            o = n(43272),
            s = n(93597),
            a = n(38230),
            d = n(12449),
            c = n(63895),
            l = n(78969),
            u = n(75023),
            g = n(15901),
            f = n(91069),
            p = n(16833),
            m = n(67314),
            h = n(12693),
            b = n(16894),
            y = n(95139),
            v = n(83441),
            E = n(45569),
            A = n(76811);
          const I = ['cpm', 'ttl', 'creativeId', 'netRevenue', 'currency'],
            T = ['auctionId', 'transactionId'];
          function w(e) {
            const t = Array.isArray(e.supportedMediaTypes)
              ? { supportedMediaTypes: e.supportedMediaTypes }
              : void 0;
            function n(e) {
              const n = C(e);
              i.Ay.registerBidAdapter(n, e.code, t);
            }
            n(e),
              Array.isArray(e.aliases) &&
                e.aliases.forEach((t) => {
                  let r,
                    o,
                    s = t;
                  (0, f.isPlainObject)(t) &&
                    ((s = t.code), (r = t.gvlid), (o = t.skipPbsAliasing)),
                    (i.Ay.aliasRegistry[s] = e.code),
                    n(
                      Object.assign({}, e, {
                        code: s,
                        gvlid: r,
                        skipPbsAliasing: o,
                      }),
                    );
                });
          }
          function C(e) {
            return Object.assign(new r.A(e.code), {
              getSpec: function () {
                return Object.freeze(Object.assign({}, e));
              },
              registerSyncs: t,
              callBids: function (n, r, a, d, c, g) {
                if (!Array.isArray(n.bids)) return;
                const p = (function (e) {
                    if ((0, y.io)(A.VJ, (0, v.s)(E.tW, e)))
                      return { bidRequest: (e) => e, bidderRequest: (e) => e };
                    function t(e, t, n) {
                      return T.includes(t) ? null : Reflect.get(e, t, n);
                    }
                    function n(e, t) {
                      const n = new Proxy(e, t);
                      return (
                        Object.entries(e)
                          .filter((e) => {
                            let [t, n] = e;
                            return 'function' == typeof n;
                          })
                          .forEach((t) => {
                            let [r, i] = t;
                            return (n[r] = i.bind(e));
                          }),
                        n
                      );
                    }
                    const r = (0, f.memoize)(
                      (e) => n(e, { get: t }),
                      (e) => e.bidId,
                    );
                    return {
                      bidRequest: r,
                      bidderRequest: (e) =>
                        n(e, {
                          get: (n, i, o) =>
                            'bids' === i ? e.bids.map(r) : t(n, i, o),
                        }),
                    };
                  })(n.bidderCode),
                  m = {};
                const I = [];
                function w() {
                  a(),
                    o.$W.runWithBidder(e.code, () => {
                      u.emit(l.qY.BIDDER_DONE, n),
                        t(I, n.gdprConsent, n.uspConsent, n.gppConsent);
                    });
                }
                const C = U(n).measureTime('validate', () =>
                  n.bids.filter((t) =>
                    (function (t) {
                      if (!e.isBidRequestValid(t))
                        return (
                          (0, f.logWarn)(
                            `Invalid bid sent to bidder ${
                              e.code
                            }: ${JSON.stringify(t)}`,
                          ),
                          !1
                        );
                      return !0;
                    })(p.bidRequest(t)),
                  ),
                );
                if (0 === C.length) return void w();
                const S = {};
                C.forEach((e) => {
                  (S[e.bidId] = e),
                    e.adUnitCode || (e.adUnitCode = e.placementCode);
                }),
                  O(e, C.map(p.bidRequest), p.bidderRequest(n), d, g, {
                    onRequest: (e) => u.emit(l.qY.BEFORE_BIDDER_HTTP, n, e),
                    onResponse: (t) => {
                      c(e.code), I.push(t);
                    },
                    onPaapi: (e) => {
                      const t = S[e.bidId];
                      t
                        ? k(t, e)
                        : (0, f.logWarn)(
                            'Received fledge auction configuration for an unknown bidId',
                            e,
                          );
                    },
                    onError: (t, r) => {
                      r.timedOut || c(e.code),
                        i.Ay.callBidderError(e.code, r, n),
                        u.emit(l.qY.BIDDER_ERROR, {
                          error: r,
                          bidderRequest: n,
                        }),
                        (0, f.logError)(
                          `Server call for ${e.code} failed: ${t} ${r.status}. Continuing without bids.`,
                        );
                    },
                    onBid: (t) => {
                      const n = S[t.requestId];
                      if (n) {
                        if (
                          ((t.adapterCode = n.bidder),
                          (function (e, t) {
                            let n =
                                h.u.get(t, 'allowAlternateBidderCodes') || !1,
                              r = h.u.get(t, 'allowedAlternateBidderCodes');
                            if (
                              e &&
                              t &&
                              t !== e &&
                              ((r = (0, f.isArray)(r)
                                ? r
                                    .map((e) => e.trim().toLowerCase())
                                    .filter((e) => !!e)
                                    .filter(f.uniques)
                                : r),
                              !n ||
                                ((0, f.isArray)(r) &&
                                  '*' !== r[0] &&
                                  !r.includes(e)))
                            )
                              return !0;
                            return !1;
                          })(t.bidderCode, n.bidder))
                        )
                          return (
                            (0, f.logWarn)(
                              `${t.bidderCode} is not a registered partner or known bidder of ${n.bidder}, hence continuing without bid. If you wish to support this bidder, please mark allowAlternateBidderCodes as true in bidderSettings.`,
                            ),
                            void r.reject(
                              n.adUnitCode,
                              t,
                              l.Tf.BIDDER_DISALLOWED,
                            )
                          );
                        (t.originalCpm = t.cpm),
                          (t.originalCurrency = t.currency),
                          (t.meta = t.meta || Object.assign({}, t[n.bidder]));
                        const e = Object.assign(
                          (0, s.O)(l.XQ.GOOD, n),
                          t,
                          (0, f.pick)(n, T),
                        );
                        !(function (e, t) {
                          const n = (0, b.BO)(t.metrics);
                          n.checkpoint('addBidResponse'),
                            (m[e] = !0),
                            n.measureTime('addBidResponse.validate', () =>
                              R(e, t),
                            )
                              ? r(e, t)
                              : r.reject(e, t, l.Tf.INVALID);
                        })(n.adUnitCode, e);
                      } else
                        (0, f.logWarn)(
                          `Bidder ${e.code} made bid for unknown request ID: ${t.requestId}. Ignoring.`,
                        ),
                          r.reject(null, t, l.Tf.INVALID_REQUEST_ID);
                    },
                    onCompletion: w,
                  });
              },
            });
            function t(t, n, r, i) {
              B(e, t, n, r, i);
            }
          }
          const S = ['bids', 'paapi'],
            O = (0, p.A_)(
              'sync',
              function (e, t, n, r, i, o) {
                let {
                  onRequest: s,
                  onResponse: a,
                  onPaapi: d,
                  onError: c,
                  onBid: l,
                  onCompletion: u,
                } = o;
                const g = U(n);
                u = g.startTiming('total').stopBefore(u);
                let p = g.measureTime('buildRequests', () =>
                  e.buildRequests(t, n),
                );
                if (!p || 0 === p.length) return void u();
                Array.isArray(p) || (p = [p]);
                const m = (0, f.delayExecution)(u, p.length);
                p.forEach((t) => {
                  const n = g.fork();
                  function o(e) {
                    null != e && (e.metrics = n.fork().renameWith()), l(e);
                  }
                  const u = i(function (r, i) {
                      b();
                      try {
                        r = JSON.parse(r);
                      } catch (e) {}
                      (r = {
                        body: r,
                        headers: { get: i.getResponseHeader.bind(i) },
                      }),
                        a(r);
                      try {
                        r = n.measureTime('interpretResponse', () =>
                          e.interpretResponse(r, t),
                        );
                      } catch (t) {
                        return (
                          (0, f.logError)(
                            `Bidder ${e.code} failed to interpret the server's response. Continuing without bids`,
                            null,
                            t,
                          ),
                          void m()
                        );
                      }
                      let s, c;
                      r && !Object.keys(r).some((e) => !S.includes(e))
                        ? ((s = r.bids), (c = r.paapi))
                        : (s = r),
                        (0, f.isArray)(c) && c.forEach(d),
                        s && ((0, f.isArray)(s) ? s.forEach(o) : o(s)),
                        m();
                    }),
                    p = i(function (e, t) {
                      b(), c(e, t), m();
                    });
                  s(t);
                  const b = n.startTiming('net');
                  function I(n) {
                    const r = t.options;
                    return Object.assign(n, r, {
                      browsingTopics:
                        !(
                          r?.hasOwnProperty('browsingTopics') &&
                          !r.browsingTopics
                        ) &&
                        (h.u.get(e.code, 'topicsHeader') ?? !0) &&
                        (0, y.io)(A.DL, (0, v.s)(E.tW, e.code)),
                    });
                  }
                  switch (t.method) {
                    case 'GET':
                      r(
                        `${t.url}${(function (e) {
                          if (e)
                            return `?${
                              'object' == typeof e
                                ? (0, f.parseQueryStringParameters)(e)
                                : e
                            }`;
                          return '';
                        })(t.data)}`,
                        { success: u, error: p },
                        void 0,
                        I({ method: 'GET', withCredentials: !0 }),
                      );
                      break;
                    case 'POST':
                      r(
                        t.url,
                        { success: u, error: p },
                        'string' == typeof t.data
                          ? t.data
                          : JSON.stringify(t.data),
                        I({
                          method: 'POST',
                          contentType: 'text/plain',
                          withCredentials: !0,
                        }),
                      );
                      break;
                    default:
                      (0, f.logWarn)(
                        `Skipping invalid request from ${e.code}. Request type ${t.type} must be GET or POST`,
                      ),
                        m();
                  }
                });
              },
              'processBidderRequests',
            ),
            B = (0, p.A_)(
              'async',
              function (e, t, n, r, s) {
                const d = o.$W.getConfig('userSync.aliasSyncEnabled');
                if (e.getUserSyncs && (d || !i.Ay.aliasRegistry[e.code])) {
                  let i = o.$W.getConfig('userSync.filterSettings'),
                    d = e.getUserSyncs(
                      {
                        iframeEnabled: !(!i || (!i.iframe && !i.all)),
                        pixelEnabled: !(!i || (!i.image && !i.all)),
                      },
                      t,
                      n,
                      r,
                      s,
                    );
                  d &&
                    (Array.isArray(d) || (d = [d]),
                    d.forEach((t) => {
                      a.zt.registerSync(t.type, e.code, t.url);
                    }),
                    a.zt.bidderDone(e.code));
                }
              },
              'registerSyncs',
            ),
            k = (0, p.A_)('sync', (e, t) => {}, 'addPaapiConfig');
          function R(e, t) {
            let { index: n = m.n.index } =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : {};
            function r(e) {
              return `Invalid bid from ${t.bidderCode}. Ignoring bid: ${e}`;
            }
            return e
              ? t
                ? (function () {
                    let e = Object.keys(t);
                    return I.every(
                      (n) =>
                        (0, g.mK)(e, n) && !(0, g.mK)([void 0, null], t[n]),
                    );
                  })()
                  ? 'native' !== t.mediaType || (0, d.Bm)(t, { index: n })
                    ? 'video' !== t.mediaType || (0, c.vk)(t, { index: n })
                      ? !(
                          'banner' === t.mediaType &&
                          !(function (e, t) {
                            let { index: n = m.n.index } =
                              arguments.length > 2 && void 0 !== arguments[2]
                                ? arguments[2]
                                : {};
                            if (
                              (t.width || 0 === parseInt(t.width, 10)) &&
                              (t.height || 0 === parseInt(t.height, 10))
                            )
                              return (
                                (t.width = parseInt(t.width, 10)),
                                (t.height = parseInt(t.height, 10)),
                                !0
                              );
                            const r = n.getBidRequest(t),
                              i = n.getMediaTypes(t),
                              o =
                                (r && r.sizes) ||
                                (i && i.banner && i.banner.sizes),
                              s = (0, f.parseSizesInput)(o);
                            if (1 === s.length) {
                              const [e, n] = s[0].split('x');
                              return (
                                (t.width = parseInt(e, 10)),
                                (t.height = parseInt(n, 10)),
                                !0
                              );
                            }
                            return !1;
                          })(e, t, { index: n })
                        ) ||
                        ((0, f.logError)(
                          r('Banner bids require a width and height'),
                        ),
                        !1)
                      : ((0, f.logError)(
                          r(
                            'Video bid does not have required vastUrl or renderer property',
                          ),
                        ),
                        !1)
                    : ((0, f.logError)(
                        r('Native bid missing some required properties.'),
                      ),
                      !1)
                  : ((0, f.logError)(
                      r(
                        `Bidder ${t.bidderCode} is missing required params. Check http://prebid.org/dev-docs/bidder-adapter-1.html for list of params.`,
                      ),
                    ),
                    !1)
                : ((0, f.logWarn)(
                    `Some adapter tried to add an undefined bid for ${e}.`,
                  ),
                  !1)
              : ((0, f.logWarn)(
                  'No adUnitCode was supplied to addBidResponse.',
                ),
                !1);
          }
          function U(e) {
            return (0, b.BO)(e.metrics).renameWith((t) => [
              `adapter.client.${t}`,
              `adapters.client.${e.bidderCode}.${t}`,
            ]);
          }
        },
        41580: (e, t, n) => {
          n.d(t, { R: () => a });
          var r = n(15901),
            i = n(91069);
          const o = new WeakMap(),
            s = [
              'debugging',
              'outstream',
              'improvedigital',
              'showheroes-bs',
              'aaxBlockmeter',
              'adagio',
              'adloox',
              'akamaidap',
              'arcspan',
              'airgrid',
              'browsi',
              'brandmetrics',
              'clean.io',
              'confiant',
              'contxtful',
              'hadron',
              'mediafilter',
              'medianet',
              'azerionedge',
              'a1Media',
              'geoedge',
              'qortex',
              'dynamicAdBoost',
              '51Degrees',
              'justtag',
              'tncId',
              'ftrackId',
              'id5',
            ];
          function a(e, t, n, a, d) {
            if (!t || !e)
              return void (0, i.logError)(
                'cannot load external script without url and moduleCode',
              );
            if (!(0, r.mK)(s, t))
              return void (0, i.logError)(
                `${t} not whitelisted for loading external JavaScript`,
              );
            a || (a = document);
            const c = g(a, e);
            if (c)
              return (
                n &&
                  'function' == typeof n &&
                  (c.loaded ? n() : c.callbacks.push(n)),
                c.tag
              );
            const l = o.get(a) || {},
              u = { loaded: !1, tag: null, callbacks: [] };
            return (
              (l[e] = u),
              o.set(a, l),
              n && 'function' == typeof n && u.callbacks.push(n),
              (0, i.logWarn)(`module ${t} is loading external JavaScript`),
              (function (t, n, r, o) {
                r || (r = document);
                var s = r.createElement('script');
                (s.type = 'text/javascript'), (s.async = !0);
                const a = g(r, e);
                a && (a.tag = s);
                s.readyState
                  ? (s.onreadystatechange = function () {
                      ('loaded' !== s.readyState &&
                        'complete' !== s.readyState) ||
                        ((s.onreadystatechange = null), n());
                    })
                  : (s.onload = function () {
                      n();
                    });
                (s.src = t), o && (0, i.setScriptAttributes)(s, o);
                return (0, i.insertElement)(s, r), s;
              })(
                e,
                function () {
                  u.loaded = !0;
                  try {
                    for (let e = 0; e < u.callbacks.length; e++)
                      u.callbacks[e]();
                  } catch (e) {
                    (0, i.logError)(
                      'Error executing callback',
                      'adloader.js:loadExternalScript',
                      e,
                    );
                  }
                },
                a,
                d,
              )
            );
            function g(e, t) {
              const n = o.get(e);
              return n && n[t] ? n[t] : null;
            }
          }
        },
        51692: (e, t, n) => {
          n.d(t, { Q: () => r });
          const r = (0, n(16833).A_)('sync', () => {});
        },
        68044: (e, t, n) => {
          n.d(t, { RD: () => g, g4: () => u, hd: () => f });
          var r = n(43272),
            i = n(91069);
          const o = {
              fetch: window.fetch.bind(window),
              makeRequest: (e, t) => new Request(e, t),
              timeout(e, t) {
                const n = new AbortController();
                let r = setTimeout(() => {
                  n.abort(),
                    (0, i.logError)(`Request timeout after ${e}ms`, t),
                    (r = null);
                }, e);
                return {
                  signal: n.signal,
                  done() {
                    r && clearTimeout(r);
                  },
                };
              },
            },
            s = 'GET',
            a = 'POST',
            d = 'Content-Type';
          function c() {
            let e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 3e3,
              { request: t, done: n } =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {},
              i = (t, n) => {
                let i;
                null == e ||
                  null != n?.signal ||
                  r.$W.getConfig('disableAjaxTimeout') ||
                  ((i = o.timeout(e, t)),
                  (n = Object.assign({ signal: i.signal }, n)));
                let s = o.fetch(t, n);
                return null != i?.done && (s = s.finally(i.done)), s;
              };
            return (
              (null == t && null == n) ||
                (i = ((e) =>
                  function (r, i) {
                    const o = new URL(
                      null == r?.url ? r : r.url,
                      document.location,
                    ).origin;
                    let s = e(r, i);
                    return t && t(o), n && (s = s.finally(() => n(o))), s;
                  })(i)),
              i
            );
          }
          function l(e, t) {
            let { status: n, statusText: r = '', headers: o, url: s } = e,
              a = 0;
            function c(e) {
              if (0 === a)
                try {
                  a = new DOMParser().parseFromString(
                    t,
                    o?.get(d)?.split(';')?.[0],
                  );
                } catch (t) {
                  (a = null), e && e(t);
                }
              return a;
            }
            return {
              readyState: XMLHttpRequest.DONE,
              status: n,
              statusText: r,
              responseText: t,
              response: t,
              responseType: '',
              responseURL: s,
              get responseXML() {
                return c(i.logError);
              },
              getResponseHeader: (e) => (o?.has(e) ? o.get(e) : null),
              toJSON() {
                return Object.assign({ responseXML: c() }, this);
              },
              timedOut: !1,
            };
          }
          function u() {
            let e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 3e3,
              { request: t, done: n } =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {};
            const r = c(e, { request: t, done: n });
            return function (e, t, n) {
              !(function (e, t) {
                const { success: n, error: r } =
                  'object' == typeof t && null != t
                    ? t
                    : {
                        success: 'function' == typeof t ? t : () => null,
                        error: (e, t) => (0, i.logError)('Network error', e, t),
                      };
                e.then((e) => e.text().then((t) => [e, t])).then(
                  (e) => {
                    let [t, i] = e;
                    const o = l(t, i);
                    t.ok || 304 === t.status ? n(i, o) : r(t.statusText, o);
                  },
                  (e) =>
                    r(
                      '',
                      Object.assign(l({ status: 0 }, ''), {
                        reason: e,
                        timedOut: 'AbortError' === e?.name,
                      }),
                    ),
                );
              })(
                r(
                  (function (e, t) {
                    let n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : {};
                    const r = n.method || (t ? a : s);
                    if (r === s && t) {
                      const r = (0, i.parseUrl)(e, n);
                      Object.assign(r.search, t), (e = (0, i.buildUrl)(r));
                    }
                    const c = new Headers(n.customHeaders);
                    c.set(d, n.contentType || 'text/plain');
                    const l = { method: r, headers: c };
                    return (
                      r !== s && t && (l.body = t),
                      n.withCredentials && (l.credentials = 'include'),
                      n.browsingTopics &&
                        isSecureContext &&
                        (l.browsingTopics = !0),
                      n.keepalive && (l.keepalive = !0),
                      o.makeRequest(e, l)
                    );
                  })(
                    e,
                    n,
                    arguments.length > 3 && void 0 !== arguments[3]
                      ? arguments[3]
                      : {},
                  ),
                ),
                t,
              );
            };
          }
          const g = u(),
            f = c();
        },
        81657: (e, t, n) => {
          n.d(t, {
            AA: () => S,
            HN: () => X,
            UZ: () => O,
            ZV: () => H,
            mO: () => z,
            mX: () => _,
            sR: () => j,
            v8: () => x,
            w1: () => q,
          });
          var r = n(91069),
            i = n(70433),
            o = n(86833),
            s = n(12449),
            a = n(68693),
            d = n(95789),
            c = n(43272),
            l = n(38230),
            u = n(16833),
            g = n(15901),
            f = n(63895),
            p = n(71371),
            m = n(67314),
            h = n(12693),
            b = n(75023),
            y = n(11445),
            v = n(78969),
            E = n(25555),
            A = n(16894),
            I = n(57176),
            T = n(7873);
          const { syncUsers: w } = l.zt,
            C = 'started',
            S = 'inProgress',
            O = 'completed';
          b.on(v.qY.BID_ADJUSTMENT, function (e) {
            !(function (e) {
              let t = (0, I.y)(e.cpm, e);
              t >= 0 && (e.cpm = t);
            })(e);
          });
          const B = 4,
            k = {},
            R = {},
            U = [],
            D = (0, T.m)();
          function _(e) {
            let {
              adUnits: t,
              adUnitCodes: n,
              callback: a,
              cbTimeout: l,
              labels: u,
              auctionId: h,
              ortb2Fragments: I,
              metrics: T,
            } = e;
            T = (0, A.BO)(T);
            const _ = t,
              W = u,
              P = n,
              M = h || (0, r.generateUUID)(),
              G = l,
              z = new Set(),
              H = (0, E.v)();
            let V,
              K,
              J,
              Y,
              Q = [],
              X = a,
              Z = [],
              te = [],
              ne = [],
              re = [],
              ie = [];
            function oe() {
              return {
                auctionId: M,
                timestamp: V,
                auctionEnd: K,
                auctionStatus: Y,
                adUnits: _,
                adUnitCodes: P,
                labels: W,
                bidderRequests: Z,
                noBids: ne,
                bidsReceived: te,
                bidsRejected: Q,
                winningBids: re,
                timeout: G,
                metrics: T,
                seatNonBids: ie,
              };
            }
            function se(e) {
              if (
                (e ? b.emit(v.qY.AUCTION_TIMEOUT, oe()) : clearTimeout(J),
                void 0 === K)
              ) {
                let n = [];
                e &&
                  ((0, r.logMessage)(`Auction ${M} timedOut`),
                  (n = Z.filter((e) => !z.has(e.bidderRequestId)).flatMap(
                    (e) => e.bids,
                  )),
                  n.length && b.emit(v.qY.BID_TIMEOUT, n)),
                  (Y = O),
                  (K = Date.now()),
                  T.checkpoint('auctionEnd'),
                  T.timeBetween(
                    'requestBids',
                    'auctionEnd',
                    'requestBids.total',
                  ),
                  T.timeBetween(
                    'callBids',
                    'auctionEnd',
                    'requestBids.callBids',
                  ),
                  H.resolve(),
                  b.emit(v.qY.AUCTION_END, oe()),
                  N(_, function () {
                    try {
                      if (null != X) {
                        const t = te
                          .filter((e) => P.includes(e.adUnitCode))
                          .reduce(ee, {});
                        X.apply(D, [t, e, M]), (X = null);
                      }
                    } catch (e) {
                      (0, r.logError)(
                        'Error executing bidsBackHandler',
                        null,
                        e,
                      );
                    } finally {
                      n.length && y.Ay.callTimedOutBidders(t, n, G);
                      let e = c.$W.getConfig('userSync') || {};
                      e.enableOverride || w(e.syncDelay);
                    }
                  });
              }
            }
            function ae() {
              c.$W.resetBidder(),
                (0, r.logInfo)(`Bids Received for Auction with id: ${M}`, te),
                (Y = O),
                se(!1);
            }
            function de(e) {
              z.add(e);
            }
            function ce(e) {
              e.forEach((e) => {
                var t;
                (t = e), (Z = Z.concat(t));
              });
              let t = {},
                n = {
                  bidRequests: e,
                  run: () => {
                    (J = setTimeout(() => se(!0), G)),
                      (Y = S),
                      b.emit(v.qY.AUCTION_INIT, oe());
                    let n = (function (e, t) {
                      let { index: n = m.n.index } =
                          arguments.length > 2 && void 0 !== arguments[2]
                            ? arguments[2]
                            : {},
                        a = 0,
                        l = !1,
                        u = new Set(),
                        h = {};
                      function y() {
                        a--, l && 0 === a && e();
                      }
                      function A(e, t, n) {
                        return (
                          (h[t.requestId] = !0),
                          (function (e, t) {
                            let { index: n = m.n.index } =
                              arguments.length > 2 && void 0 !== arguments[2]
                                ? arguments[2]
                                : {};
                            const i = n.getBidderRequest(e),
                              o = n.getAdUnit(e),
                              s = (i && i.start) || e.requestTimestamp;
                            Object.assign(e, {
                              responseTimestamp:
                                e.responseTimestamp || (0, r.timestamp)(),
                              requestTimestamp: e.requestTimestamp || s,
                              cpm: parseFloat(e.cpm) || 0,
                              bidder: e.bidder || e.bidderCode,
                              adUnitCode: t,
                            }),
                              null != o?.ttlBuffer &&
                                (e.ttlBuffer = o.ttlBuffer);
                            e.timeToRespond =
                              e.responseTimestamp - e.requestTimestamp;
                          })(t, e),
                          a++,
                          n(y)
                        );
                      }
                      function I(e, a) {
                        A(e, a, (e) => {
                          let l = (function (e) {
                            let { index: t = m.n.index } =
                              arguments.length > 1 && void 0 !== arguments[1]
                                ? arguments[1]
                                : {};
                            b.emit(v.qY.BID_ADJUSTMENT, e);
                            const n =
                                t.getBidRequest(e)?.renderer ||
                                t.getAdUnit(e).renderer,
                              r = e.mediaType,
                              i = t.getMediaTypes(e),
                              s = i && i[r];
                            var a = s && s.renderer,
                              l = null;
                            a &&
                            a.url &&
                            a.render &&
                            (!0 !== a.backupOnly || !e.renderer)
                              ? (l = a)
                              : n &&
                                n.url &&
                                n.render &&
                                (!0 !== n.backupOnly || !e.renderer) &&
                                (l = n);
                            l &&
                              ((e.renderer = d.A4.install({
                                url: l.url,
                                config: l.options,
                              })),
                              e.renderer.setRender(l.render));
                            const u = F(
                                e.mediaType,
                                i,
                                c.$W.getConfig('mediaTypePriceGranularity'),
                              ),
                              g = (0, o.j)(
                                e.cpm,
                                'object' == typeof u
                                  ? u
                                  : c.$W.getConfig('customPriceBucket'),
                                c.$W.getConfig(
                                  'currency.granularityMultiplier',
                                ),
                              );
                            return (
                              (e.pbLg = g.low),
                              (e.pbMg = g.med),
                              (e.pbHg = g.high),
                              (e.pbAg = g.auto),
                              (e.pbDg = g.dense),
                              (e.pbCg = g.custom),
                              e
                            );
                          })(a);
                          b.emit(v.qY.BID_ACCEPTED, l),
                            l.mediaType === p.G_
                              ? (function (e, t, n) {
                                  let { index: o = m.n.index } =
                                      arguments.length > 3 &&
                                      void 0 !== arguments[3]
                                        ? arguments[3]
                                        : {},
                                    s = !0;
                                  const a = (0, i.A)(
                                      o.getMediaTypes({
                                        requestId:
                                          t.originalRequestId || t.requestId,
                                        adUnitId: t.adUnitId,
                                      }),
                                      'video',
                                    ),
                                    d = a && (0, i.A)(a, 'context'),
                                    l = a && (0, i.A)(a, 'useCacheKey');
                                  c.$W.getConfig('cache.url') &&
                                    (l || d !== f.H6) &&
                                    (!t.videoCacheKey ||
                                    c.$W.getConfig('cache.ignoreBidderCacheKey')
                                      ? ((s = !1), L(e, t, n, a))
                                      : t.vastUrl ||
                                        ((0, r.logError)(
                                          'videoCacheKey specified but not required vastUrl for video bid',
                                        ),
                                        (s = !1)));
                                  s && (x(e, t), n());
                                })(t, l, e)
                              : ((0, s.l6)(l) && (0, s.gs)(l, n.getAdUnit(l)),
                                x(t, l),
                                e());
                        });
                      }
                      function T(e, n, i) {
                        return A(e, n, (e) => {
                          (n.rejectionReason = i),
                            (0, r.logWarn)(
                              `Bid from ${
                                n.bidder || 'unknown bidder'
                              } was rejected: ${i}`,
                              n,
                            ),
                            b.emit(v.qY.BID_REJECTED, n),
                            t.addBidRejected(n),
                            e();
                        });
                      }
                      function w() {
                        let n = this,
                          i = t.getBidRequests();
                        const o = c.$W.getConfig('auctionOptions');
                        if ((u.add(n), o && !(0, r.isEmpty)(o))) {
                          const e = o.secondaryBidders;
                          e &&
                            !i.every((t) => (0, g.mK)(e, t.bidderCode)) &&
                            (i = i.filter((t) => !(0, g.mK)(e, t.bidderCode)));
                        }
                        (l = i.every((e) => u.has(e))),
                          n.bids.forEach((e) => {
                            h[e.bidId] ||
                              (t.addNoBid(e), b.emit(v.qY.NO_BID, e));
                          }),
                          l && 0 === a && e();
                      }
                      return {
                        addBidResponse: (function () {
                          function e(e, t) {
                            j.call(
                              { dispatch: I },
                              e,
                              t,
                              (() => {
                                let n = !1;
                                return (r) => {
                                  n || (T(e, t, r), (n = !0));
                                };
                              })(),
                            );
                          }
                          return (e.reject = T), e;
                        })(),
                        adapterDone: function () {
                          $(E.k.resolve()).finally(() => w.call(this));
                        },
                      };
                    })(ae, this);
                    y.Ay.callBids(
                      _,
                      e,
                      n.addBidResponse,
                      n.adapterDone,
                      {
                        request(e, n) {
                          l(k, n),
                            l(t, e),
                            R[e] || (R[e] = { SRA: !0, origin: n }),
                            t[e] > 1 && (R[e].SRA = !1);
                        },
                        done(e) {
                          k[e]--, U[0] && a(U[0]) && U.shift();
                        },
                      },
                      G,
                      de,
                      I,
                    );
                  },
                };
              function a(e) {
                let t = !0,
                  n = c.$W.getConfig('maxRequestsPerOrigin') || B;
                return (
                  e.bidRequests.some((e) => {
                    let r = 1,
                      i =
                        void 0 !== e.src && e.src === v.RW.SRC
                          ? 's2s'
                          : e.bidderCode;
                    return (
                      R[i] &&
                        (!1 === R[i].SRA && (r = Math.min(e.bids.length, n)),
                        k[R[i].origin] + r > n && (t = !1)),
                      !t
                    );
                  }),
                  t && e.run(),
                  t
                );
              }
              function l(e, t) {
                void 0 === e[t] ? (e[t] = 1) : e[t]++;
              }
              a(n) ||
                ((0, r.logWarn)(
                  'queueing auction due to limited endpoint capacity',
                ),
                U.push(n));
            }
            return (
              b.on(v.qY.SEAT_NON_BID, (e) => {
                var t;
                e.auctionId === M && ((t = e.seatnonbid), (ie = ie.concat(t)));
              }),
              {
                addBidReceived: function (e) {
                  te = te.concat(e);
                },
                addBidRejected: function (e) {
                  Q = Q.concat(e);
                },
                addNoBid: function (e) {
                  ne = ne.concat(e);
                },
                callBids: function () {
                  (Y = C), (V = Date.now());
                  let e = T.measureTime('requestBids.makeRequests', () =>
                    y.Ay.makeBidRequests(_, V, M, G, W, I, T),
                  );
                  (0, r.logInfo)(`Bids Requested for Auction with id: ${M}`, e),
                    T.checkpoint('callBids'),
                    e.length < 1
                      ? ((0, r.logWarn)(
                          'No valid bid requests returned for auction',
                        ),
                        ae())
                      : q.call({ dispatch: ce, context: this }, e);
                },
                addWinningBid: function (e) {
                  const n = t.find((t) => t.adUnitId === e.adUnitId);
                  (re = re.concat(e)),
                    (0, r.callBurl)(e),
                    y.Ay.callBidWonBidder(e.adapterCode || e.bidder, e, t),
                    n && !n.deferBilling && y.Ay.callBidBillableBidder(e);
                },
                setBidTargeting: function (e) {
                  y.Ay.callSetTargetingBidder(e.adapterCode || e.bidder, e);
                },
                getWinningBids: () => re,
                getAuctionStart: () => V,
                getAuctionEnd: () => K,
                getTimeout: () => G,
                getAuctionId: () => M,
                getAuctionStatus: () => Y,
                getAdUnits: () => _,
                getAdUnitCodes: () => P,
                getBidRequests: () => Z,
                getBidsReceived: () => te,
                getNoBids: () => ne,
                getNonBids: () => ie,
                getFPD: () => I,
                getMetrics: () => T,
                end: H.promise,
              }
            );
          }
          const j = (0, u.A_)(
              'sync',
              function (e, t, n) {
                !(function (e) {
                  const t = c.$W.getConfig('maxBid');
                  return !t || !e.cpm || t >= Number(e.cpm);
                })(t)
                  ? n(v.Tf.PRICE_TOO_HIGH)
                  : this.dispatch.call(null, e, t);
              },
              'addBidResponse',
            ),
            $ = (0, u.A_)('sync', (e) => e, 'responsesReady'),
            q = (0, u.A_)(
              'sync',
              function (e) {
                this.dispatch.call(this.context, e);
              },
              'addBidderRequests',
            ),
            N = (0, u.A_)(
              'async',
              function (e, t) {
                t && t();
              },
              'bidsBackCallback',
            );
          function x(e, t) {
            !(function (e) {
              let t;
              const n =
                !0 === h.u.get(e.bidderCode, 'allowZeroCpmBids')
                  ? e.cpm >= 0
                  : e.cpm > 0;
              e.bidderCode &&
                (n || e.dealId) &&
                (t = (function (e, t) {
                  let { index: n = m.n.index } =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : {};
                  if (!t) return {};
                  const r = n.getBidRequest(t);
                  var i = {};
                  const o = X(t.mediaType, e);
                  Z(i, o, t, r),
                    e &&
                      h.u.getOwn(e, v.iD.ADSERVER_TARGETING) &&
                      (Z(i, h.u.ownSettingsFor(e), t, r),
                      (t.sendStandardTargeting = h.u.get(
                        e,
                        'sendStandardTargeting',
                      )));
                  t.native && (i = Object.assign({}, i, (0, s.Zj)(t)));
                  return i;
                })(e.bidderCode, e));
              e.adserverTargeting = Object.assign(e.adserverTargeting || {}, t);
            })(t),
              (0, A.BO)(t.metrics).timeSince(
                'addBidResponse',
                'addBidResponse.total',
              ),
              e.addBidReceived(t),
              b.emit(v.qY.BID_RESPONSE, t);
          }
          const W = (e) => {
            (0, a.t)(
              e.map((e) => e.bidResponse),
              function (t, n) {
                n.forEach((n, i) => {
                  const {
                    auctionInstance: o,
                    bidResponse: s,
                    afterBidAdded: d,
                  } = e[i];
                  t
                    ? (0, r.logWarn)(
                        `Failed to save to the video cache: ${t}. Video bid must be discarded.`,
                      )
                    : '' === n.uuid
                      ? (0, r.logWarn)(
                          'Supplied video cache key was already in use by Prebid Cache; caching attempt was rejected. Video bid must be discarded.',
                        )
                      : ((s.videoCacheKey = n.uuid),
                        s.vastUrl || (s.vastUrl = (0, a.M)(s.videoCacheKey)),
                        x(o, s),
                        d());
                });
              },
            );
          };
          let P, M;
          c.$W.getConfig('cache', (e) => {
            (P =
              'number' == typeof e.cache.batchSize && e.cache.batchSize > 0
                ? e.cache.batchSize
                : 1),
              (M =
                'number' == typeof e.cache.batchTimeout &&
                e.cache.batchTimeout > 0
                  ? e.cache.batchTimeout
                  : 0);
          });
          const G = (function () {
              let e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : setTimeout,
                t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : W,
                n = [[]],
                r = !1;
              const i = (e) => e();
              return function (o, s, a) {
                const d = M > 0 ? e : i;
                n[n.length - 1].length >= P && n.push([]),
                  n[n.length - 1].push({
                    auctionInstance: o,
                    bidResponse: s,
                    afterBidAdded: a,
                  }),
                  r ||
                    ((r = !0),
                    d(() => {
                      n.forEach(t), (n = [[]]), (r = !1);
                    }, M));
              };
            })(),
            L = (0, u.A_)(
              'async',
              function (e, t, n, r) {
                G(e, t, n);
              },
              'callPrebidCache',
            );
          function F(e, t, n) {
            if (e && n) {
              if (e === p.G_) {
                const e = (0, i.A)(t, `${p.G_}.context`, 'instream');
                if (n[`${p.G_}-${e}`]) return n[`${p.G_}-${e}`];
              }
              return n[e];
            }
          }
          const z = function (e) {
              let { index: t = m.n.index } =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {};
              const n = F(
                e.mediaType,
                t.getMediaTypes(e),
                c.$W.getConfig('mediaTypePriceGranularity'),
              );
              return 'string' == typeof e.mediaType && n
                ? 'string' == typeof n
                  ? n
                  : 'custom'
                : c.$W.getConfig('priceGranularity');
            },
            H = (e) => (t) => {
              const n = e || z(t);
              return n === v.UE.AUTO
                ? t.pbAg
                : n === v.UE.DENSE
                  ? t.pbDg
                  : n === v.UE.LOW
                    ? t.pbLg
                    : n === v.UE.MEDIUM
                      ? t.pbMg
                      : n === v.UE.HIGH
                        ? t.pbHg
                        : n === v.UE.CUSTOM
                          ? t.pbCg
                          : void 0;
            },
            V = () => (e) => (e.creativeId ? e.creativeId : ''),
            K = () => (e) =>
              e.meta &&
              e.meta.advertiserDomains &&
              e.meta.advertiserDomains.length > 0
                ? [e.meta.advertiserDomains].flat()[0]
                : '',
            J = () => (e) =>
              e.meta && (e.meta.networkId || e.meta.networkName)
                ? (0, i.A)(e, 'meta.networkName') ||
                  (0, i.A)(e, 'meta.networkId')
                : '',
            Y = () => (e) =>
              e.meta && e.meta.primaryCatId ? e.meta.primaryCatId : '';
          function Q(e, t) {
            return {
              key: e,
              val:
                'function' == typeof t
                  ? function (e, n) {
                      return t(e, n);
                    }
                  : function (e) {
                      return (0, r.getValue)(e, t);
                    },
            };
          }
          function X(e, t) {
            const n = Object.assign({}, h.u.settingsFor(null));
            if (
              (n[v.iD.ADSERVER_TARGETING] ||
                (n[v.iD.ADSERVER_TARGETING] = [
                  Q(v.xS.BIDDER, 'bidderCode'),
                  Q(v.xS.AD_ID, 'adId'),
                  Q(v.xS.PRICE_BUCKET, H()),
                  Q(v.xS.SIZE, 'size'),
                  Q(v.xS.DEAL, 'dealId'),
                  Q(v.xS.SOURCE, 'source'),
                  Q(v.xS.FORMAT, 'mediaType'),
                  Q(v.xS.ADOMAIN, K()),
                  Q(v.xS.ACAT, Y()),
                  Q(v.xS.DSP, J()),
                  Q(v.xS.CRID, V()),
                ]),
              'video' === e)
            ) {
              const e = n[v.iD.ADSERVER_TARGETING].slice();
              if (
                ((n[v.iD.ADSERVER_TARGETING] = e),
                [v.xS.UUID, v.xS.CACHE_ID].forEach((t) => {
                  void 0 === (0, g.I6)(e, (e) => e.key === t) &&
                    e.push(Q(t, 'videoCacheKey'));
                }),
                c.$W.getConfig('cache.url') &&
                  (!t || !1 !== h.u.get(t, 'sendStandardTargeting')))
              ) {
                const t = (0, r.parseUrl)(c.$W.getConfig('cache.url'));
                void 0 === (0, g.I6)(e, (e) => e.key === v.xS.CACHE_HOST) &&
                  e.push(
                    Q(v.xS.CACHE_HOST, function (e) {
                      return (0, i.A)(e, `adserverTargeting.${v.xS.CACHE_HOST}`)
                        ? e.adserverTargeting[v.xS.CACHE_HOST]
                        : t.hostname;
                    }),
                  );
              }
            }
            return n;
          }
          function Z(e, t, n, i) {
            var o = t[v.iD.ADSERVER_TARGETING];
            return (
              (n.size = n.getSize()),
              (o || []).forEach(function (o) {
                var s = o.key,
                  a = o.val;
                if (
                  (e[s] &&
                    (0, r.logWarn)('The key: ' + s + ' is being overwritten'),
                  (0, r.isFn)(a))
                )
                  try {
                    a = a(n, i);
                  } catch (e) {
                    (0, r.logError)('bidmanager', 'ERROR', e);
                  }
                ((void 0 === t.suppressEmptyKeys ||
                  !0 !== t.suppressEmptyKeys) &&
                  s !== v.xS.DEAL &&
                  s !== v.xS.ACAT &&
                  s !== v.xS.DSP &&
                  s !== v.xS.CRID) ||
                (!(0, r.isEmptyStr)(a) && null != a)
                  ? (e[s] = a)
                  : (0, r.logInfo)(
                      "suppressing empty key '" +
                        s +
                        "' from adserver targeting",
                    );
              }),
              e
            );
          }
          function ee(e, t) {
            return (
              e[t.adUnitCode] || (e[t.adUnitCode] = { bids: [] }),
              e[t.adUnitCode].bids.push(t),
              e
            );
          }
        },
        67314: (e, t, n) => {
          n.d(t, { n: () => g });
          var r = n(91069),
            i = n(81657);
          function o(e) {
            Object.assign(this, {
              getAuction(t) {
                let { auctionId: n } = t;
                if (null != n) return e().find((e) => e.getAuctionId() === n);
              },
              getAdUnit(t) {
                let { adUnitId: n } = t;
                if (null != n)
                  return e()
                    .flatMap((e) => e.getAdUnits())
                    .find((e) => e.adUnitId === n);
              },
              getMediaTypes(e) {
                let { adUnitId: t, requestId: n } = e;
                if (null != n) {
                  const e = this.getBidRequest({ requestId: n });
                  if (null != e && (null == t || e.adUnitId === t))
                    return e.mediaTypes;
                } else if (null != t) {
                  const e = this.getAdUnit({ adUnitId: t });
                  if (null != e) return e.mediaTypes;
                }
              },
              getBidderRequest(t) {
                let { requestId: n, bidderRequestId: r } = t;
                if (null != n || null != r) {
                  let t = e().flatMap((e) => e.getBidRequests());
                  return (
                    null != r && (t = t.filter((e) => e.bidderRequestId === r)),
                    null == n
                      ? t[0]
                      : t.find(
                          (e) =>
                            e.bids && null != e.bids.find((e) => e.bidId === n),
                        )
                  );
                }
              },
              getBidRequest(t) {
                let { requestId: n } = t;
                if (null != n)
                  return e()
                    .flatMap((e) => e.getBidRequests())
                    .flatMap((e) => e.bids)
                    .find((e) => e && e.bidId === n);
              },
            });
          }
          var s = n(78969),
            a = n(16894),
            d = n(67046),
            c = n(27863),
            l = n(43272);
          const u = 'minBidCacheTTL';
          const g = (function () {
            let e = null;
            const t = (0, d.H)({
              startTime: (e) => e.end.then(() => e.getAuctionEnd()),
              ttl: (t) =>
                null == e
                  ? null
                  : t.end.then(
                      () => 1e3 * Math.max(e, ...t.getBidsReceived().map(c.L)),
                    ),
            });
            (0, c.u)(() => {
              null != e && t.refresh();
            }),
              l.$W.getConfig(u, (n) => {
                const r = e;
                (e = n?.[u]),
                  (e = 'number' == typeof e ? e : null),
                  r !== e && t.refresh();
              });
            const n = { onExpiry: t.onExpiry };
            function g(e) {
              for (const n of t) if (n.getAuctionId() === e) return n;
            }
            function f() {
              return t.toArray().flatMap((e) => e.getBidsReceived());
            }
            return (
              (n.addWinningBid = function (e) {
                const t = (0, a.BO)(e.metrics);
                t.checkpoint('bidWon'),
                  t.timeBetween('auctionEnd', 'bidWon', 'render.pending'),
                  t.timeBetween('requestBids', 'bidWon', 'render.e2e');
                const n = g(e.auctionId);
                n
                  ? ((e.status = s.tl.RENDERED), n.addWinningBid(e))
                  : (0, r.logWarn)('Auction not found when adding winning bid');
              }),
              Object.entries({
                getAllWinningBids: { name: 'getWinningBids' },
                getBidsRequested: { name: 'getBidRequests' },
                getNoBids: {},
                getAdUnits: {},
                getBidsReceived: { pre: (e) => e.getAuctionStatus() === i.UZ },
                getAdUnitCodes: { post: r.uniques },
              }).forEach((e) => {
                let [r, { name: i = r, pre: o, post: s }] = e;
                const a =
                    null == o ? (e) => e[i]() : (e) => (o(e) ? e[i]() : []),
                  d = null == s ? (e) => e : (e) => e.filter(s);
                n[r] = () => d(t.toArray().flatMap(a));
              }),
              (n.getAllBidsForAdUnitCode = function (e) {
                return f().filter((t) => t && t.adUnitCode === e);
              }),
              (n.createAuction = function (e) {
                const n = (0, i.mX)(e);
                return (
                  (function (e) {
                    t.add(e);
                  })(n),
                  n
                );
              }),
              (n.findBidByAdId = function (e) {
                return f().find((t) => t.adId === e);
              }),
              (n.getStandardBidderAdServerTargeting = function () {
                return (0, i.HN)()[s.iD.ADSERVER_TARGETING];
              }),
              (n.setStatusForBids = function (e, t) {
                let r = n.findBidByAdId(e);
                if ((r && (r.status = t), r && t === s.tl.BID_TARGETING_SET)) {
                  const e = g(r.auctionId);
                  e && e.setBidTargeting(r);
                }
              }),
              (n.getLastAuctionId = function () {
                const e = t.toArray();
                return e.length && e[e.length - 1].getAuctionId();
              }),
              (n.clearAllAuctions = function () {
                t.clear();
              }),
              (n.index = new o(() => t.toArray())),
              n
            );
          })();
        },
        27863: (e, t, n) => {
          n.d(t, { L: () => a, u: () => d });
          var r = n(43272),
            i = n(91069);
          let o = 1;
          const s = [];
          function a(e) {
            return e.ttl - (e.hasOwnProperty('ttlBuffer') ? e.ttlBuffer : o);
          }
          function d(e) {
            s.push(e);
          }
          r.$W.getConfig('ttlBuffer', (e) => {
            if ('number' == typeof e.ttlBuffer) {
              const t = o;
              (o = e.ttlBuffer), t !== o && s.forEach((e) => e(o));
            } else (0, i.logError)('Invalid value for ttlBuffer', e.ttlBuffer);
          });
        },
        12693: (e, t, n) => {
          n.d(t, { u: () => a });
          var r = n(70433),
            i = n(91069),
            o = n(7873),
            s = n(78969);
          const a = new (class {
            constructor(e, t) {
              (this.getSettings = e), (this.defaultScope = t);
            }
            get(e, t) {
              let n = this.getOwn(e, t);
              return void 0 === n && (n = this.getOwn(null, t)), n;
            }
            getOwn(e, t) {
              return (
                (e = this.#e(e)), (0, r.A)(this.getSettings(), `${e}.${t}`)
              );
            }
            getScopes() {
              return Object.keys(this.getSettings()).filter(
                (e) => e !== this.defaultScope,
              );
            }
            settingsFor(e) {
              return (0, i.mergeDeep)(
                {},
                this.ownSettingsFor(null),
                this.ownSettingsFor(e),
              );
            }
            ownSettingsFor(e) {
              return (e = this.#e(e)), this.getSettings()[e] || {};
            }
            #e(e) {
              return null == e ? this.defaultScope : e;
            }
          })(() => (0, o.m)().bidderSettings || {}, s.iD.BD_SETTING_STANDARD);
        },
        93597: (e, t, n) => {
          n.d(t, { O: () => o });
          var r = n(91069);
          function i(e) {
            let {
              src: t = 'client',
              bidder: n = '',
              bidId: i,
              transactionId: o,
              adUnitId: s,
              auctionId: a,
            } = arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : {};
            var d = t,
              c = e || 0;
            Object.assign(this, {
              bidderCode: n,
              width: 0,
              height: 0,
              statusMessage: (function () {
                switch (c) {
                  case 0:
                    return 'Pending';
                  case 1:
                    return 'Bid available';
                  case 2:
                    return 'Bid returned empty or error response';
                  case 3:
                    return 'Bid timed out';
                }
              })(),
              adId: (0, r.getUniqueIdentifierStr)(),
              requestId: i,
              transactionId: o,
              adUnitId: s,
              auctionId: a,
              mediaType: 'banner',
              source: d,
            }),
              (this.getStatusCode = function () {
                return c;
              }),
              (this.getSize = function () {
                return this.width + 'x' + this.height;
              }),
              (this.getIdentifiers = function () {
                return {
                  src: this.source,
                  bidder: this.bidderCode,
                  bidId: this.requestId,
                  transactionId: this.transactionId,
                  adUnitId: this.adUnitId,
                  auctionId: this.auctionId,
                };
              });
          }
          function o(e, t) {
            return new i(e, t);
          }
        },
        43272: (e, t, n) => {
          n.d(t, { $W: () => p, Ov: () => l });
          var r = n(86833),
            i = n(15901),
            o = n(91069),
            s = n(70433),
            a = n(78969);
          const d = 'TRUE' === (0, o.getParameterByName)(a.M).toUpperCase(),
            c = {},
            l = 'random',
            u = {};
          (u[l] = !0), (u.fixed = !0);
          const g = l,
            f = {
              LOW: 'low',
              MEDIUM: 'medium',
              HIGH: 'high',
              AUTO: 'auto',
              DENSE: 'dense',
              CUSTOM: 'custom',
            };
          const p = (function () {
            let e,
              t,
              n,
              a = [],
              l = null;
            function p() {
              function s(e) {
                return l[e].val;
              }
              function a(e, t) {
                l[e].val = t;
              }
              e = {};
              const l = {
                publisherDomain: {
                  set(e) {
                    null != e &&
                      (0, o.logWarn)(
                        'publisherDomain is deprecated and has no effect since v7 - use pageUrl instead',
                      ),
                      a('publisherDomain', e);
                  },
                },
                priceGranularity: {
                  val: f.MEDIUM,
                  set(e) {
                    h(e) &&
                      ('string' == typeof e
                        ? a('priceGranularity', m(e) ? e : f.MEDIUM)
                        : (0, o.isPlainObject)(e) &&
                          (a('customPriceBucket', e),
                          a('priceGranularity', f.CUSTOM),
                          (0, o.logMessage)('Using custom price granularity')));
                  },
                },
                customPriceBucket: { val: {}, set() {} },
                mediaTypePriceGranularity: {
                  val: {},
                  set(e) {
                    null != e &&
                      a(
                        'mediaTypePriceGranularity',
                        Object.keys(e).reduce(
                          (t, n) => (
                            h(e[n])
                              ? 'string' == typeof e
                                ? (t[n] = m(e[n])
                                    ? e[n]
                                    : s('priceGranularity'))
                                : (0, o.isPlainObject)(e) &&
                                  ((t[n] = e[n]),
                                  (0, o.logMessage)(
                                    `Using custom price granularity for ${n}`,
                                  ))
                              : (0, o.logWarn)(
                                  `Invalid price granularity for media type: ${n}`,
                                ),
                            t
                          ),
                          {},
                        ),
                      );
                  },
                },
                bidderSequence: {
                  val: g,
                  set(e) {
                    u[e]
                      ? a('bidderSequence', e)
                      : (0, o.logWarn)(
                          `Invalid order: ${e}. Bidder Sequence was not set.`,
                        );
                  },
                },
                auctionOptions: {
                  val: {},
                  set(e) {
                    (function (e) {
                      if (!(0, o.isPlainObject)(e))
                        return (
                          (0, o.logWarn)('Auction Options must be an object'),
                          !1
                        );
                      for (let t of Object.keys(e)) {
                        if (
                          'secondaryBidders' !== t &&
                          'suppressStaleRender' !== t
                        )
                          return (
                            (0, o.logWarn)(
                              `Auction Options given an incorrect param: ${t}`,
                            ),
                            !1
                          );
                        if ('secondaryBidders' === t) {
                          if (!(0, o.isArray)(e[t]))
                            return (
                              (0, o.logWarn)(
                                `Auction Options ${t} must be of type Array`,
                              ),
                              !1
                            );
                          if (!e[t].every(o.isStr))
                            return (
                              (0, o.logWarn)(
                                `Auction Options ${t} must be only string`,
                              ),
                              !1
                            );
                        } else if (
                          'suppressStaleRender' === t &&
                          !(0, o.isBoolean)(e[t])
                        )
                          return (
                            (0, o.logWarn)(
                              `Auction Options ${t} must be of type boolean`,
                            ),
                            !1
                          );
                      }
                      return !0;
                    })(e) && a('auctionOptions', e);
                  },
                },
              };
              let p = {
                debug: d,
                bidderTimeout: 3e3,
                enableSendAllBids: true,
                useBidCache: false,
                deviceAccess: true,
                timeoutBuffer: 400,
                disableAjaxTimeout: false,
                maxNestedIframes: 10,
                maxBid: 5e3,
                userSync: { topics: c },
              };
              function m(e) {
                return (0, i.I6)(Object.keys(f), (t) => e === f[t]);
              }
              function h(e) {
                if (!e)
                  return (
                    (0, o.logError)(
                      'Prebid Error: no value passed to `setPriceGranularity()`',
                    ),
                    !1
                  );
                if ('string' == typeof e)
                  m(e) ||
                    (0, o.logWarn)(
                      'Prebid Warning: setPriceGranularity was called with invalid setting, using `medium` as default.',
                    );
                else if ((0, o.isPlainObject)(e) && !(0, r.q)(e))
                  return (
                    (0, o.logError)(
                      'Invalid custom price value passed to `setPriceGranularity()`',
                    ),
                    !1
                  );
                return !0;
              }
              Object.defineProperties(
                p,
                Object.fromEntries(
                  Object.entries(l).map((e) => {
                    let [t, n] = e;
                    return [
                      t,
                      Object.assign(
                        {
                          get: s.bind(null, t),
                          set: a.bind(null, t),
                          enumerable: !0,
                        },
                        n,
                      ),
                    ];
                  }),
                ),
              ),
                t &&
                  I(
                    Object.keys(t).reduce(
                      (e, n) => (t[n] !== p[n] && (e[n] = p[n] || {}), e),
                      {},
                    ),
                  ),
                (t = p),
                (n = {});
            }
            function m() {
              if (l && n && (0, o.isPlainObject)(n[l])) {
                let e = n[l];
                const r = new Set(Object.keys(t).concat(Object.keys(e)));
                return (0, i.A6)(r).reduce(
                  (n, r) => (
                    void 0 === e[r]
                      ? (n[r] = t[r])
                      : void 0 === t[r]
                        ? (n[r] = e[r])
                        : (0, o.isPlainObject)(e[r])
                          ? (n[r] = (0, o.mergeDeep)({}, t[r], e[r]))
                          : (n[r] = e[r]),
                    n
                  ),
                  {},
                );
              }
              return Object.assign({}, t);
            }
            const [h, b] = [
                m,
                function () {
                  const e = m();
                  return (
                    Object.defineProperty(e, 'ortb2', {
                      get: function () {
                        throw new Error(
                          "invalid access to 'orbt2' config - use request parameters instead",
                        );
                      },
                    }),
                    e
                  );
                },
              ].map(
                (e) =>
                  function () {
                    if (
                      arguments.length <= 1 &&
                      'function' !=
                        typeof (arguments.length <= 0 ? void 0 : arguments[0])
                    ) {
                      const t = arguments.length <= 0 ? void 0 : arguments[0];
                      return t ? (0, s.A)(e(), t) : m();
                    }
                    return A(...arguments);
                  },
              ),
              [y, v] = [b, h].map(
                (e) =>
                  function () {
                    let t = e(...arguments);
                    return (
                      t && 'object' == typeof t && (t = (0, o.deepClone)(t)), t
                    );
                  },
              );
            function E(n) {
              if (!(0, o.isPlainObject)(n))
                return void (0, o.logError)(
                  'setConfig options must be an object',
                );
              let r = Object.keys(n),
                i = {};
              r.forEach((r) => {
                let s = n[r];
                (0, o.isPlainObject)(e[r]) &&
                  (0, o.isPlainObject)(s) &&
                  (s = Object.assign({}, e[r], s));
                try {
                  i[r] = t[r] = s;
                } catch (e) {
                  (0, o.logWarn)(`Cannot set config for property ${r} : `, e);
                }
              }),
                I(i);
            }
            function A(e, t) {
              let n =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : {},
                r = t;
              if (
                ('string' != typeof e && ((r = e), (e = '*'), (n = t || {})),
                'function' != typeof r)
              )
                return void (0, o.logError)('listener must be a function');
              const i = { topic: e, callback: r };
              return (
                a.push(i),
                n.init && r('*' === e ? b() : { [e]: b(e) }),
                function () {
                  a.splice(a.indexOf(i), 1);
                }
              );
            }
            function I(e) {
              const t = Object.keys(e);
              a
                .filter((e) => (0, i.mK)(t, e.topic))
                .forEach((t) => {
                  t.callback({ [t.topic]: e[t.topic] });
                }),
                a.filter((e) => '*' === e.topic).forEach((t) => t.callback(e));
            }
            function T(e) {
              let t =
                arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
              try {
                !(function (e) {
                  if (!(0, o.isPlainObject)(e))
                    throw 'setBidderConfig bidder options must be an object';
                  if (!Array.isArray(e.bidders) || !e.bidders.length)
                    throw 'setBidderConfig bidder options must contain a bidders list with at least 1 bidder';
                  if (!(0, o.isPlainObject)(e.config))
                    throw 'setBidderConfig bidder options must contain a config object';
                })(e),
                  e.bidders.forEach((r) => {
                    n[r] || (n[r] = {}),
                      Object.keys(e.config).forEach((i) => {
                        let s = e.config[i];
                        if ((0, o.isPlainObject)(s)) {
                          const e = t ? o.mergeDeep : Object.assign;
                          n[r][i] = e({}, n[r][i] || {}, s);
                        } else n[r][i] = s;
                      });
                  });
              } catch (e) {
                (0, o.logError)(e);
              }
            }
            function w(e, t) {
              l = e;
              try {
                return t();
              } finally {
                C();
              }
            }
            function C() {
              l = null;
            }
            return (
              p(),
              {
                getCurrentBidder: function () {
                  return l;
                },
                resetBidder: C,
                getConfig: b,
                getAnyConfig: h,
                readConfig: y,
                readAnyConfig: v,
                setConfig: E,
                mergeConfig: function (e) {
                  if (!(0, o.isPlainObject)(e))
                    return void (0, o.logError)(
                      'mergeConfig input must be an object',
                    );
                  const t = (0, o.mergeDeep)(m(), e);
                  return E({ ...t }), t;
                },
                setDefaults: function (n) {
                  (0, o.isPlainObject)(e)
                    ? (Object.assign(e, n), Object.assign(t, n))
                    : (0, o.logError)('defaults must be an object');
                },
                resetConfig: p,
                runWithBidder: w,
                callbackWithBidder: function (e) {
                  return function (t) {
                    return function () {
                      if ('function' == typeof t) {
                        for (
                          var n = arguments.length, r = new Array(n), i = 0;
                          i < n;
                          i++
                        )
                          r[i] = arguments[i];
                        return w(e, t.bind(this, ...r));
                      }
                      (0, o.logWarn)(
                        'config.callbackWithBidder callback is not a function',
                      );
                    };
                  };
                },
                setBidderConfig: T,
                getBidderConfig: function () {
                  return n;
                },
                mergeBidderConfig: function (e) {
                  return T(e, !0);
                },
              }
            );
          })();
        },
        16916: (e, t, n) => {
          n.d(t, {
            B1: () => s,
            SL: () => p,
            ad: () => l,
            et: () => u,
            mW: () => d,
            o2: () => g,
            t6: () => c,
          });
          var r = n(91069),
            i = n(25555),
            o = n(43272);
          const s = Object.freeze({});
          class a {
            #t;
            #n;
            #r;
            #i;
            #o = !0;
            #s;
            generatedTime;
            hashFields;
            constructor() {
              this.reset();
            }
            #a(e) {
              (this.#i = !0), (this.#n = e), this.#r.resolve(e);
            }
            reset() {
              (this.#r = (0, i.v)()),
                (this.#t = !1),
                (this.#n = null),
                (this.#i = !1),
                (this.generatedTime = null);
            }
            enable() {
              this.#t = !0;
            }
            get enabled() {
              return this.#t;
            }
            get ready() {
              return this.#i;
            }
            get promise() {
              return this.#i
                ? i.k.resolve(this.#n)
                : (this.#t || this.#a(null), this.#r.promise);
            }
            setConsentData(e) {
              let t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : (0, r.timestamp)();
              (this.generatedTime = t), (this.#o = !0), this.#a(e);
            }
            getConsentData() {
              return this.#n;
            }
            get hash() {
              return (
                this.#o &&
                  ((this.#s = (0, r.cyrb53Hash)(
                    JSON.stringify(
                      this.#n && this.hashFields
                        ? this.hashFields.map((e) => this.#n[e])
                        : this.#n,
                    ),
                  )),
                  (this.#o = !1)),
                this.#s
              );
            }
          }
          const d = new (class extends a {
              hashFields = ['gdprApplies', 'consentString'];
              getConsentMeta() {
                const e = this.getConsentData();
                if (e && e.vendorData && this.generatedTime)
                  return {
                    gdprApplies: e.gdprApplies,
                    consentStringSize: (0, r.isStr)(e.vendorData.tcString)
                      ? e.vendorData.tcString.length
                      : 0,
                    generatedAt: this.generatedTime,
                    apiVersion: e.apiVersion,
                  };
              }
            })(),
            c = new (class extends a {
              getConsentMeta() {
                if (this.getConsentData() && this.generatedTime)
                  return { generatedAt: this.generatedTime };
              }
            })(),
            l = new (class extends a {
              hashFields = ['applicableSections', 'gppString'];
              getConsentMeta() {
                if (this.getConsentData() && this.generatedTime)
                  return { generatedAt: this.generatedTime };
              }
            })(),
            u = (() => {
              function e() {
                return !!o.$W.getConfig('coppa');
              }
              return {
                getCoppa: e,
                getConsentData: e,
                getConsentMeta: e,
                reset() {},
                get promise() {
                  return i.k.resolve(e());
                },
                get hash() {
                  return e() ? '1' : '0';
                },
              };
            })(),
            g = (function () {
              const e = {},
                t = {},
                n = {};
              return {
                register(r, i, o) {
                  o &&
                    (((e[i] = e[i] || {})[r] = o),
                    t.hasOwnProperty(i)
                      ? t[i] !== o && (t[i] = n)
                      : (t[i] = o));
                },
                get(r) {
                  const i = { modules: e[r] || {} };
                  return (
                    t.hasOwnProperty(r) && t[r] !== n && (i.gvlid = t[r]), i
                  );
                },
              };
            })(),
            f = { gdpr: d, usp: c, gpp: l, coppa: u };
          const p = (function () {
            let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : f;
            return (
              (e = Object.entries(e)),
              Object.assign(
                {
                  get promise() {
                    return i.k
                      .all(
                        e.map((e) => {
                          let [t, n] = e;
                          return n.promise.then((e) => [t, e]);
                        }),
                      )
                      .then((e) => Object.fromEntries(e));
                  },
                  get hash() {
                    return (0, r.cyrb53Hash)(
                      e
                        .map((e) => {
                          let [t, n] = e;
                          return n.hash;
                        })
                        .join(':'),
                    );
                  },
                },
                Object.fromEntries(
                  ['getConsentData', 'getConsentMeta', 'reset'].map((t) => {
                    return [
                      t,
                      ((n = t),
                      function () {
                        return Object.fromEntries(
                          e.map((e) => {
                            let [t, r] = e;
                            return [t, r[n]()];
                          }),
                        );
                      }),
                    ];
                    var n;
                  }),
                ),
              )
            );
          })();
        },
        78969: (e, t, n) => {
          n.d(t, {
            M: () => i,
            RW: () => f,
            Tf: () => m,
            UE: () => c,
            XQ: () => o,
            Zh: () => u,
            _B: () => v,
            as: () => a,
            cA: () => d,
            h0: () => h,
            iD: () => r,
            jO: () => b,
            nl: () => E,
            oA: () => y,
            qY: () => s,
            tl: () => p,
            x5: () => g,
            xS: () => l,
          });
          const r = {
              PL_CODE: 'code',
              PL_SIZE: 'sizes',
              PL_BIDS: 'bids',
              BD_BIDDER: 'bidder',
              BD_ID: 'paramsd',
              BD_PL_ID: 'placementId',
              ADSERVER_TARGETING: 'adserverTargeting',
              BD_SETTING_STANDARD: 'standard',
            },
            i = 'pbjs_debug',
            o = { GOOD: 1 },
            s = {
              AUCTION_INIT: 'auctionInit',
              AUCTION_TIMEOUT: 'auctionTimeout',
              AUCTION_END: 'auctionEnd',
              BID_ADJUSTMENT: 'bidAdjustment',
              BID_TIMEOUT: 'bidTimeout',
              BID_REQUESTED: 'bidRequested',
              BID_RESPONSE: 'bidResponse',
              BID_REJECTED: 'bidRejected',
              NO_BID: 'noBid',
              SEAT_NON_BID: 'seatNonBid',
              BID_WON: 'bidWon',
              BIDDER_DONE: 'bidderDone',
              BIDDER_ERROR: 'bidderError',
              SET_TARGETING: 'setTargeting',
              BEFORE_REQUEST_BIDS: 'beforeRequestBids',
              BEFORE_BIDDER_HTTP: 'beforeBidderHttp',
              REQUEST_BIDS: 'requestBids',
              ADD_AD_UNITS: 'addAdUnits',
              AD_RENDER_FAILED: 'adRenderFailed',
              AD_RENDER_SUCCEEDED: 'adRenderSucceeded',
              TCF2_ENFORCEMENT: 'tcf2Enforcement',
              AUCTION_DEBUG: 'auctionDebug',
              BID_VIEWABLE: 'bidViewable',
              STALE_RENDER: 'staleRender',
              BILLABLE_EVENT: 'billableEvent',
              BID_ACCEPTED: 'bidAccepted',
              RUN_PAAPI_AUCTION: 'paapiRunAuction',
              PAAPI_BID: 'paapiBid',
              PAAPI_NO_BID: 'paapiNoBid',
              PAAPI_ERROR: 'paapiError',
            },
            a = {
              PREVENT_WRITING_ON_MAIN_DOCUMENT: 'preventWritingOnMainDocument',
              NO_AD: 'noAd',
              EXCEPTION: 'exception',
              CANNOT_FIND_AD: 'cannotFindAd',
              MISSING_DOC_OR_ADID: 'missingDocOrAdid',
            },
            d = { bidWon: 'adUnitCode' },
            c = {
              LOW: 'low',
              MEDIUM: 'medium',
              HIGH: 'high',
              AUTO: 'auto',
              DENSE: 'dense',
              CUSTOM: 'custom',
            },
            l = {
              BIDDER: 'hb_bidder',
              AD_ID: 'hb_adid',
              PRICE_BUCKET: 'hb_pb',
              SIZE: 'hb_size',
              DEAL: 'hb_deal',
              SOURCE: 'hb_source',
              FORMAT: 'hb_format',
              UUID: 'hb_uuid',
              CACHE_ID: 'hb_cache_id',
              CACHE_HOST: 'hb_cache_host',
              ADOMAIN: 'hb_adomain',
              ACAT: 'hb_acat',
              CRID: 'hb_crid',
              DSP: 'hb_dsp',
            },
            u = {
              BIDDER: 'hb_bidder',
              AD_ID: 'hb_adid',
              PRICE_BUCKET: 'hb_pb',
              SIZE: 'hb_size',
              DEAL: 'hb_deal',
              FORMAT: 'hb_format',
              UUID: 'hb_uuid',
              CACHE_HOST: 'hb_cache_host',
            },
            g = {
              title: 'hb_native_title',
              body: 'hb_native_body',
              body2: 'hb_native_body2',
              privacyLink: 'hb_native_privacy',
              privacyIcon: 'hb_native_privicon',
              sponsoredBy: 'hb_native_brand',
              image: 'hb_native_image',
              icon: 'hb_native_icon',
              clickUrl: 'hb_native_linkurl',
              displayUrl: 'hb_native_displayurl',
              cta: 'hb_native_cta',
              rating: 'hb_native_rating',
              address: 'hb_native_address',
              downloads: 'hb_native_downloads',
              likes: 'hb_native_likes',
              phone: 'hb_native_phone',
              price: 'hb_native_price',
              salePrice: 'hb_native_saleprice',
              rendererUrl: 'hb_renderer_url',
              adTemplate: 'hb_adTemplate',
            },
            f = {
              SRC: 's2s',
              DEFAULT_ENDPOINT:
                'https://prebid.adnxs.com/pbs/v1/openrtb2/auction',
              SYNCED_BIDDERS_KEY: 'pbjsSyncs',
            },
            p = {
              BID_TARGETING_SET: 'targetingSet',
              RENDERED: 'rendered',
              BID_REJECTED: 'bidRejected',
            },
            m = {
              INVALID: 'Bid has missing or invalid properties',
              INVALID_REQUEST_ID: 'Invalid request ID',
              BIDDER_DISALLOWED:
                'Bidder code is not allowed by allowedAlternateBidderCodes / allowUnknownBidderCodes',
              FLOOR_NOT_MET: 'Bid does not meet price floor',
              CANNOT_CONVERT_CURRENCY: 'Unable to convert currency',
              DSA_REQUIRED:
                'Bid does not provide required DSA transparency info',
              DSA_MISMATCH: 'Bid indicates inappropriate DSA rendering method',
              PRICE_TOO_HIGH: 'Bid price exceeds maximum value',
            },
            h = {
              body: 'desc',
              body2: 'desc2',
              sponsoredBy: 'sponsored',
              cta: 'ctatext',
              rating: 'rating',
              address: 'address',
              downloads: 'downloads',
              likes: 'likes',
              phone: 'phone',
              price: 'price',
              salePrice: 'saleprice',
              displayUrl: 'displayurl',
            },
            b = {
              sponsored: 1,
              desc: 2,
              rating: 3,
              likes: 4,
              downloads: 5,
              price: 6,
              saleprice: 7,
              phone: 8,
              address: 9,
              desc2: 10,
              displayurl: 11,
              ctatext: 12,
            },
            y = { ICON: 1, MAIN: 3 },
            v = [
              'privacyIcon',
              'clickUrl',
              'sendTargetingKeys',
              'adTemplate',
              'rendererUrl',
              'type',
            ],
            E = {
              REQUEST: 'Prebid Request',
              RESPONSE: 'Prebid Response',
              NATIVE: 'Prebid Native',
              EVENT: 'Prebid Event',
            };
        },
        86833: (e, t, n) => {
          n.d(t, { j: () => g, q: () => p });
          var r = n(15901),
            i = n(91069),
            o = n(43272);
          const s = 2,
            a = { buckets: [{ max: 5, increment: 0.5 }] },
            d = { buckets: [{ max: 20, increment: 0.1 }] },
            c = { buckets: [{ max: 20, increment: 0.01 }] },
            l = {
              buckets: [
                { max: 3, increment: 0.01 },
                { max: 8, increment: 0.05 },
                { max: 20, increment: 0.5 },
              ],
            },
            u = {
              buckets: [
                { max: 5, increment: 0.05 },
                { max: 10, increment: 0.1 },
                { max: 20, increment: 0.5 },
              ],
            };
          function g(e, t) {
            let n =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              r = parseFloat(e);
            return (
              isNaN(r) && (r = ''),
              {
                low: '' === r ? '' : f(e, a, n),
                med: '' === r ? '' : f(e, d, n),
                high: '' === r ? '' : f(e, c, n),
                auto: '' === r ? '' : f(e, u, n),
                dense: '' === r ? '' : f(e, l, n),
                custom: '' === r ? '' : f(e, t, n),
              }
            );
          }
          function f(e, t, n) {
            let a = '';
            if (!p(t)) return a;
            const d = t.buckets.reduce((e, t) => (e.max > t.max ? e : t), {
              max: 0,
            });
            let c = 0,
              l = (0, r.I6)(t.buckets, (t) => {
                if (e > d.max * n) {
                  let e = t.precision;
                  void 0 === e && (e = s), (a = (t.max * n).toFixed(e));
                } else {
                  if (e <= t.max * n && e >= c * n) return (t.min = c), t;
                  c = t.max;
                }
              });
            return (
              l &&
                (a = (function (e, t, n) {
                  const r = void 0 !== t.precision ? t.precision : s,
                    a = t.increment * n,
                    d = t.min * n;
                  let c = Math.floor,
                    l = o.$W.getConfig('cpmRoundingFunction');
                  'function' == typeof l && (c = l);
                  let u,
                    g,
                    f = Math.pow(10, r + 2),
                    p = (e * f - d * f) / (a * f);
                  try {
                    u = c(p) * a + d;
                  } catch (e) {
                    g = !0;
                  }
                  (g || 'number' != typeof u) &&
                    ((0, i.logWarn)(
                      'Invalid rounding function passed in config',
                    ),
                    (u = Math.floor(p) * a + d));
                  return (u = Number(u.toFixed(10))), u.toFixed(r);
                })(e, l, n)),
              a
            );
          }
          function p(e) {
            if ((0, i.isEmpty)(e) || !e.buckets || !Array.isArray(e.buckets))
              return !1;
            let t = !0;
            return (
              e.buckets.forEach((e) => {
                (e.max && e.increment) || (t = !1);
              }),
              t
            );
          }
        },
        46031: (e, t, n) => {
          n.d(t, { H: () => a, k: () => s });
          var r = n(25555),
            i = n(91069),
            o = n(34595);
          const s = (0, n(16833).A_)('sync', function (e) {
              return o.G;
            }),
            a = (function () {
              const e = {};
              return function (t) {
                const n = s(t);
                return (
                  e.hasOwnProperty(n) ||
                    (e[n] = new r.k((e) => {
                      const t = (0, i.createInvisibleIframe)();
                      (t.srcdoc = `<script>${n}<\/script>`),
                        (t.onload = () => e(t.contentWindow.render)),
                        document.body.appendChild(t);
                    })),
                  e[n]
                );
              };
            })();
        },
        49164: (e, t, n) => {
          n.d(t, { L6: () => m, ey: () => l });
          var r = n(43272),
            i = n(16833),
            o = n(7873),
            s = n(91069),
            a = n(93597),
            d = n(41580),
            c = n(25555);
          const l = '__pbjs_debugging__';
          function u() {
            return (0, o.m)().installedModules.includes('debugging');
          }
          function g(e) {
            return new c.k((t) => {
              (0, d.R)(e, 'debugging', t);
            });
          }
          function f() {
            let { alreadyInstalled: e = u, script: t = g } =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {},
              n = null;
            return function () {
              return (
                null == n &&
                  (n = new c.k((n, d) => {
                    setTimeout(() => {
                      if (e()) n();
                      else {
                        const e =
                          'https://cdn.jsdelivr.net/npm/prebid.js@9.0.0/dist/debugging-standalone.js';
                        (0, s.logMessage)(
                          `Debugging module not installed, loading it from "${e}"...`,
                        ),
                          ((0, o.m)()._installDebugging = !0),
                          t(e)
                            .then(() => {
                              (0, o.m)()._installDebugging({
                                DEBUG_KEY: l,
                                hook: i.A_,
                                config: r.$W,
                                createBid: a.O,
                                logger: (0, s.prefixLog)('DEBUG:'),
                              });
                            })
                            .then(n, d);
                      }
                    });
                  })),
                n
              );
            };
          }
          const p = (function () {
            let { load: e = f(), hook: t = (0, i.Yn)('requestBids') } =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {},
              n = null,
              r = !1;
            function o(e) {
              for (
                var t = arguments.length,
                  r = new Array(t > 1 ? t - 1 : 0),
                  i = 1;
                i < t;
                i++
              )
                r[i - 1] = arguments[i];
              return (n || c.k.resolve()).then(() => e.apply(this, r));
            }
            function s() {
              t.getHooks({ hook: o }).remove(), (r = !1);
            }
            return {
              enable: function () {
                r || ((n = e()), t.before(o, 99), (r = !0));
              },
              disable: s,
              reset: function () {
                (n = null), s();
              },
            };
          })();
          p.reset;
          function m() {
            let e = null;
            try {
              e = window.sessionStorage;
            } catch (e) {}
            if (null !== e) {
              let t = p,
                n = null;
              try {
                n = e.getItem(l);
              } catch (e) {}
              null !== n && t.enable();
            }
          }
          r.$W.getConfig('debugging', function (e) {
            let { debugging: t } = e;
            t?.enabled ? p.enable() : p.disable();
          });
        },
        75023: (e, t, n) => {
          n.r(t),
            n.d(t, {
              addEvents: () => E,
              clearEvents: () => I,
              emit: () => v,
              get: () => b,
              getEvents: () => y,
              has: () => A,
              off: () => h,
              on: () => m,
            });
          var r = n(91069),
            i = n(78969),
            o = n(67046),
            s = n(43272);
          const a = 'eventHistoryTTL';
          let d = null;
          const c = (0, o.H)({ monotonic: !0, ttl: () => d });
          s.$W.getConfig(a, (e) => {
            const t = d;
            (e = e?.[a]),
              (d = 'number' == typeof e ? 1e3 * e : null),
              t !== d && c.refresh();
          });
          let l = Array.prototype.slice,
            u = Array.prototype.push,
            g = Object.values(i.qY);
          const f = i.cA,
            p = (function () {
              let e = {},
                t = {};
              function n(e) {
                return g.includes(e);
              }
              return (
                (t.has = n),
                (t.on = function (t, i, o) {
                  if (n(t)) {
                    let n = e[t] || { que: [] };
                    o
                      ? ((n[o] = n[o] || { que: [] }), n[o].que.push(i))
                      : n.que.push(i),
                      (e[t] = n);
                  } else
                    r.logError(
                      'Wrong event name : ' + t + ' Valid event names :' + g,
                    );
                }),
                (t.emit = function (t) {
                  !(function (t, n) {
                    r.logMessage('Emitting event for: ' + t);
                    let i = n[0] || {},
                      o = i[f[t]],
                      s = e[t] || { que: [] };
                    var a = Object.keys(s);
                    let d = [];
                    c.add({
                      eventType: t,
                      args: i,
                      id: o,
                      elapsedTime: r.getPerformanceNow(),
                    }),
                      o && a.includes(o) && u.apply(d, s[o].que),
                      u.apply(d, s.que),
                      (d || []).forEach(function (e) {
                        if (e)
                          try {
                            e.apply(null, n);
                          } catch (e) {
                            r.logError(
                              'Error executing handler:',
                              'events.js',
                              e,
                              t,
                            );
                          }
                      });
                  })(t, l.call(arguments, 1));
                }),
                (t.off = function (t, n, i) {
                  let o = e[t];
                  r.isEmpty(o) ||
                    (r.isEmpty(o.que) && r.isEmpty(o[i])) ||
                    (i && (r.isEmpty(o[i]) || r.isEmpty(o[i].que))) ||
                    (i
                      ? (o[i].que || []).forEach(function (e) {
                          let t = o[i].que;
                          e === n && t.splice(t.indexOf(e), 1);
                        })
                      : (o.que || []).forEach(function (e) {
                          let t = o.que;
                          e === n && t.splice(t.indexOf(e), 1);
                        }),
                    (e[t] = o));
                }),
                (t.get = function () {
                  return e;
                }),
                (t.addEvents = function (e) {
                  g = g.concat(e);
                }),
                (t.getEvents = function () {
                  return c.toArray().map((e) => Object.assign({}, e));
                }),
                t
              );
            })();
          r._setEventEmitter(p.emit.bind(p));
          const {
            on: m,
            off: h,
            get: b,
            getEvents: y,
            emit: v,
            addEvents: E,
            has: A,
          } = p;
          function I() {
            c.clear();
          }
        },
        20687: (e, t, n) => {
          n.d(t, { w: () => I });
          var r = n(16833),
            i = n(27934),
            o = n(5973),
            s = n(91069),
            a = n(63172),
            d = n(43272),
            c = n(25555);
          const l = [
              'architecture',
              'bitness',
              'model',
              'platformVersion',
              'fullVersionList',
            ],
            u = ['brands', 'mobile', 'platform'],
            g = (function () {
              let e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : window.navigator?.userAgentData;
              const t =
                e && u.some((t) => void 0 !== e[t])
                  ? Object.freeze(p(1, e))
                  : null;
              return function () {
                return t;
              };
            })(),
            f = (function () {
              let e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : window.navigator?.userAgentData;
              const t = {},
                n = new WeakMap();
              return function () {
                let r =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : l;
                if (!n.has(r)) {
                  const e = Array.from(r);
                  e.sort(), n.set(r, e.join('|'));
                }
                const i = n.get(r);
                if (!t.hasOwnProperty(i))
                  try {
                    t[i] = e
                      .getHighEntropyValues(r)
                      .then((e) =>
                        (0, s.isEmpty)(e) ? null : Object.freeze(p(2, e)),
                      )
                      .catch(() => null);
                  } catch (e) {
                    t[i] = c.k.resolve(null);
                  }
                return t[i];
              };
            })();
          function p(e, t) {
            function n(e, t) {
              const n = { brand: e };
              return (
                (0, s.isStr)(t) &&
                  !(0, s.isEmptyStr)(t) &&
                  (n.version = t.split('.')),
                n
              );
            }
            const r = { source: e };
            return (
              t.platform && (r.platform = n(t.platform, t.platformVersion)),
              (t.fullVersionList || t.brands) &&
                (r.browsers = (t.fullVersionList || t.brands).map((e) => {
                  let { brand: t, version: r } = e;
                  return n(t, r);
                })),
              void 0 !== t.mobile && (r.mobile = t.mobile ? 1 : 0),
              ['model', 'bitness', 'architecture'].forEach((e) => {
                const n = t[e];
                (0, s.isStr)(n) && (r[e] = n);
              }),
              r
            );
          }
          var m = n(73858),
            h = n(95139),
            b = n(83441),
            y = n(76811),
            v = n(45569);
          const E = {
              getRefererInfo: i.EN,
              findRootDomain: o.S,
              getWindowTop: s.getWindowTop,
              getWindowSelf: s.getWindowSelf,
              getHighEntropySUA: f,
              getLowEntropySUA: g,
            },
            A = (0, m.i8)('FPD'),
            I = (0, r.A_)('sync', (e) => {
              const t = [
                e,
                w().catch(() => null),
                c.k
                  .resolve(
                    'cookieDeprecationLabel' in navigator &&
                      (0, h.io)(y.Ue, (0, b.s)(v.tp, 'cdep')) &&
                      navigator.cookieDeprecationLabel.getValue(),
                  )
                  .catch(() => null),
              ];
              return c.k.all(t).then((e) => {
                let [t, n, r] = e;
                const i = E.getRefererInfo();
                if (
                  (Object.entries(S).forEach((e) => {
                    let [n, r] = e;
                    const o = r(t, i);
                    o &&
                      Object.keys(o).length > 0 &&
                      (t[n] = (0, s.mergeDeep)({}, o, t[n]));
                  }),
                  n &&
                    (0, a.J)(
                      t,
                      'device.sua',
                      Object.assign({}, n, t.device.sua),
                    ),
                  r)
                ) {
                  const e = { cdep: r };
                  (0, a.J)(t, 'device.ext', Object.assign({}, e, t.device.ext));
                }
                t = A(t);
                for (let e of m.Dy)
                  if ((0, m.O$)(t, e)) {
                    t[e] = (0, s.mergeDeep)({}, O(t, i), t[e]);
                    break;
                  }
                return t;
              });
            });
          function T(e) {
            try {
              return e(E.getWindowTop());
            } catch (t) {
              return e(E.getWindowSelf());
            }
          }
          function w() {
            const e = d.$W.getConfig('firstPartyData.uaHints');
            return Array.isArray(e) && 0 !== e.length
              ? E.getHighEntropySUA(e)
              : c.k.resolve(E.getLowEntropySUA());
          }
          function C(e) {
            return (0, s.getDefinedParams)(e, Object.keys(e));
          }
          const S = {
            site(e, t) {
              if (!m.Dy.filter((e) => 'site' !== e).some(m.O$.bind(null, e)))
                return C({ page: t.page, ref: t.ref });
            },
            device: () =>
              T((e) => {
                const t = {
                  w:
                    e.innerWidth ||
                    e.document.documentElement.clientWidth ||
                    e.document.body.clientWidth,
                  h:
                    e.innerHeight ||
                    e.document.documentElement.clientHeight ||
                    e.document.body.clientHeight,
                  dnt: (0, s.getDNT)() ? 1 : 0,
                  ua: e.navigator.userAgent,
                  language: e.navigator.language.split('-').shift(),
                };
                return (
                  e.navigator?.webdriver && (0, a.J)(t, 'ext.webdriver', !0), t
                );
              }),
            regs() {
              const e = {};
              T((e) => e.navigator.globalPrivacyControl) &&
                (0, a.J)(e, 'ext.gpc', 1);
              const t = d.$W.getConfig('coppa');
              return 'boolean' == typeof t && (e.coppa = t ? 1 : 0), e;
            },
          };
          function O(e, t) {
            const n = (0, i.gR)(t.page, { noLeadingWww: !0 }),
              r = T((e) =>
                e.document.querySelector("meta[name='keywords']"),
              )?.content?.replace?.(/\s/g, '');
            return C({
              domain: n,
              keywords: r,
              publisher: C({ domain: E.findRootDomain(n) }),
            });
          }
        },
        86656: (e, t, n) => {
          function r() {
            let e,
              t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : window;
            try {
              e = t.top.history.length;
            } catch (t) {
              e = void 0;
            }
            return e;
          }
          function i() {
            let e,
              t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : window;
            try {
              e = t.top.navigator.hardwareConcurrency;
            } catch (t) {
              e = void 0;
            }
            return e;
          }
          function o() {
            let e,
              t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : window;
            try {
              e = t.top.navigator.deviceMemory;
            } catch (t) {
              e = void 0;
            }
            return e;
          }
          n.d(t, { GA: () => r, iz: () => i, qM: () => o });
        },
        73858: (e, t, n) => {
          n.d(t, { Dy: () => i, O$: () => s, i8: () => o });
          var r = n(91069);
          const i = ['dooh', 'app', 'site'];
          function o(e) {
            return function (t) {
              return (
                i.reduce(
                  (n, i) => (
                    s(t, i) &&
                      (null != n
                        ? ((0, r.logWarn)(
                            `${e} specifies both '${n}' and '${i}'; dropping the latter.`,
                          ),
                          delete t[i])
                        : (n = i)),
                    n
                  ),
                  null,
                ),
                t
              );
            };
          }
          function s(e, t) {
            return null != e[t] && Object.keys(e[t]).length > 0;
          }
        },
        5973: (e, t, n) => {
          n.d(t, { S: () => o });
          var r = n(91069);
          const i = (0, n(12938).CK)('fpdEnrichment'),
            o = (0, r.memoize)(function () {
              let e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : window.location.host;
              if (!i.cookiesAreEnabled()) return e;
              const t = e.split('.');
              if (2 === t.length) return e;
              let n,
                o,
                s = -2;
              const a = `_rdc${Date.now()}`,
                d = 'writeable';
              do {
                n = t.slice(s).join('.');
                let e = new Date((0, r.timestamp)() + 1e4).toUTCString();
                i.setCookie(a, d, e, 'Lax', n, void 0);
                i.getCookie(a, void 0) === d
                  ? ((o = !1),
                    i.setCookie(
                      a,
                      '',
                      'Thu, 01 Jan 1970 00:00:01 GMT',
                      void 0,
                      n,
                      void 0,
                    ))
                  : ((s += -1), (o = Math.abs(s) <= t.length));
              } while (o);
              return n;
            });
        },
        16833: (e, t, n) => {
          n.d(t, {
            A_: () => s,
            Gc: () => d,
            Y6: () => p,
            Yn: () => c,
            bz: () => f,
            pT: () => l,
            xG: () => g,
          });
          var r = n(68128),
            i = n.n(r),
            o = n(25555);
          let s = i()({ ready: i().SYNC | i().ASYNC | i().QUEUE });
          const a = (0, o.v)();
          s.ready = (() => {
            const e = s.ready;
            return function () {
              try {
                return e.apply(s, arguments);
              } finally {
                a.resolve();
              }
            };
          })();
          const d = a.promise,
            c = s.get;
          function l(e, t) {
            let n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 15;
            0 === e.getHooks({ hook: t }).length && e.before(t, n);
          }
          const u = {};
          function g(e, t) {
            let { postInstallAllowed: n = !1 } =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : {};
            s(
              'async',
              function (r) {
                r.forEach((e) => t(...e)), n && (u[e] = t);
              },
              e,
            )([]);
          }
          function f(e) {
            for (
              var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1;
              r < t;
              r++
            )
              n[r - 1] = arguments[r];
            const i = u[e];
            if (i) return i(...n);
            c(e).before((e, t) => {
              t.push(n), e(t);
            });
          }
          function p(e, t) {
            return (
              Object.defineProperties(
                t,
                Object.fromEntries(
                  ['before', 'after', 'getHooks', 'removeAll'].map((t) => [
                    t,
                    { get: () => e[t] },
                  ]),
                ),
              ),
              t
            );
          }
        },
        71371: (e, t, n) => {
          n.d(t, { D4: () => o, G_: () => i, LM: () => s, s6: () => r });
          const r = 'native',
            i = 'video',
            o = 'banner',
            s = 'adpod';
        },
        12449: (e, t, n) => {
          n.d(t, {
            Bm: () => I,
            Ex: () => W,
            Gg: () => O,
            IX: () => R,
            Nh: () => g,
            Xj: () => q,
            Zj: () => C,
            gs: () => w,
            l6: () => y,
            mT: () => u,
            nk: () => E,
            rn: () => _,
            vO: () => T,
            yl: () => U,
          });
          var r = n(70433),
            i = n(91069),
            o = n(15901),
            s = n(67314),
            a = n(78969),
            d = n(71371),
            c = n(29075),
            l = n(46031);
          const u = [],
            g = Object.keys(a.x5).map((e) => a.x5[e]),
            f = {
              image: {
                ortb: {
                  ver: '1.2',
                  assets: [
                    {
                      required: 1,
                      id: 1,
                      img: { type: 3, wmin: 100, hmin: 100 },
                    },
                    { required: 1, id: 2, title: { len: 140 } },
                    { required: 1, id: 3, data: { type: 1 } },
                    { required: 0, id: 4, data: { type: 2 } },
                    {
                      required: 0,
                      id: 5,
                      img: { type: 1, wmin: 20, hmin: 20 },
                    },
                  ],
                },
                image: { required: !0 },
                title: { required: !0 },
                sponsoredBy: { required: !0 },
                clickUrl: { required: !0 },
                body: { required: !1 },
                icon: { required: !1 },
              },
            },
            p = P(a.h0),
            m = P(a.jO),
            h = { img: 1, js: 2, 1: 'img', 2: 'js' },
            b = {
              impression: 1,
              'viewable-mrc50': 2,
              'viewable-mrc100': 3,
              'viewable-video50': 4,
            };
          function y(e) {
            return e.native && 'object' == typeof e.native;
          }
          function v(e) {
            if (
              (e &&
                e.type &&
                (function (e) {
                  if (!e || !(0, o.mK)(Object.keys(f), e))
                    return (
                      (0, i.logError)(`${e} nativeParam is not supported`), !1
                    );
                  return !0;
                })(e.type) &&
                (e = f[e.type]),
              !e || !e.ortb || A(e.ortb))
            )
              return e;
          }
          function E(e) {
            e.forEach((e) => {
              const t = e.nativeParams || (0, r.A)(e, 'mediaTypes.native');
              t && (e.nativeParams = v(t)),
                e.nativeParams &&
                  (e.nativeOrtbRequest =
                    e.nativeParams.ortb || _(e.nativeParams));
            });
          }
          function A(e) {
            const t = e.assets;
            if (!Array.isArray(t) || 0 === t.length)
              return (
                (0, i.logError)(
                  "assets in mediaTypes.native.ortb is not an array, or it's empty. Assets: ",
                  t,
                ),
                !1
              );
            const n = t.map((e) => e.id);
            return t.length !== new Set(n).size ||
              n.some((e) => e !== parseInt(e, 10))
              ? ((0, i.logError)(
                  "each asset object must have 'id' property, it must be unique and it must be an integer",
                ),
                !1)
              : e.hasOwnProperty('eventtrackers') &&
                  !Array.isArray(e.eventtrackers)
                ? ((0, i.logError)(
                    'ortb.eventtrackers is not an array. Eventtrackers: ',
                    e.eventtrackers,
                  ),
                  !1)
                : t.every((e) =>
                    (function (e) {
                      if (!(0, i.isPlainObject)(e))
                        return (
                          (0, i.logError)(
                            'asset must be an object. Provided asset: ',
                            e,
                          ),
                          !1
                        );
                      if (e.img) {
                        if (
                          !(0, i.isNumber)(e.img.w) &&
                          !(0, i.isNumber)(e.img.wmin)
                        )
                          return (
                            (0, i.logError)(
                              "for img asset there must be 'w' or 'wmin' property",
                            ),
                            !1
                          );
                        if (
                          !(0, i.isNumber)(e.img.h) &&
                          !(0, i.isNumber)(e.img.hmin)
                        )
                          return (
                            (0, i.logError)(
                              "for img asset there must be 'h' or 'hmin' property",
                            ),
                            !1
                          );
                      } else if (e.title) {
                        if (!(0, i.isNumber)(e.title.len))
                          return (
                            (0, i.logError)(
                              "for title asset there must be 'len' property defined",
                            ),
                            !1
                          );
                      } else if (e.data) {
                        if (!(0, i.isNumber)(e.data.type))
                          return (
                            (0, i.logError)(
                              "for data asset 'type' property must be a number",
                            ),
                            !1
                          );
                      } else if (
                        e.video &&
                        !(
                          Array.isArray(e.video.mimes) &&
                          Array.isArray(e.video.protocols) &&
                          (0, i.isNumber)(e.video.minduration) &&
                          (0, i.isNumber)(e.video.maxduration)
                        )
                      )
                        return (
                          (0, i.logError)(
                            'video asset is not properly configured',
                          ),
                          !1
                        );
                      return !0;
                    })(e),
                  );
          }
          function I(e) {
            let { index: t = s.n.index } =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {};
            const n = t.getAdUnit(e);
            if (!n) return !1;
            let a = n.nativeOrtbRequest;
            return (function (e, t) {
              if (!(0, r.A)(e, 'link.url'))
                return (
                  (0, i.logError)(
                    "native response doesn't have 'link' property. Ortb response: ",
                    e,
                  ),
                  !1
                );
              let n = t.assets.filter((e) => 1 === e.required).map((e) => e.id),
                s = e.assets.map((e) => e.id);
              const a = n.every((e) => (0, o.mK)(s, e));
              a ||
                (0, i.logError)(
                  `didn't receive a bid with all required assets. Required ids: ${n}, but received ids in response: ${s}`,
                );
              return a;
            })(e.native?.ortb || x(e.native, a), a);
          }
          function T(e, t) {
            const n = t.native.ortb || N(t.native);
            return (
              'click' === e.action
                ? (function (e) {
                    let t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : null,
                      { fetchURL: n = i.triggerPixel } =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : {};
                    if (t) {
                      const r = (e.assets || [])
                          .filter((e) => e.link)
                          .reduce((e, t) => ((e[t.id] = t.link), e), {}),
                        i = e.link?.clicktrackers || [];
                      let o = r[t],
                        s = i;
                      o && (s = o.clicktrackers || []), s.forEach((e) => n(e));
                    } else (e.link?.clicktrackers || []).forEach((e) => n(e));
                  })(n, e?.assetId)
                : (function (e) {
                    let {
                      runMarkup: t = (e) => (0, i.insertHtmlIntoIframe)(e),
                      fetchURL: n = i.triggerPixel,
                    } =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                    const r = (e.eventtrackers || []).filter(
                      (e) => e.event === b.impression,
                    );
                    let { img: o, js: s } = r.reduce(
                      (e, t) => (
                        h.hasOwnProperty(t.method) &&
                          e[h[t.method]].push(t.url),
                        e
                      ),
                      { img: [], js: [] },
                    );
                    e.imptrackers && (o = o.concat(e.imptrackers));
                    o.forEach((e) => n(e)),
                      (s = s.map((e) => `<script async src="${e}"><\/script>`)),
                      e.jstracker && (s = s.concat([e.jstracker]));
                    s.length && t(s.join('\n'));
                  })(n),
              e.action
            );
          }
          function w(e, t) {
            const n = t?.nativeOrtbRequest,
              r = e.native?.ortb;
            if (n && r) {
              const t = W(r, n);
              Object.assign(e.native, t);
            }
            ['rendererUrl', 'adTemplate'].forEach((n) => {
              const r = t?.nativeParams?.[n];
              r && (e.native[n] = D(r));
            });
          }
          function C(e) {
            let { index: t = s.n.index } =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {},
              n = {};
            const i = t.getAdUnit(e),
              o = !1 !== (0, r.A)(i, 'nativeParams.sendTargetingKeys'),
              d = (function (e) {
                const t = {};
                (0, r.A)(e, 'nativeParams.ext') &&
                  Object.keys(e.nativeParams.ext).forEach((e) => {
                    t[e] = `hb_native_${e}`;
                  });
                return { ...a.x5, ...t };
              })(i),
              c = { ...e.native, ...e.native.ext };
            return (
              delete c.ext,
              Object.keys(c).forEach((t) => {
                const s = d[t];
                let a = D(e.native[t]) || D((0, r.A)(e, `native.ext.${t}`));
                if ('adTemplate' === t || !s || !a) return;
                let c = (0, r.A)(i, `nativeParams.${t}.sendId`);
                if (
                  ('boolean' != typeof c &&
                    (c = (0, r.A)(i, `nativeParams.ext.${t}.sendId`)),
                  c)
                ) {
                  a = `${s}:${e.adId}`;
                }
                let l = (0, r.A)(i, `nativeParams.${t}.sendTargetingKeys`);
                'boolean' != typeof l &&
                  (l = (0, r.A)(i, `nativeParams.ext.${t}.sendTargetingKeys`));
                ('boolean' == typeof l ? l : o) && (n[s] = a);
              }),
              n
            );
          }
          function S(e, t) {
            let n =
                arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
              r = [];
            return (
              Object.entries(e)
                .filter((e) => {
                  let [r, i] = e;
                  return (
                    i &&
                    ((!1 === n && 'ext' === r) || null == t || t.includes(r))
                  );
                })
                .forEach((e) => {
                  let [i, o] = e;
                  !1 === n && 'ext' === i
                    ? r.push(...S(o, t, !0))
                    : (n || a.x5.hasOwnProperty(i)) &&
                      r.push({ key: i, value: D(o) });
                }),
              r
            );
          }
          function O(e, t, n) {
            const r = {
              ...(0, i.getDefinedParams)(e.native, [
                'rendererUrl',
                'adTemplate',
              ]),
              assets: S(e.native, n),
              nativeKeys: a.x5,
            };
            return (
              e.native.ortb
                ? (r.ortb = e.native.ortb)
                : t.mediaTypes?.native?.ortb &&
                  (r.ortb = x(e.native, t.nativeOrtbRequest)),
              r
            );
          }
          function B(e, t, n) {
            let { index: r = s.n.index } =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : {};
            const i = { message: 'assetResponse', adId: e.adId };
            let o = (0, c.vd)(t).native;
            return (
              o
                ? ((i.native = Object.assign({}, o)),
                  (i.renderer = (0, l.k)(t)),
                  null != n &&
                    (o.assets = o.assets.filter((e) => {
                      let { key: t } = e;
                      return n.includes(t);
                    })))
                : (o = O(t, r.getAdUnit(t), n)),
              Object.assign(i, o)
            );
          }
          const k = Object.fromEntries(
            Object.entries(a.x5).map((e) => {
              let [t, n] = e;
              return [n, t];
            }),
          );
          function R(e, t) {
            const n = e.assets.map((e) => k[e]);
            return B(e, t, n);
          }
          function U(e, t) {
            return B(e, t, null);
          }
          function D(e) {
            return e?.url || e;
          }
          function _(e) {
            if (!e && !(0, i.isPlainObject)(e))
              return void (0, i.logError)(
                'Native assets object is empty or not an object: ',
                e,
              );
            const t = { ver: '1.2', assets: [] };
            for (let n in e) {
              if (a._B.includes(n)) continue;
              if (!a.x5.hasOwnProperty(n)) {
                (0, i.logError)(
                  `Unrecognized native asset code: ${n}. Asset will be ignored.`,
                );
                continue;
              }
              if ('privacyLink' === n) {
                t.privacy = 1;
                continue;
              }
              const r = e[n];
              let o = 0;
              r.required &&
                (0, i.isBoolean)(r.required) &&
                (o = Number(r.required));
              const s = { id: t.assets.length, required: o };
              if (n in a.h0)
                (s.data = { type: a.jO[a.h0[n]] }),
                  r.len && (s.data.len = r.len);
              else if ('icon' === n || 'image' === n) {
                if (
                  ((s.img = { type: 'icon' === n ? a.oA.ICON : a.oA.MAIN }),
                  r.aspect_ratios)
                )
                  if ((0, i.isArray)(r.aspect_ratios))
                    if (r.aspect_ratios.length) {
                      const { min_width: e, min_height: t } =
                        r.aspect_ratios[0];
                      (0, i.isInteger)(e) && (0, i.isInteger)(t)
                        ? ((s.img.wmin = e), (s.img.hmin = t))
                        : (0, i.logError)(
                            'image.aspect_ratios min_width or min_height are invalid: ',
                            e,
                            t,
                          );
                      const n = r.aspect_ratios
                        .filter((e) => e.ratio_width && e.ratio_height)
                        .map((e) => `${e.ratio_width}:${e.ratio_height}`);
                      n.length > 0 && (s.img.ext = { aspectratios: n });
                    } else
                      (0, i.logError)(
                        "image.aspect_ratios was passed, but it's empty:",
                        r.aspect_ratios,
                      );
                  else
                    (0, i.logError)(
                      "image.aspect_ratios was passed, but it's not a an array:",
                      r.aspect_ratios,
                    );
                r.sizes &&
                  (2 === r.sizes.length &&
                  (0, i.isInteger)(r.sizes[0]) &&
                  (0, i.isInteger)(r.sizes[1])
                    ? ((s.img.w = r.sizes[0]),
                      (s.img.h = r.sizes[1]),
                      delete s.img.hmin,
                      delete s.img.wmin)
                    : (0, i.logError)(
                        'image.sizes was passed, but its value is not an array of integers:',
                        r.sizes,
                      ));
              } else
                'title' === n
                  ? (s.title = { len: r.len || 140 })
                  : 'ext' === n && ((s.ext = r), delete s.required);
              t.assets.push(s);
            }
            return t;
          }
          function j(e, t) {
            for (; e && t && e !== t; ) e > t ? (e -= t) : (t -= e);
            return e || t;
          }
          function $(e) {
            if (!A(e)) return;
            const t = {};
            for (const n of e.assets) {
              if (n.title) {
                const e = {
                  required: !!n.required && Boolean(n.required),
                  len: n.title.len,
                };
                t.title = e;
              } else if (n.img) {
                const e = { required: !!n.required && Boolean(n.required) };
                if (n.img.w && n.img.h) e.sizes = [n.img.w, n.img.h];
                else if (n.img.wmin && n.img.hmin) {
                  const t = j(n.img.wmin, n.img.hmin);
                  e.aspect_ratios = [
                    {
                      min_width: n.img.wmin,
                      min_height: n.img.hmin,
                      ratio_width: n.img.wmin / t,
                      ratio_height: n.img.hmin / t,
                    },
                  ];
                }
                n.img.type === a.oA.MAIN ? (t.image = e) : (t.icon = e);
              } else if (n.data) {
                let e = Object.keys(a.jO).find((e) => a.jO[e] === n.data.type),
                  r = Object.keys(a.h0).find((t) => a.h0[t] === e);
                (t[r] = { required: !!n.required && Boolean(n.required) }),
                  n.data.len && (t[r].len = n.data.len);
              }
              e.privacy && (t.privacyLink = { required: !1 });
            }
            return t;
          }
          function q(e) {
            {
              if (!e || !(0, i.isArray)(e)) return e;
              if (!e.some((e) => (e?.mediaTypes || {})[d.s6]?.ortb)) return e;
              let t = (0, i.deepClone)(e);
              for (const e of t)
                e.mediaTypes &&
                  e.mediaTypes[d.s6] &&
                  e.mediaTypes[d.s6].ortb &&
                  ((e.mediaTypes[d.s6] = Object.assign(
                    (0, i.pick)(e.mediaTypes[d.s6], a._B),
                    $(e.mediaTypes[d.s6].ortb),
                  )),
                  (e.nativeParams = v(e.mediaTypes[d.s6])));
              return t;
            }
          }
          function N(e) {
            const t = { link: {}, eventtrackers: [] };
            return (
              Object.entries(e).forEach((e) => {
                let [n, r] = e;
                switch (n) {
                  case 'clickUrl':
                    t.link.url = r;
                    break;
                  case 'clickTrackers':
                    t.link.clicktrackers = Array.isArray(r) ? r : [r];
                    break;
                  case 'impressionTrackers':
                    (Array.isArray(r) ? r : [r]).forEach((e) => {
                      t.eventtrackers.push({
                        event: b.impression,
                        method: h.img,
                        url: e,
                      });
                    });
                    break;
                  case 'javascriptTrackers':
                    t.jstracker = Array.isArray(r) ? r.join('') : r;
                    break;
                  case 'privacyLink':
                    t.privacy = r;
                }
              }),
              t
            );
          }
          function x(e, t) {
            const n = { ...N(e), assets: [] };
            function r(e, r) {
              let o = t.assets.find(e);
              null != o && ((o = (0, i.deepClone)(o)), r(o), n.assets.push(o));
            }
            return (
              Object.keys(e)
                .filter((t) => !!e[t])
                .forEach((t) => {
                  const n = D(e[t]);
                  switch (t) {
                    case 'title':
                      r(
                        (e) => null != e.title,
                        (e) => {
                          e.title = { text: n };
                        },
                      );
                      break;
                    case 'image':
                    case 'icon':
                      const e = 'image' === t ? a.oA.MAIN : a.oA.ICON;
                      r(
                        (t) => null != t.img && t.img.type === e,
                        (e) => {
                          e.img = { url: n };
                        },
                      );
                      break;
                    default:
                      t in a.h0 &&
                        r(
                          (e) =>
                            null != e.data && e.data.type === a.jO[a.h0[t]],
                          (e) => {
                            e.data = { value: n };
                          },
                        );
                  }
                }),
              n
            );
          }
          function W(e, t) {
            const n = {},
              r = t?.assets || [];
            (n.clickUrl = e.link.url), (n.privacyLink = e.privacy);
            for (const t of e?.assets || []) {
              const e = r.find((e) => t.id === e.id);
              t.title
                ? (n.title = t.title.text)
                : t.img
                  ? (n[e.img.type === a.oA.MAIN ? 'image' : 'icon'] = {
                      url: t.img.url,
                      width: t.img.w,
                      height: t.img.h,
                    })
                  : t.data && (n[p[m[e.data.type]]] = t.data.value);
            }
            n.impressionTrackers = [];
            let i = [];
            e.imptrackers && n.impressionTrackers.push(...e.imptrackers);
            for (const t of e?.eventtrackers || [])
              t.event === b.impression &&
                t.method === h.img &&
                n.impressionTrackers.push(t.url),
                t.event === b.impression && t.method === h.js && i.push(t.url);
            return (
              (i = i.map((e) => `<script async src="${e}"><\/script>`)),
              e?.jstracker && i.push(e.jstracker),
              i.length && (n.javascriptTrackers = i.join('\n')),
              n
            );
          }
          function P(e) {
            var t = {};
            for (var n in e) t[e[n]] = n;
            return t;
          }
        },
        1e3: (e, t, n) => {
          n.d(t, {
            Cf: () => a,
            S3: () => i,
            Tb: () => o,
            WR: () => s,
            e4: () => c,
            pS: () => u,
            qN: () => d,
            yB: () => g,
            zt: () => r,
          });
          const r = ['request', 'imp', 'bidResponse', 'response'],
            [i, o, s, a] = r,
            [d, c] = ['default', 'pbs'],
            l = new Set(r);
          const { registerOrtbProcessor: u, getProcessors: g } = (function () {
            const e = {};
            return {
              registerOrtbProcessor(t) {
                let {
                  type: n,
                  name: i,
                  fn: o,
                  priority: s = 0,
                  dialects: a = [d],
                } = t;
                if (!l.has(n))
                  throw new Error(
                    `ORTB processor type must be one of: ${r.join(', ')}`,
                  );
                a.forEach((t) => {
                  e.hasOwnProperty(t) || (e[t] = {}),
                    e[t].hasOwnProperty(n) || (e[t][n] = {}),
                    (e[t][n][i] = { priority: s, fn: o });
                });
              },
              getProcessors: (t) => e[t] || {},
            };
          })();
        },
        15901: (e, t, n) => {
          function r(e, t, n) {
            return (e && e.includes(t, n)) || !1;
          }
          function i() {
            return Array.from.apply(Array, arguments);
          }
          function o(e, t, n) {
            return e && e.find(t, n);
          }
          function s(e, t, n) {
            return e && e.findIndex(t, n);
          }
          n.d(t, { A6: () => i, I6: () => o, SL: () => s, mK: () => r });
        },
        42627: (e, t, n) => {
          n.d(t, { WH: () => V, Z: () => K, gH: () => Y });
          var r = n(7873),
            i = n(91069),
            o = n(70433),
            s = n(63172),
            a = n(12449),
            d = n(78969),
            c = n(15901),
            l = n(29075),
            u = n(46031);
          const { REQUEST: g, RESPONSE: f, NATIVE: p, EVENT: m } = d.nl,
            h = {
              [g]: function (e, t, n) {
                (0, l.bw)({
                  renderFn(t) {
                    e(Object.assign({ message: f, renderer: (0, u.k)(n) }, t));
                  },
                  resizeFn: y(t.adId, n),
                  options: t.options,
                  adId: t.adId,
                  bidResponse: n,
                });
              },
              [m]: function (e, t, n) {
                if (null == n)
                  return void (0, i.logError)(
                    `Cannot find ad '${t.adId}' for x-origin event request`,
                  );
                if (n.status !== d.tl.RENDERED)
                  return void (0, i.logWarn)(
                    `Received x-origin event request without corresponding render request for ad '${n.adId}'`,
                  );
                return (0, l.Uc)(t, n);
              },
            };
          function b() {
            window.addEventListener(
              'message',
              function (e) {
                !(function (e) {
                  var t = e.message ? 'message' : 'data',
                    n = {};
                  try {
                    n = JSON.parse(e[t]);
                  } catch (e) {
                    return;
                  }
                  if (n && n.adId && n.message && h.hasOwnProperty(n.message))
                    (0, l.$A)(n.adId, n.message === d.nl.REQUEST).then((t) => {
                      var r, o;
                      h[n.message](
                        ((r = n.adId),
                        (o = (function (e) {
                          return null == e.origin && 0 === e.ports.length
                            ? function () {
                                const e =
                                  'Cannot post message to a frame with null origin. Please update creatives to use MessageChannel, see https://github.com/prebid/Prebid.js/issues/7870';
                                throw ((0, i.logError)(e), new Error(e));
                              }
                            : e.ports.length > 0
                              ? function (t) {
                                  e.ports[0].postMessage(JSON.stringify(t));
                                }
                              : function (t) {
                                  e.source.postMessage(
                                    JSON.stringify(t),
                                    e.origin,
                                  );
                                };
                        })(e)),
                        function (e) {
                          for (
                            var t = arguments.length,
                              n = new Array(t > 1 ? t - 1 : 0),
                              i = 1;
                            i < t;
                            i++
                          )
                            n[i - 1] = arguments[i];
                          return o(Object.assign({}, e, { adId: r }), ...n);
                        }),
                        n,
                        t,
                      );
                    });
                })(e);
              },
              !1,
            );
          }
          function y(e, t) {
            return function (n, r) {
              !(function (e) {
                let { adId: t, adUnitCode: n, width: r, height: o } = e;
                function s(e) {
                  return e ? e + 'px' : '100%';
                }
                function a(e) {
                  let r = d(t, n),
                    i = document.getElementById(r);
                  return i && i.querySelector(e);
                }
                function d(e, t) {
                  return (0, i.isGptPubadsDefined)()
                    ? l(e)
                    : (0, i.isApnGetTagDefined)()
                      ? u(t)
                      : t;
                }
                function l(e) {
                  const t = (0, c.I6)(
                    window.googletag.pubads().getSlots(),
                    (t) =>
                      (0, c.I6)(t.getTargetingKeys(), (n) =>
                        (0, c.mK)(t.getTargeting(n), e),
                      ),
                  );
                  return t ? t.getSlotElementId() : null;
                }
                function u(e) {
                  let t = window.apntag.getTag(e);
                  return t && t.targetId;
                }
                ['div', 'iframe'].forEach((e) => {
                  let t = a(e + ':not([style*="display: none"])');
                  if (t) {
                    let e = t.style;
                    (e.width = s(r)), (e.height = s(o));
                  } else
                    (0, i.logWarn)(
                      `Unable to locate matching page element for adUnitCode ${n}.  Can't resize it to ad's dimensions.  Please review setup.`,
                    );
                });
              })({ ...t, width: n, height: r, adId: e });
            };
          }
          Object.assign(h, {
            [p]: function (e, t, n) {
              if (null == n)
                return void (0, i.logError)(
                  `Cannot find ad for x-origin event request: '${t.adId}'`,
                );
              n.status !== d.tl.RENDERED && (0, l.n6)(n);
              switch (t.action) {
                case 'assetRequest':
                  e((0, a.IX)(t, n));
                  break;
                case 'allAssetRequest':
                  e((0, a.yl)(t, n));
                  break;
                default:
                  (0, l.vW)(t, n, { resizeFn: y(n) });
              }
            },
          });
          var v = n(38230),
            E = n(43272),
            A = n(67314),
            I = n(97779),
            T = n(16833),
            w = n(49164),
            C = n(93597),
            S = n(12938),
            O = n(11445),
            B = n(75023),
            k = n(16894),
            R = n(25555),
            U = n(20687),
            D = n(16916),
            _ = n(12713),
            j = n(63895);
          const $ = (0, r.m)(),
            { triggerUserSyncs: q } = v.zt,
            { ADD_AD_UNITS: N, REQUEST_BIDS: x, SET_TARGETING: W } = d.qY,
            P = {
              bidWon: function (e) {
                if (
                  !A.n
                    .getBidsRequested()
                    .map((e) => e.bids.map((e) => e.adUnitCode))
                    .reduce(i.flatten)
                    .filter(i.uniques)
                    .includes(e)
                )
                  return void (0, i.logError)(
                    'The "' + e + '" placement is not defined.',
                  );
                return !0;
              },
            };
          function M(e, t) {
            let n = [];
            return (
              (0, i.isArray)(e) &&
                (t ? e.length === t : e.length > 0) &&
                (e.every((e) => (0, i.isArrayOfNums)(e, 2))
                  ? (n = e)
                  : (0, i.isArrayOfNums)(e, 2) && n.push(e)),
              n
            );
          }
          function G(e) {
            const t = (0, i.deepClone)(e),
              n = t.mediaTypes.banner,
              r = M(n.sizes);
            return (
              r.length > 0
                ? ((n.sizes = r), (t.sizes = r))
                : ((0, i.logError)(
                    'Detected a mediaTypes.banner object without a proper sizes field.  Please ensure the sizes are listed like: [[300, 250], ...].  Removing invalid mediaTypes.banner object from request.',
                  ),
                  delete t.mediaTypes.banner),
              t
            );
          }
          function L(e) {
            const t = (0, i.deepClone)(e),
              n = t.mediaTypes.video;
            if (n.playerSize) {
              let e = 'number' == typeof n.playerSize[0] ? 2 : 1;
              const r = M(n.playerSize, e);
              r.length > 0
                ? (2 === e &&
                    (0, i.logInfo)(
                      "Transforming video.playerSize from [640,480] to [[640,480]] so it's in the proper format.",
                    ),
                  (n.playerSize = r),
                  (t.sizes = r))
                : ((0, i.logError)(
                    'Detected incorrect configuration of mediaTypes.video.playerSize.  Please specify only one set of dimensions in a format like: [[640, 480]]. Removing invalid mediaTypes.video.playerSize property from request.',
                  ),
                  delete t.mediaTypes.video.playerSize);
            }
            return t;
          }
          function F(e) {
            function t(t) {
              return (
                (0, i.logError)(
                  `Error in adUnit "${e.code}": ${t}. Removing native request from ad unit`,
                  e,
                ),
                delete r.mediaTypes.native,
                r
              );
            }
            function n(e) {
              for (const t of ['sendTargetingKeys', 'types'])
                if (o.hasOwnProperty(t)) {
                  const n = e(t);
                  if (n) return n;
                }
            }
            const r = (0, i.deepClone)(e),
              o = r.mediaTypes.native;
            if (o.ortb) {
              if (
                o.ortb.assets?.some(
                  (e) => !(0, i.isNumber)(e.id) || e.id < 0 || e.id % 1 != 0,
                )
              )
                return t('native asset ID must be a nonnegative integer');
              if (n((e) => t(`ORTB native requests cannot specify "${e}"`)))
                return r;
              const e = Object.keys(d.x5).filter((e) =>
                  d.x5[e].includes('hb_native_'),
                ),
                s = Object.keys(o).filter((t) => e.includes(t));
              s.length > 0 &&
                ((0, i.logError)(
                  `when using native OpenRTB format, you cannot use legacy native properties. Deleting ${s} keys from request.`,
                ),
                s.forEach((e) => delete r.mediaTypes.native[e]));
            } else
              n(
                (e) =>
                  `mediaTypes.native.${e} is deprecated, consider using native ORTB instead`,
              );
            return (
              o.image &&
                o.image.sizes &&
                !Array.isArray(o.image.sizes) &&
                ((0, i.logError)(
                  'Please use an array of sizes for native.image.sizes field.  Removing invalid mediaTypes.native.image.sizes property from request.',
                ),
                delete r.mediaTypes.native.image.sizes),
              o.image &&
                o.image.aspect_ratios &&
                !Array.isArray(o.image.aspect_ratios) &&
                ((0, i.logError)(
                  'Please use an array of sizes for native.image.aspect_ratios field.  Removing invalid mediaTypes.native.image.aspect_ratios property from request.',
                ),
                delete r.mediaTypes.native.image.aspect_ratios),
              o.icon &&
                o.icon.sizes &&
                !Array.isArray(o.icon.sizes) &&
                ((0, i.logError)(
                  'Please use an array of sizes for native.icon.sizes field.  Removing invalid mediaTypes.native.icon.sizes property from request.',
                ),
                delete r.mediaTypes.native.icon.sizes),
              r
            );
          }
          function z(e, t) {
            let n = (0, o.A)(e, `mediaTypes.${t}.pos`);
            if (!(0, i.isNumber)(n) || isNaN(n) || !isFinite(n)) {
              let n = `Value of property 'pos' on ad unit ${e.code} should be of type: Number`;
              (0, i.logWarn)(n),
                B.emit(d.qY.AUCTION_DEBUG, { type: 'WARNING', arguments: n }),
                delete e.mediaTypes[t].pos;
            }
            return e;
          }
          function H(e) {
            const t = (t) => `adUnit.code '${e.code}' ${t}`,
              n = e.mediaTypes,
              r = e.bids;
            return null == r || (0, i.isArray)(r)
              ? null == r && null == e.ortb2Imp
                ? ((0, i.logError)(
                    t(
                      "has no 'adUnit.bids' and no 'adUnit.ortb2Imp'. Removing adUnit from auction",
                    ),
                  ),
                  null)
                : n && 0 !== Object.keys(n).length
                  ? (null == e.ortb2Imp ||
                      (null != r && 0 !== r.length) ||
                      ((e.bids = [{ bidder: null }]),
                      (0, i.logMessage)(
                        t(
                          "defines 'adUnit.ortb2Imp' with no 'adUnit.bids'; it will be seen only by S2S adapters",
                        ),
                      )),
                    e)
                  : ((0, i.logError)(
                      t(
                        "does not define a 'mediaTypes' object.  This is a required field for the auction, so this adUnit has been removed.",
                      ),
                    ),
                    null)
              : ((0, i.logError)(
                  t(
                    "defines 'adUnit.bids' that is not an array. Removing adUnit from auction",
                  ),
                ),
                null);
          }
          (0, w.L6)(),
            ($.bidderSettings = $.bidderSettings || {}),
            ($.libLoaded = !0),
            ($.version = 'v9.0.0'),
            (0, i.logInfo)('Prebid.js v9.0.0 loaded'),
            ($.installedModules = $.installedModules || []),
            ($.adUnits = $.adUnits || []),
            ($.triggerUserSyncs = q);
          const V = {
            validateAdUnit: H,
            validateBannerMediaType: G,
            validateSizes: M,
          };
          Object.assign(V, { validateNativeMediaType: F }),
            Object.assign(V, { validateVideoMediaType: L });
          const K = (0, T.A_)(
            'sync',
            function (e) {
              const t = [];
              return (
                e.forEach((e) => {
                  if (null == (e = H(e))) return;
                  const n = e.mediaTypes;
                  let r, i, o;
                  n.banner &&
                    ((r = G(e)),
                    n.banner.hasOwnProperty('pos') && (r = z(r, 'banner'))),
                    n.video &&
                      ((i = L(r || e)),
                      n.video.hasOwnProperty('pos') && (i = z(i, 'video'))),
                    n.native && (o = F(i || r || e));
                  const s = Object.assign({}, r, i, o);
                  t.push(s);
                }),
                t
              );
            },
            'checkAdUnitSetup',
          );
          function J(e) {
            const t = A.n[e]().filter((e) =>
                A.n.getAdUnitCodes().includes(e.adUnitCode),
              ),
              n = A.n.getLastAuctionId();
            return t
              .map((e) => e.adUnitCode)
              .filter(i.uniques)
              .map((e) =>
                t.filter((t) => t.auctionId === n && t.adUnitCode === e),
              )
              .filter((e) => e && e[0] && e[0].adUnitCode)
              .map((e) => ({ [e[0].adUnitCode]: { bids: e } }))
              .reduce((e, t) => Object.assign(e, t), {});
          }
          ($.getAdserverTargetingForAdUnitCodeStr = function (e) {
            if (
              ((0, i.logInfo)(
                'Invoking pbjs.getAdserverTargetingForAdUnitCodeStr',
                arguments,
              ),
              e)
            ) {
              var t = $.getAdserverTargetingForAdUnitCode(e);
              return (0, i.transformAdServerTargetingObj)(t);
            }
            (0, i.logMessage)(
              'Need to call getAdserverTargetingForAdUnitCodeStr with adunitCode',
            );
          }),
            ($.getHighestUnusedBidResponseForAdUnitCode = function (e) {
              if (e) {
                const t = A.n.getAllBidsForAdUnitCode(e).filter(I.Yl);
                return t.length ? t.reduce(_.Vk) : {};
              }
              (0, i.logMessage)(
                'Need to call getHighestUnusedBidResponseForAdUnitCode with adunitCode',
              );
            }),
            ($.getAdserverTargetingForAdUnitCode = function (e) {
              return $.getAdserverTargeting(e)[e];
            }),
            ($.getAdserverTargeting = function (e) {
              return (
                (0, i.logInfo)('Invoking pbjs.getAdserverTargeting', arguments),
                I.iS.getAllTargeting(e)
              );
            }),
            ($.getConsentMetadata = function () {
              return (
                (0, i.logInfo)('Invoking pbjs.getConsentMetadata'),
                D.SL.getConsentMeta()
              );
            }),
            ($.getNoBids = function () {
              return (
                (0, i.logInfo)('Invoking pbjs.getNoBids', arguments),
                J('getNoBids')
              );
            }),
            ($.getNoBidsForAdUnitCode = function (e) {
              return {
                bids: A.n.getNoBids().filter((t) => t.adUnitCode === e),
              };
            }),
            ($.getBidResponses = function () {
              return (
                (0, i.logInfo)('Invoking pbjs.getBidResponses', arguments),
                J('getBidsReceived')
              );
            }),
            ($.getBidResponsesForAdUnitCode = function (e) {
              return {
                bids: A.n.getBidsReceived().filter((t) => t.adUnitCode === e),
              };
            }),
            ($.setTargetingForGPTAsync = function (e, t) {
              (0, i.logInfo)(
                'Invoking pbjs.setTargetingForGPTAsync',
                arguments,
              ),
                (0, i.isGptPubadsDefined)()
                  ? I.iS.setTargetingForGPT(e, t)
                  : (0, i.logError)(
                      'window.googletag is not defined on the page',
                    );
            }),
            ($.setTargetingForAst = function (e) {
              (0, i.logInfo)('Invoking pbjs.setTargetingForAn', arguments),
                I.iS.isApntagDefined()
                  ? (I.iS.setTargetingForAst(e),
                    B.emit(W, I.iS.getAllTargeting()))
                  : (0, i.logError)('window.apntag is not defined on the page');
            }),
            ($.renderAd = (0, T.A_)('async', function (e, t, n) {
              (0, i.logInfo)('Invoking pbjs.renderAd', arguments),
                (0, i.logMessage)('Calling renderAd with adId :' + t),
                (0, l.BS)(e, t, n);
            })),
            ($.removeAdUnit = function (e) {
              if (((0, i.logInfo)('Invoking pbjs.removeAdUnit', arguments), !e))
                return void ($.adUnits = []);
              let t;
              (t = (0, i.isArray)(e) ? e : [e]),
                t.forEach((e) => {
                  for (let t = $.adUnits.length - 1; t >= 0; t--)
                    $.adUnits[t].code === e && $.adUnits.splice(t, 1);
                });
            }),
            ($.requestBids = (function () {
              const e = (0, T.A_)(
                'async',
                function () {
                  let {
                    bidsBackHandler: e,
                    timeout: t,
                    adUnits: n,
                    adUnitCodes: r,
                    labels: o,
                    auctionId: s,
                    ttlBuffer: a,
                    ortb2: d,
                    metrics: l,
                    defer: u,
                  } = arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {};
                  B.emit(x);
                  const g = t || E.$W.getConfig('bidderTimeout');
                  (0, i.logInfo)('Invoking pbjs.requestBids', arguments),
                    r && r.length
                      ? (n = n.filter((e) => (0, c.mK)(r, e.code)))
                      : (r = n && n.map((e) => e.code));
                  const f = {
                    global: (0, i.mergeDeep)(
                      {},
                      E.$W.getAnyConfig('ortb2') || {},
                      d || {},
                    ),
                    bidder: Object.fromEntries(
                      Object.entries(E.$W.getBidderConfig())
                        .map((e) => {
                          let [t, n] = e;
                          return [t, n.ortb2];
                        })
                        .filter((e) => {
                          let [t, n] = e;
                          return null != n;
                        }),
                    ),
                  };
                  return (0, U.w)(R.k.resolve(f.global)).then(
                    (t) => (
                      (f.global = t),
                      Y({
                        bidsBackHandler: e,
                        timeout: g,
                        adUnits: n,
                        adUnitCodes: r,
                        labels: o,
                        auctionId: s,
                        ttlBuffer: a,
                        ortb2Fragments: f,
                        metrics: l,
                        defer: u,
                      })
                    ),
                  );
                },
                'requestBids',
              );
              return (0, T.Y6)(e, function () {
                let t =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : {},
                  n = t.adUnits || $.adUnits;
                return (
                  (t.adUnits = (0, i.isArray)(n) ? n.slice() : [n]),
                  (t.metrics = (0, k.K7)()),
                  t.metrics.checkpoint('requestBids'),
                  (t.defer = (0, R.v)({
                    promiseFactory: (e) => new Promise(e),
                  })),
                  e.call(this, t),
                  t.defer.promise
                );
              });
            })());
          const Y = (0, T.A_)(
            'async',
            function () {
              let {
                bidsBackHandler: e,
                timeout: t,
                adUnits: n,
                ttlBuffer: r,
                adUnitCodes: o,
                labels: a,
                auctionId: d,
                ortb2Fragments: l,
                metrics: u,
                defer: g,
              } = arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {};
              const f = (0, O.pX)(E.$W.getConfig('s2sConfig') || []);
              function p(t, n, r) {
                if ('function' == typeof e)
                  try {
                    e(t, n, r);
                  } catch (e) {
                    (0, i.logError)('Error executing bidsBackHandler', null, e);
                  }
                g.resolve({ bids: t, timedOut: n, auctionId: r });
              }
              !(function (e) {
                e.forEach((e) => (0, j.V0)(e));
              })(n),
                (n = (0, k.BO)(u).measureTime('requestBids.validate', () =>
                  K(n),
                ));
              const m = {};
              if (
                (n.forEach((e) => {
                  const t = Object.keys(e.mediaTypes || { banner: 'banner' }),
                    n = e.bids.map((e) => e.bidder),
                    o = O.Ay.bidderRegistry,
                    s = n.filter((e) => !f.has(e));
                  e.adUnitId = (0, i.generateUUID)();
                  const a = e.ortb2Imp?.ext?.tid;
                  a &&
                    (m.hasOwnProperty(e.code)
                      ? (0, i.logWarn)(
                          `Multiple distinct ortb2Imp.ext.tid were provided for twin ad units '${e.code}'`,
                        )
                      : (m[e.code] = a)),
                    null == r ||
                      e.hasOwnProperty('ttlBuffer') ||
                      (e.ttlBuffer = r),
                    s.forEach((n) => {
                      const r = o[n],
                        s = r && r.getSpec && r.getSpec(),
                        a = (s && s.supportedMediaTypes) || ['banner'];
                      t.some((e) => (0, c.mK)(a, e)) ||
                        ((0, i.logWarn)((0, i.unsupportedBidderMessage)(e, n)),
                        (e.bids = e.bids.filter((e) => e.bidder !== n)));
                    });
                }),
                n && 0 !== n.length)
              ) {
                n.forEach((e) => {
                  const t =
                    e.ortb2Imp?.ext?.tid || m[e.code] || (0, i.generateUUID)();
                  m.hasOwnProperty(e.code) || (m[e.code] = t),
                    (e.transactionId = t),
                    (0, s.J)(e, 'ortb2Imp.ext.tid', t);
                });
                const e = A.n.createAuction({
                  adUnits: n,
                  adUnitCodes: o,
                  callback: p,
                  cbTimeout: t,
                  labels: a,
                  auctionId: d,
                  ortb2Fragments: l,
                  metrics: u,
                });
                let r = n.length;
                r > 15 &&
                  (0, i.logInfo)(
                    `Current auction ${e.getAuctionId()} contains ${r} adUnits.`,
                    n,
                  ),
                  o.forEach((t) =>
                    I.iS.setLatestAuctionForAdUnit(t, e.getAuctionId()),
                  ),
                  e.callBids();
              } else
                (0, i.logMessage)('No adUnits configured. No bids requested.'),
                  p();
            },
            'startAuction',
          );
          $.requestBids.before(function (e, t) {
            function n(e) {
              for (var t; (t = e.shift()); ) t();
            }
            n(S.s0), n(Q), e.call(this, t);
          }, 49),
            ($.addAdUnits = function (e) {
              (0, i.logInfo)('Invoking pbjs.addAdUnits', arguments),
                $.adUnits.push.apply($.adUnits, (0, i.isArray)(e) ? e : [e]),
                B.emit(N);
            }),
            ($.onEvent = function (e, t, n) {
              (0, i.logInfo)('Invoking pbjs.onEvent', arguments),
                (0, i.isFn)(t)
                  ? !n || P[e].call(null, n)
                    ? B.on(e, t, n)
                    : (0, i.logError)(
                        'The id provided is not valid for event "' +
                          e +
                          '" and no handler was set.',
                      )
                  : (0, i.logError)(
                      'The event handler provided is not a function and was not set on event "' +
                        e +
                        '".',
                    );
            }),
            ($.offEvent = function (e, t, n) {
              (0, i.logInfo)('Invoking pbjs.offEvent', arguments),
                (n && !P[e].call(null, n)) || B.off(e, t, n);
            }),
            ($.getEvents = function () {
              return (0, i.logInfo)('Invoking pbjs.getEvents'), B.getEvents();
            }),
            ($.registerBidAdapter = function (e, t) {
              (0, i.logInfo)('Invoking pbjs.registerBidAdapter', arguments);
              try {
                O.Ay.registerBidAdapter(e(), t);
              } catch (e) {
                (0, i.logError)(
                  'Error registering bidder adapter : ' + e.message,
                );
              }
            }),
            ($.registerAnalyticsAdapter = function (e) {
              (0, i.logInfo)(
                'Invoking pbjs.registerAnalyticsAdapter',
                arguments,
              );
              try {
                O.Ay.registerAnalyticsAdapter(e);
              } catch (e) {
                (0, i.logError)(
                  'Error registering analytics adapter : ' + e.message,
                );
              }
            }),
            ($.createBid = function (e) {
              return (
                (0, i.logInfo)('Invoking pbjs.createBid', arguments),
                (0, C.O)(e)
              );
            });
          const Q = [],
            X = (0, T.A_)(
              'async',
              function (e) {
                e && !(0, i.isEmpty)(e)
                  ? ((0, i.logInfo)('Invoking pbjs.enableAnalytics for: ', e),
                    O.Ay.enableAnalytics(e))
                  : (0, i.logError)(
                      'pbjs.enableAnalytics should be called with option {}',
                    );
              },
              'enableAnalyticsCb',
            );
          ($.enableAnalytics = function (e) {
            Q.push(X.bind(this, e));
          }),
            ($.aliasBidder = function (e, t, n) {
              (0, i.logInfo)('Invoking pbjs.aliasBidder', arguments),
                e && t
                  ? O.Ay.aliasBidAdapter(e, t, n)
                  : (0, i.logError)(
                      'bidderCode and alias must be passed as arguments',
                      'pbjs.aliasBidder',
                    );
            }),
            ($.aliasRegistry = O.Ay.aliasRegistry),
            E.$W.getConfig('aliasRegistry', (e) => {
              'private' === e.aliasRegistry && delete $.aliasRegistry;
            }),
            ($.getAllWinningBids = function () {
              return A.n.getAllWinningBids();
            }),
            ($.getAllPrebidWinningBids = function () {
              return A.n
                .getBidsReceived()
                .filter((e) => e.status === d.tl.BID_TARGETING_SET);
            }),
            ($.getHighestCpmBids = function (e) {
              return I.iS.getWinningBids(e);
            }),
            ($.markWinningBidAsUsed = function (e) {
              const t = Z(
                e,
                'Improper use of markWinningBidAsUsed. It needs an adUnitCode or an adId to function.',
              );
              t.length > 0 && A.n.addWinningBid(t[0]);
            });
          const Z = (e, t) => {
            let n = [];
            return (
              e.adUnitCode && e.adId
                ? (n = A.n
                    .getBidsReceived()
                    .filter(
                      (t) => t.adId === e.adId && t.adUnitCode === e.adUnitCode,
                    ))
                : e.adUnitCode
                  ? (n = I.iS.getWinningBids(e.adUnitCode))
                  : e.adId
                    ? (n = A.n
                        .getBidsReceived()
                        .filter((t) => t.adId === e.adId))
                    : (0, i.logWarn)(t),
              n
            );
          };
          function ee(e) {
            e.forEach(function (e) {
              if (void 0 === e.called)
                try {
                  e.call(), (e.called = !0);
                } catch (e) {
                  (0, i.logError)('Error processing command :', 'prebid.js', e);
                }
            });
          }
          ($.getConfig = E.$W.getAnyConfig),
            ($.readConfig = E.$W.readAnyConfig),
            ($.mergeConfig = E.$W.mergeConfig),
            ($.mergeBidderConfig = E.$W.mergeBidderConfig),
            ($.setConfig = E.$W.setConfig),
            ($.setBidderConfig = E.$W.setBidderConfig),
            $.que.push(() => b()),
            ($.cmd.push = function (e) {
              if ('function' == typeof e)
                try {
                  e.call();
                } catch (e) {
                  (0, i.logError)(
                    'Error processing command :',
                    e.message,
                    e.stack,
                  );
                }
              else
                (0, i.logError)(
                  'Commands written into pbjs.cmd.push must be wrapped in a function',
                );
            }),
            ($.que.push = $.cmd.push),
            ($.processQueue = function () {
              T.A_.ready(), ee($.que), ee($.cmd);
            }),
            ($.triggerBilling = (e) => {
              const t = Z(
                  e,
                  'Improper use of triggerBilling. It requires a bid with at least an adUnitCode or an adId to function.',
                ),
                n = t.find((t) => t.requestId === e.requestId) || t[0];
              if (t.length > 0 && n)
                try {
                  O.Ay.callBidBillableBidder(n);
                } catch (e) {
                  (0, i.logError)('Error when triggering billing :', e);
                }
              else
                (0, i.logWarn)(
                  'The bid provided to triggerBilling did not match any bids received.',
                );
            });
        },
        7873: (e, t, n) => {
          n.d(t, { E: () => s, m: () => o });
          const r = window,
            i = (r.pbjs = r.pbjs || {});
          function o() {
            return i;
          }
          function s(e) {
            i.installedModules.push(e);
          }
          (i.cmd = i.cmd || []),
            (i.que = i.que || []),
            r === window &&
              ((r._pbjsGlobals = r._pbjsGlobals || []),
              r._pbjsGlobals.push('pbjs'));
        },
        27934: (e, t, n) => {
          n.d(t, { EN: () => d, gR: () => s });
          var r = n(43272),
            i = n(91069);
          function o(e) {
            let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : window;
            if (!e) return e;
            if (/\w+:\/\//.exec(e)) return e;
            let n = t.location.protocol;
            try {
              n = t.top.location.protocol;
            } catch (e) {}
            return /^\/\//.exec(e) ? n + e : `${n}//${e}`;
          }
          function s(e) {
            let { noLeadingWww: t = !1, noPort: n = !1 } =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {};
            try {
              e = new URL(o(e));
            } catch (e) {
              return;
            }
            return (
              (e = n ? e.hostname : e.host),
              t && e.startsWith('www.') && (e = e.substring(4)),
              e
            );
          }
          function a(e) {
            try {
              const t = e.querySelector("link[rel='canonical']");
              if (null !== t) return t.href;
            } catch (e) {}
            return null;
          }
          const d = (function (e) {
            let t,
              n,
              r,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : window;
            return i.top !== i
              ? e
              : function () {
                  const o = a(i.document),
                    s = i.location.href;
                  return (
                    (t === o && s === n) || ((t = o), (n = s), (r = e())), r
                  );
                };
          })(
            ((c = window),
            function () {
              const e = [],
                t = (function (e) {
                  try {
                    if (!e.location.ancestorOrigins) return;
                    return e.location.ancestorOrigins;
                  } catch (e) {}
                })(c),
                n = r.$W.getConfig('maxNestedIframes');
              let d,
                l,
                u,
                g,
                f = !1,
                p = 0,
                m = !1,
                h = !1,
                b = !1;
              do {
                const n = d,
                  r = h;
                let o,
                  s = !1,
                  g = null;
                (h = !1), (d = d ? d.parent : c);
                try {
                  o = d.location.href || null;
                } catch (e) {
                  s = !0;
                }
                if (s)
                  if (r) {
                    const e = n.context;
                    try {
                      (g = e.sourceUrl),
                        (l = g),
                        (b = !0),
                        (m = !0),
                        d === c.top && (f = !0),
                        e.canonicalUrl && (u = e.canonicalUrl);
                    } catch (e) {}
                  } else {
                    (0, i.logWarn)(
                      'Trying to access cross domain iframe. Continuing without referrer and location',
                    );
                    try {
                      const e = n.document.referrer;
                      e && ((g = e), d === c.top && (f = !0));
                    } catch (e) {}
                    !g &&
                      t &&
                      t[p - 1] &&
                      ((g = t[p - 1]), d === c.top && (b = !0)),
                      g && !m && (l = g);
                  }
                else {
                  if (o && ((g = o), (l = g), (m = !1), d === c.top)) {
                    f = !0;
                    const e = a(d.document);
                    e && (u = e);
                  }
                  d.context && d.context.sourceUrl && (h = !0);
                }
                e.push(g), p++;
              } while (d !== c.top && p < n);
              e.reverse();
              try {
                g = c.top.document.referrer;
              } catch (e) {}
              const y = f || b ? l : null,
                v = r.$W.getConfig('pageUrl') || u || null;
              let E = r.$W.getConfig('pageUrl') || y || o(v, c);
              return (
                y &&
                  y.indexOf('?') > -1 &&
                  -1 === E.indexOf('?') &&
                  (E = `${E}${y.substring(y.indexOf('?'))}`),
                {
                  reachedTop: f,
                  isAmp: m,
                  numIframes: p - 1,
                  stack: e,
                  topmostLocation: l || null,
                  location: y,
                  canonicalUrl: v,
                  page: E,
                  domain: s(E) || null,
                  ref: g || null,
                  legacy: {
                    reachedTop: f,
                    isAmp: m,
                    numIframes: p - 1,
                    stack: e,
                    referer: l || null,
                    canonicalUrl: v,
                  },
                }
              );
            }),
          );
          var c;
        },
        12938: (e, t, n) => {
          n.d(t, {
            CK: () => b,
            X0: () => f,
            qk: () => g,
            s0: () => p,
            vM: () => h,
          });
          var r = n(91069),
            i = n(12693),
            o = n(45569),
            s = n(95139),
            a = n(2604),
            d = n(76811),
            c = n(43272),
            l = n(11445),
            u = n(83441);
          const g = 'html5',
            f = 'cookie';
          let p = [];
          function m() {
            let { moduleName: e, moduleType: t } =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {},
              { isAllowed: n = s.io } =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {};
            function i(r, i) {
              let s = e;
              const g = c.$W.getCurrentBidder();
              g && t === o.tW && l.Ay.aliasRegistry[g] === e && (s = g);
              return r({ valid: n(d.Ue, (0, u.s)(t, s, { [a.Zw]: i })) });
            }
            function m(e, t, n) {
              if (!n || 'function' != typeof n) return i(e, t);
              p.push(function () {
                let r = i(e, t);
                n(r);
              });
            }
            const h = function (e) {
              return m(
                function (e) {
                  if (e && e.valid)
                    try {
                      return !!window.localStorage;
                    } catch (e) {
                      (0, r.logError)('Local storage api disabled');
                    }
                  return !1;
                },
                g,
                e,
              );
            };
            return {
              setCookie: function (e, t, n, r, i, o) {
                return m(
                  function (o) {
                    if (o && o.valid) {
                      const o =
                          i && '' !== i
                            ? ` ;domain=${encodeURIComponent(i)}`
                            : '',
                        s = n && '' !== n ? ` ;expires=${n}` : '',
                        a =
                          null != r && 'none' == r.toLowerCase()
                            ? '; Secure'
                            : '';
                      document.cookie = `${e}=${encodeURIComponent(
                        t,
                      )}${s}; path=/${o}${r ? `; SameSite=${r}` : ''}${a}`;
                    }
                  },
                  f,
                  o,
                );
              },
              getCookie: function (e, t) {
                return m(
                  function (t) {
                    if (t && t.valid) {
                      let t = window.document.cookie.match(
                        '(^|;)\\s*' + e + '\\s*=\\s*([^;]*)\\s*(;|$)',
                      );
                      return t ? decodeURIComponent(t[2]) : null;
                    }
                    return null;
                  },
                  f,
                  t,
                );
              },
              localStorageIsEnabled: function (e) {
                return m(
                  function (e) {
                    if (e && e.valid)
                      try {
                        return (
                          localStorage.setItem('prebid.cookieTest', '1'),
                          '1' === localStorage.getItem('prebid.cookieTest')
                        );
                      } catch (e) {
                      } finally {
                        try {
                          localStorage.removeItem('prebid.cookieTest');
                        } catch (e) {}
                      }
                    return !1;
                  },
                  g,
                  e,
                );
              },
              cookiesAreEnabled: function (e) {
                return m(
                  function (e) {
                    return !(!e || !e.valid) && (0, r.checkCookieSupport)();
                  },
                  f,
                  e,
                );
              },
              setDataInLocalStorage: function (e, t, n) {
                return m(
                  function (n) {
                    n && n.valid && h() && window.localStorage.setItem(e, t);
                  },
                  g,
                  n,
                );
              },
              getDataFromLocalStorage: function (e, t) {
                return m(
                  function (t) {
                    return t && t.valid && h()
                      ? window.localStorage.getItem(e)
                      : null;
                  },
                  g,
                  t,
                );
              },
              removeDataFromLocalStorage: function (e, t) {
                return m(
                  function (t) {
                    t && t.valid && h() && window.localStorage.removeItem(e);
                  },
                  g,
                  t,
                );
              },
              hasLocalStorage: h,
              findSimilarCookies: function (e, t) {
                return m(
                  function (t) {
                    if (t && t.valid) {
                      const t = [];
                      if ((0, r.hasDeviceAccess)()) {
                        const n = document.cookie.split(';');
                        for (; n.length; ) {
                          const r = n.pop();
                          let i = r.indexOf('=');
                          i = i < 0 ? r.length : i;
                          decodeURIComponent(
                            r.slice(0, i).replace(/^\s+/, ''),
                          ).indexOf(e) >= 0 &&
                            t.push(decodeURIComponent(r.slice(i + 1)));
                        }
                      }
                      return t;
                    }
                  },
                  f,
                  t,
                );
              },
            };
          }
          function h() {
            let {
              moduleType: e,
              moduleName: t,
              bidderCode: n,
            } = arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : {};
            function r() {
              throw new Error(
                'Invalid invocation for getStorageManager: must set either bidderCode, or moduleType + moduleName',
              );
            }
            return (
              n
                ? (((e && e !== o.tW) || t) && r(), (e = o.tW), (t = n))
                : (t && e) || r(),
              m({ moduleType: e, moduleName: t })
            );
          }
          function b(e) {
            return m({ moduleName: e, moduleType: o.tp });
          }
          (0, s.qB)(d.Ue, 'deviceAccess config', function () {
            if (!(0, r.hasDeviceAccess)()) return { allow: !1 };
          }),
            (0, s.qB)(d.Ue, 'bidderSettings.*.storageAllowed', function (e) {
              let t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : i.u;
              if (e[a.Dk] !== o.tW) return;
              let n = t.get(e[a.q7], 'storageAllowed');
              if (n && !0 !== n) {
                const t = e[a.Zw];
                n = Array.isArray(n) ? n.some((e) => e === t) : n === t;
              } else n = !!n;
              return n ? void 0 : { allow: n };
            });
        },
        97779: (e, t, n) => {
          n.d(t, {
            Jp: () => w,
            ME: () => T,
            Yl: () => I,
            iS: () => S,
            m2: () => C,
          });
          var r = n(91069),
            i = n(70433),
            o = n(43272),
            s = n(12449),
            a = n(67314),
            d = n(71371),
            c = n(16833),
            l = n(12693),
            u = n(15901),
            g = n(78969),
            f = n(12713),
            p = n(27863),
            m = n(75023),
            h = [];
          const b = 'targetingControls.allowTargetingKeys',
            y = 'targetingControls.addTargetingKeys',
            v = `Only one of "${b}" or "${y}" can be set`,
            E = Object.keys(g.xS).map((e) => g.xS[e]);
          let A = {
            isActualBid: (e) => e.getStatusCode() === g.XQ.GOOD,
            isBidNotExpired: (e) =>
              e.responseTimestamp + 1e3 * (0, p.L)(e) > (0, r.timestamp)(),
            isUnusedBid: (e) =>
              e &&
              ((e.status && !(0, u.mK)([g.tl.RENDERED], e.status)) ||
                !e.status),
          };
          function I(e) {
            return !Object.values(A).some((t) => !t(e));
          }
          const T = (0, c.A_)('sync', function (e, t) {
            let n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 0;
            if (
              !(arguments.length > 3 && void 0 !== arguments[3] && arguments[3])
            ) {
              const i = [],
                s = o.$W.getConfig('sendBidsControl.dealPrioritization');
              let a = (0, r.groupBy)(e, 'adUnitCode');
              return (
                Object.keys(a).forEach((e) => {
                  let o = [],
                    d = (0, r.groupBy)(a[e], 'bidderCode');
                  Object.keys(d).forEach((e) => o.push(d[e].reduce(t))),
                    n > 0
                      ? ((o = s
                          ? o.sort(w(!0))
                          : o.sort((e, t) => t.cpm - e.cpm)),
                        i.push(...o.slice(0, n)))
                      : i.push(...o);
                }),
                i
              );
            }
            return e;
          });
          function w() {
            let e =
              arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
            return function (t, n) {
              return void 0 !== t.adserverTargeting.hb_deal &&
                void 0 === n.adserverTargeting.hb_deal
                ? -1
                : void 0 === t.adserverTargeting.hb_deal &&
                    void 0 !== n.adserverTargeting.hb_deal
                  ? 1
                  : e
                    ? n.cpm - t.cpm
                    : n.adserverTargeting.hb_pb - t.adserverTargeting.hb_pb;
            };
          }
          function C(e, t) {
            return (
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : () => window.googletag.pubads().getSlots()
            )().reduce(
              (e, n) => {
                const i = (0, r.isFn)(t) && t(n);
                return (
                  Object.keys(e)
                    .filter(
                      (0, r.isFn)(i) ? i : (0, r.isAdUnitCodeMatchingSlot)(n),
                    )
                    .forEach((t) => e[t].push(n)),
                  e
                );
              },
              Object.fromEntries(e.map((e) => [e, []])),
            );
          }
          const S = (function (e) {
            let t = {},
              n = {};
            function a(e, t) {
              return (
                e.adserverTargeting &&
                t &&
                (((0, r.isArray)(t) && (0, u.mK)(t, e.adUnitCode)) ||
                  ('string' == typeof t && e.adUnitCode === t))
              );
            }
            function p(t) {
              return 'string' == typeof t
                ? [t]
                : (0, r.isArray)(t)
                  ? t
                  : e.getAdUnitCodes() || [];
            }
            function A() {
              let t = e.getBidsReceived();
              if (o.$W.getConfig('useBidCache')) {
                const e = o.$W.getConfig('bidCacheFilterFunction');
                'function' == typeof e &&
                  (t = t.filter(
                    (t) => n[t.adUnitCode] === t.auctionId || !!e(t),
                  ));
              } else t = t.filter((e) => n[e.adUnitCode] === e.auctionId);
              return (
                (t = t
                  .filter((e) => (0, i.A)(e, 'video.context') !== d.LM)
                  .filter(I)),
                t.forEach(
                  (e) => ((e.latestTargetedAuctionId = n[e.adUnitCode]), e),
                ),
                T(t, f.Bq)
              );
            }
            function S(e, n) {
              let r = t.getWinningBids(e, n),
                i = O();
              return (
                (r = r.map((e) => ({
                  [e.adUnitCode]: Object.keys(e.adserverTargeting)
                    .filter(
                      (t) =>
                        void 0 === e.sendStandardTargeting ||
                        e.sendStandardTargeting ||
                        -1 === i.indexOf(t),
                    )
                    .reduce((t, n) => {
                      const r = [e.adserverTargeting[n]],
                        i = { [n.substring(0, 20)]: r };
                      if (n === g.xS.DEAL) {
                        const o = `${n}_${e.bidderCode}`.substring(0, 20),
                          s = { [o]: r };
                        return [...t, i, s];
                      }
                      return [...t, i];
                    }, []),
                }))),
                r
              );
            }
            function O() {
              return e
                .getStandardBidderAdServerTargeting()
                .map((e) => e.key)
                .concat(E)
                .filter(r.uniques);
            }
            function B(e, t, n, i) {
              return (
                Object.keys(t.adserverTargeting)
                  .filter(k())
                  .forEach((n) => {
                    e.length &&
                      e
                        .filter(
                          (function (e) {
                            return function (n) {
                              return (
                                n.adUnitCode === t.adUnitCode &&
                                n.adserverTargeting[e]
                              );
                            };
                          })(n),
                        )
                        .forEach(
                          (function (e) {
                            return function (n) {
                              (0, r.isArray)(n.adserverTargeting[e]) ||
                                (n.adserverTargeting[e] = [
                                  n.adserverTargeting[e],
                                ]),
                                (n.adserverTargeting[e] = n.adserverTargeting[e]
                                  .concat(t.adserverTargeting[e])
                                  .filter(r.uniques)),
                                delete t.adserverTargeting[e];
                            };
                          })(n),
                        );
                  }),
                e.push(t),
                e
              );
            }
            function k() {
              let e = O();
              return (
                (e = e.concat(s.Nh)),
                function (t) {
                  return -1 === e.indexOf(t);
                }
              );
            }
            function R(e) {
              return {
                [e.adUnitCode]: Object.keys(e.adserverTargeting)
                  .filter(k())
                  .map((t) => ({
                    [t.substring(0, 20)]: [e.adserverTargeting[t]],
                  })),
              };
            }
            function U(e, t) {
              return t.map((t) => ({
                [`${t}_${e.bidderCode}`.substring(0, 20)]: [
                  e.adserverTargeting[t],
                ],
              }));
            }
            return (
              (t.setLatestAuctionForAdUnit = function (e, t) {
                n[e] = t;
              }),
              (t.resetPresetTargeting = function (e, t) {
                if ((0, r.isGptPubadsDefined)()) {
                  const n = p(e);
                  let r = h.reduce((e, t) => ((e[t] = null), e), {});
                  Object.values(C(n, t)).forEach((e) => {
                    e.forEach((e) => e.updateTargetingFromMap(r));
                  });
                }
              }),
              (t.resetPresetTargetingAST = function (e) {
                p(e).forEach(function (e) {
                  const t = window.apntag.getTag(e);
                  if (t && t.keywords) {
                    const n = Object.keys(t.keywords),
                      r = {};
                    n.forEach((e) => {
                      (0, u.mK)(h, e.toLowerCase()) || (r[e] = t.keywords[e]);
                    }),
                      window.apntag.modifyTag(e, { keywords: r });
                  }
                });
              }),
              (t.getAllTargeting = function (t) {
                let n =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : A();
                const d = p(t);
                var c = S(d, n)
                  .concat(
                    (function (e, t) {
                      return t
                        .filter((t) => (0, u.mK)(e, t.adUnitCode))
                        .map((e) => Object.assign({}, e))
                        .reduce(B, [])
                        .map(R)
                        .filter((e) => e);
                    })(d, n),
                  )
                  .concat(
                    o.$W.getConfig('enableSendAllBids')
                      ? (function (e, t) {
                          const n = E.concat(s.Nh),
                            r = o.$W.getConfig('sendBidsControl.bidLimit'),
                            i = T(t, f.Vk, r),
                            d = o.$W.getConfig(
                              'targetingControls.allowSendAllBidsTargetingKeys',
                            ),
                            c = d ? d.map((e) => g.xS[e]) : n;
                          return i
                            .map((t) => {
                              if (a(t, e))
                                return {
                                  [t.adUnitCode]: U(
                                    t,
                                    n.filter(
                                      (e) =>
                                        void 0 !== t.adserverTargeting[e] &&
                                        -1 !== c.indexOf(e),
                                    ),
                                  ),
                                };
                            })
                            .filter((e) => e);
                        })(d, n)
                      : (function (e, t) {
                          if (
                            !0 ===
                            o.$W.getConfig(
                              'targetingControls.alwaysIncludeDeals',
                            )
                          ) {
                            const n = E.concat(s.Nh);
                            return T(t, f.Vk)
                              .map((t) => {
                                if (t.dealId && a(t, e))
                                  return {
                                    [t.adUnitCode]: U(
                                      t,
                                      n.filter(
                                        (e) =>
                                          void 0 !== t.adserverTargeting[e],
                                      ),
                                    ),
                                  };
                              })
                              .filter((e) => e);
                          }
                          return [];
                        })(d, n),
                  )
                  .concat(
                    (function (t) {
                      function n(e) {
                        return (0, i.A)(e, g.iD.ADSERVER_TARGETING);
                      }
                      function o(e) {
                        const t = n(e);
                        return Object.keys(t).map(function (e) {
                          return (
                            (0, r.isStr)(t[e]) &&
                              (t[e] = t[e].split(',').map((e) => e.trim())),
                            (0, r.isArray)(t[e]) || (t[e] = [t[e]]),
                            { [e]: t[e] }
                          );
                        });
                      }
                      return e
                        .getAdUnits()
                        .filter((e) => (0, u.mK)(t, e.code) && n(e))
                        .map((e) => ({ [e.code]: o(e) }));
                    })(d),
                  );
                c.map((e) => {
                  Object.keys(e).map((t) => {
                    e[t].map((e) => {
                      -1 === h.indexOf(Object.keys(e)[0]) &&
                        (h = Object.keys(e).concat(h));
                    });
                  });
                });
                const l = Object.keys(Object.assign({}, g.Zh, g.x5));
                let m = o.$W.getConfig(b);
                const I = o.$W.getConfig(y);
                if (null != I && null != m) throw new Error(v);
                (m = null != I ? l.concat(I) : m || l),
                  Array.isArray(m) &&
                    m.length > 0 &&
                    (c = (function (e, t) {
                      const n = Object.assign({}, g.xS, g.x5),
                        i = Object.keys(n),
                        o = {};
                      (0, r.logInfo)(
                        `allowTargetingKeys - allowed keys [ ${t
                          .map((e) => n[e])
                          .join(', ')} ]`,
                      ),
                        e.map((e) => {
                          const r = Object.keys(e)[0],
                            s = e[r].filter((e) => {
                              const r = Object.keys(e)[0],
                                s =
                                  0 ===
                                    i.filter((e) => 0 === r.indexOf(n[e]))
                                      .length ||
                                  (0, u.I6)(t, (e) => {
                                    const t = n[e];
                                    return 0 === r.indexOf(t);
                                  });
                              return (o[r] = !s), s;
                            });
                          e[r] = s;
                        });
                      const s = Object.keys(o).filter((e) => o[e]);
                      return (
                        (0, r.logInfo)(
                          `allowTargetingKeys - removed keys [ ${s.join(
                            ', ',
                          )} ]`,
                        ),
                        e.filter((e) => e[Object.keys(e)[0]].length > 0)
                      );
                    })(c, m)),
                  (c = (function (e) {
                    let t = e
                      .map((e) => ({
                        [Object.keys(e)[0]]: e[Object.keys(e)[0]]
                          .map((e) => ({
                            [Object.keys(e)[0]]: e[Object.keys(e)[0]].join(','),
                          }))
                          .reduce((e, t) => Object.assign(t, e), {}),
                      }))
                      .reduce(function (e, t) {
                        var n = Object.keys(t)[0];
                        return (e[n] = Object.assign({}, e[n], t[n])), e;
                      }, {});
                    return t;
                  })(c));
                const C = o.$W.getConfig(
                  'targetingControls.auctionKeyMaxChars',
                );
                return (
                  C &&
                    ((0, r.logInfo)(
                      `Detected 'targetingControls.auctionKeyMaxChars' was active for this auction; set with a limit of ${C} characters.  Running checks on auction keys...`,
                    ),
                    (c = (function (e, t) {
                      let n = (0, r.deepClone)(e),
                        i = Object.keys(n)
                          .map((e) => ({
                            adUnitCode: e,
                            adserverTargeting: n[e],
                          }))
                          .sort(w());
                      return i.reduce(function (e, i, o, s) {
                        let a =
                          ((d = i.adserverTargeting),
                          Object.keys(d).reduce(function (e, t) {
                            return e + `${t}%3d${encodeURIComponent(d[t])}%26`;
                          }, ''));
                        var d;
                        o + 1 === s.length && (a = a.slice(0, -3));
                        let c = i.adUnitCode,
                          l = a.length;
                        return (
                          l <= t
                            ? ((t -= l),
                              (0, r.logInfo)(
                                `AdUnit '${c}' auction keys comprised of ${l} characters.  Deducted from running threshold; new limit is ${t}`,
                                n[c],
                              ),
                              (e[c] = n[c]))
                            : (0, r.logWarn)(
                                `The following keys for adUnitCode '${c}' exceeded the current limit of the 'auctionKeyMaxChars' setting.\nThe key-set size was ${l}, the current allotted amount was ${t}.\n`,
                                n[c],
                              ),
                          o + 1 === s.length &&
                            0 === Object.keys(e).length &&
                            (0, r.logError)(
                              'No auction targeting keys were permitted due to the setting in setConfig(targetingControls.auctionKeyMaxChars).  Please review setup and consider adjusting.',
                            ),
                          e
                        );
                      }, {});
                    })(c, C))),
                  d.forEach((e) => {
                    c[e] || (c[e] = {});
                  }),
                  c
                );
              }),
              o.$W.getConfig('targetingControls', function (e) {
                null != (0, i.A)(e, b) &&
                  null != (0, i.A)(e, y) &&
                  (0, r.logError)(v);
              }),
              (t.setTargetingForGPT = (0, c.A_)(
                'sync',
                function (n, i) {
                  let o = t.getAllTargeting(n),
                    s = Object.fromEntries(h.map((e) => [e, null]));
                  Object.entries(C(Object.keys(o), i)).forEach((e) => {
                    let [t, n] = e;
                    n.forEach((e) => {
                      Object.keys(o[t]).forEach((e) => {
                        let n = o[t][e];
                        'string' == typeof n &&
                          -1 !== n.indexOf(',') &&
                          (n = n.split(',')),
                          (o[t][e] = n);
                      }),
                        (0, r.logMessage)(
                          `Attempting to set targeting-map for slot: ${e.getSlotElementId()} with targeting-map:`,
                          o[t],
                        ),
                        e.updateTargetingFromMap(Object.assign({}, s, o[t]));
                    });
                  }),
                    Object.keys(o).forEach((t) => {
                      Object.keys(o[t]).forEach((n) => {
                        'hb_adid' === n &&
                          e.setStatusForBids(o[t][n], g.tl.BID_TARGETING_SET);
                      });
                    }),
                    m.emit(g.qY.SET_TARGETING, o);
                },
                'setTargetingForGPT',
              )),
              (t.getWinningBids = function (e) {
                let t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : A();
                const n = p(e);
                return t
                  .filter((e) => (0, u.mK)(n, e.adUnitCode))
                  .filter((e) =>
                    !0 === l.u.get(e.bidderCode, 'allowZeroCpmBids')
                      ? e.cpm >= 0
                      : e.cpm > 0,
                  )
                  .map((e) => e.adUnitCode)
                  .filter(r.uniques)
                  .map((e) =>
                    t
                      .filter((t) => (t.adUnitCode === e ? t : null))
                      .reduce(f.Vk),
                  );
              }),
              (t.setTargetingForAst = function (e) {
                let n = t.getAllTargeting(e);
                try {
                  t.resetPresetTargetingAST(e);
                } catch (e) {
                  (0, r.logError)('unable to reset targeting for AST' + e);
                }
                Object.keys(n).forEach((e) =>
                  Object.keys(n[e]).forEach((t) => {
                    if (
                      ((0, r.logMessage)(
                        `Attempting to set targeting for targetId: ${e} key: ${t} value: ${n[e][t]}`,
                      ),
                      (0, r.isStr)(n[e][t]) || (0, r.isArray)(n[e][t]))
                    ) {
                      let r = {},
                        i = /pt[0-9]/;
                      t.search(i) < 0
                        ? (r[t.toUpperCase()] = n[e][t])
                        : (r[t] = n[e][t]),
                        window.apntag.setKeywords(e, r, {
                          overrideKeyValue: !0,
                        });
                    }
                  }),
                );
              }),
              (t.isApntagDefined = function () {
                if (window.apntag && (0, r.isFn)(window.apntag.setKeywords))
                  return !0;
              }),
              t
            );
          })(a.n);
        },
        38230: (e, t, n) => {
          n.d(t, { qh: () => g, zt: () => p });
          var r = n(91069),
            i = n(43272),
            o = n(15901),
            s = n(12938),
            a = n(95139),
            d = n(76811),
            c = n(2604),
            l = n(45569),
            u = n(83441);
          const g = {
            syncEnabled: !0,
            filterSettings: { image: { bidders: '*', filter: 'include' } },
            syncsPerBidder: 5,
            syncDelay: 3e3,
            auctionDelay: 500,
          };
          i.$W.setDefaults({ userSync: (0, r.deepClone)(g) });
          const f = (0, s.CK)('usersync');
          const p = (function (e) {
            let t = {},
              n = { image: [], iframe: [] },
              s = new Set(),
              a = {},
              g = { image: !0, iframe: !1 },
              f = e.config;
            function p() {
              if (f.syncEnabled && e.browserSupportsCookies) {
                try {
                  !(function () {
                    if (!g.iframe) return;
                    m(n.iframe, (e) => {
                      let [t, i] = e;
                      (0, r.logMessage)(
                        `Invoking iframe user sync for bidder: ${t}`,
                      ),
                        (0, r.insertUserSyncIframe)(i),
                        (function (e, t) {
                          e.image = e.image.filter((e) => e[0] !== t);
                        })(n, t);
                    });
                  })(),
                    (function () {
                      if (!g.image) return;
                      m(n.image, (e) => {
                        let [t, n] = e;
                        (0, r.logMessage)(
                          `Invoking image pixel user sync for bidder: ${t}`,
                        ),
                          (0, r.triggerPixel)(n);
                      });
                    })();
                } catch (e) {
                  return (0, r.logError)('Error firing user syncs', e);
                }
                n = { image: [], iframe: [] };
              }
            }
            function m(e, t) {
              (0, r.shuffle)(e).forEach(t);
            }
            function h(e, t) {
              let n = f.filterSettings;
              if (
                (function (e, t) {
                  if (e.all && e[t])
                    return (
                      (0, r.logWarn)(
                        `Detected presence of the "filterSettings.all" and "filterSettings.${t}" in userSync config.  You cannot mix "all" with "iframe/image" configs; they are mutually exclusive.`,
                      ),
                      !1
                    );
                  let n = e.all ? e.all : e[t],
                    i = e.all ? 'all' : t;
                  if (!n) return !1;
                  let o = n.filter,
                    s = n.bidders;
                  if (o && 'include' !== o && 'exclude' !== o)
                    return (
                      (0, r.logWarn)(
                        `UserSync "filterSettings.${i}.filter" setting '${o}' is not a valid option; use either 'include' or 'exclude'.`,
                      ),
                      !1
                    );
                  if (
                    '*' !== s &&
                    !(
                      Array.isArray(s) &&
                      s.length > 0 &&
                      s.every((e) => (0, r.isStr)(e) && '*' !== e)
                    )
                  )
                    return (
                      (0, r.logWarn)(
                        `Detected an invalid setup in userSync "filterSettings.${i}.bidders"; use either '*' (to represent all bidders) or an array of bidders.`,
                      ),
                      !1
                    );
                  return !0;
                })(n, e)
              ) {
                g[e] = !0;
                let r = n.all ? n.all : n[e],
                  i = '*' === r.bidders ? [t] : r.bidders;
                const s = {
                  include: (e, t) => !(0, o.mK)(e, t),
                  exclude: (e, t) => (0, o.mK)(e, t),
                };
                return s[r.filter || 'include'](i, t);
              }
              return !g[e];
            }
            return (
              i.$W.getConfig('userSync', (e) => {
                if (e.userSync) {
                  let t = e.userSync.filterSettings;
                  (0, r.isPlainObject)(t) &&
                    (t.image ||
                      t.all ||
                      (e.userSync.filterSettings.image = {
                        bidders: '*',
                        filter: 'include',
                      }));
                }
                f = Object.assign(f, e.userSync);
              }),
              e.regRule(d.Ml, 'userSync config', (e) => {
                if (!f.syncEnabled)
                  return { allow: !1, reason: 'syncs are disabled' };
                if (e[c.Dk] === l.tW) {
                  const n = e[c.bt],
                    r = e[c.iK];
                  if (!t.canBidderRegisterSync(n, r))
                    return {
                      allow: !1,
                      reason: `${n} syncs are not enabled for ${r}`,
                    };
                }
              }),
              (t.registerSync = (t, i, o) =>
                s.has(i)
                  ? (0, r.logMessage)(
                      `already fired syncs for "${i}", ignoring registerSync call`,
                    )
                  : f.syncEnabled && (0, r.isArray)(n[t])
                    ? i
                      ? 0 !== f.syncsPerBidder &&
                        Number(a[i]) >= f.syncsPerBidder
                        ? (0, r.logWarn)(
                            `Number of user syncs exceeded for "${i}"`,
                          )
                        : void (
                            e.isAllowed(
                              d.Ml,
                              (0, u.s)(l.tW, i, { [c.bt]: t, [c.e3]: o }),
                            ) &&
                            (n[t].push([i, o]),
                            (a = (function (e, t) {
                              return e[t] ? (e[t] += 1) : (e[t] = 1), e;
                            })(a, i)))
                          )
                      : (0, r.logWarn)(
                          'Bidder is required for registering sync',
                        )
                    : (0, r.logWarn)(`User sync type "${t}" not supported`)),
              (t.bidderDone = s.add.bind(s)),
              (t.syncUsers = function () {
                let e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : 0;
                if (e) return setTimeout(p, Number(e));
                p();
              }),
              (t.triggerUserSyncs = () => {
                f.enableOverride && t.syncUsers();
              }),
              (t.canBidderRegisterSync = (e, t) =>
                !f.filterSettings || !h(e, t)),
              t
            );
          })(
            Object.defineProperties(
              {
                config: i.$W.getConfig('userSync'),
                isAllowed: a.io,
                regRule: a.qB,
              },
              {
                browserSupportsCookies: {
                  get: function () {
                    return !(0, r.isSafariBrowser)() && f.cookiesAreEnabled();
                  },
                },
              },
            ),
          );
        },
        91069: (e, t, n) => {
          n.r(t),
            n.d(t, {
              _each: () => fe,
              _map: () => me,
              _setEventEmitter: () => w,
              binarySearch: () => mt,
              buildUrl: () => st,
              callBurl: () => ve,
              canAccessWindowTop: () => H,
              checkCookieSupport: () => Le,
              cleanObj: () => et,
              compareCodeAndSlot: () => Ye,
              contains: () => pe,
              convertObjectToArray: () => ft,
              createIframe: () => te,
              createInvisibleIframe: () => ne,
              createTrackPixelHtml: () => Ie,
              createTrackPixelIframeHtml: () => we,
              cyrb53Hash: () => ct,
              debugTurnedOn: () => ee,
              deepAccess: () => c.A,
              deepClone: () => _e,
              deepEqual: () => at,
              deepSetValue: () => l.J,
              delayExecution: () => Fe,
              encodeMacroURI: () => Te,
              flatten: () => Se,
              formatQS: () => it,
              generateUUID: () => D,
              getBidIdParameter: () => _,
              getBidRequest: () => Oe,
              getBidderCodes: () => ke,
              getDNT: () => Je,
              getDefinedParams: () => He,
              getParameterByName: () => re,
              getPerformanceNow: () => Me,
              getPrebidInternal: () => B,
              getUniqueIdentifierStr: () => U,
              getUnixTimestampFromNow: () => gt,
              getUserConfiguredParams: () => Ke,
              getValue: () => Be,
              getWindowLocation: () => z,
              getWindowSelf: () => F,
              getWindowTop: () => L,
              groupBy: () => ze,
              hasConsoleLogger: () => Z,
              hasDeviceAccess: () => Ge,
              hasNonSerializableProperty: () => ht,
              inIframe: () => je,
              insertElement: () => he,
              insertHtmlIntoIframe: () => Ee,
              insertUserSyncIframe: () => Ae,
              internal: () => S,
              isA: () => ie,
              isAdUnitCodeMatchingSlot: () => Qe,
              isApnGetTagDefined: () => Ue,
              isArray: () => ae,
              isArrayOfNums: () => nt,
              isBoolean: () => le,
              isEmpty: () => ue,
              isEmptyStr: () => ge,
              isFn: () => oe,
              isGptPubadsDefined: () => Re,
              isInteger: () => Ze,
              isNumber: () => de,
              isPlainObject: () => ce,
              isSafariBrowser: () => qe,
              isSafeFrameWindow: () => $e,
              isStr: () => se,
              isValidMediaTypes: () => Ve,
              logError: () => Y,
              logInfo: () => K,
              logMessage: () => V,
              logWarn: () => J,
              memoize: () => ut,
              mergeDeep: () => dt,
              parseGPTSingleSizeArray: () => W,
              parseGPTSingleSizeArrayToRtbSize: () => M,
              parseQS: () => rt,
              parseQueryStringParameters: () => j,
              parseSizesInput: () => N,
              parseUrl: () => ot,
              pick: () => tt,
              prefixLog: () => Q,
              replaceAuctionPrice: () => xe,
              replaceClickThrough: () => We,
              replaceMacros: () => Ne,
              safeJSONParse: () => lt,
              setScriptAttributes: () => pt,
              shuffle: () => De,
              sizeTupleToRtbSize: () => P,
              sizeTupleToSizeString: () => x,
              sizesToSizeTuples: () => q,
              timestamp: () => Pe,
              transformAdServerTargetingObj: () => $,
              triggerPixel: () => ye,
              uniques: () => Ce,
              unsupportedBidderMessage: () => Xe,
              waitForElementToLoad: () => be,
            });
          var r = n(43272),
            i = n(45751),
            o = n(15901),
            s = n(78969),
            a = n(25555),
            d = n(7873),
            c = n(70433),
            l = n(63172),
            u = 'String',
            g = 'Function',
            f = 'Number',
            p = 'Object',
            m = 'Boolean',
            h = Object.prototype.toString;
          let b,
            y = Boolean(window.console),
            v = Boolean(y && window.console.log),
            E = Boolean(y && window.console.info),
            A = Boolean(y && window.console.warn),
            I = Boolean(y && window.console.error);
          const T = (0, d.m)();
          function w(e) {
            b = e;
          }
          function C() {
            null != b && b(...arguments);
          }
          const S = {
            checkCookieSupport: Le,
            createTrackPixelIframeHtml: we,
            getWindowSelf: F,
            getWindowTop: L,
            canAccessWindowTop: H,
            getWindowLocation: z,
            insertUserSyncIframe: Ae,
            insertElement: he,
            isFn: oe,
            triggerPixel: ye,
            logError: Y,
            logWarn: J,
            logMessage: V,
            logInfo: K,
            parseQS: rt,
            formatQS: it,
            deepEqual: at,
          };
          let O = {};
          function B() {
            return O;
          }
          var k,
            R =
              ((k = 0),
              function () {
                return ++k;
              });
          function U() {
            return R() + Math.random().toString(16).substr(2);
          }
          function D(e) {
            return e
              ? (
                  e ^
                  ((window && window.crypto && window.crypto.getRandomValues
                    ? crypto.getRandomValues(new Uint8Array(1))[0] % 16
                    : 16 * Math.random()) >>
                    (e / 4))
                ).toString(16)
              : ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, D);
          }
          function _(e, t) {
            return t?.[e] || '';
          }
          function j(e) {
            let t = '';
            for (var n in e)
              e.hasOwnProperty(n) &&
                (t += n + '=' + encodeURIComponent(e[n]) + '&');
            return (t = t.replace(/&$/, '')), t;
          }
          function $(e) {
            return e && Object.getOwnPropertyNames(e).length > 0
              ? Object.keys(e)
                  .map((t) => `${t}=${encodeURIComponent(e[t])}`)
                  .join('&')
              : '';
          }
          function q(e) {
            return 'string' == typeof e
              ? e
                  .split(/\s*,\s*/)
                  .map((e) => e.match(/^(\d+)x(\d+)$/i))
                  .filter((e) => e)
                  .map((e) => {
                    let [t, n, r] = e;
                    return [parseInt(n, 10), parseInt(r, 10)];
                  })
              : Array.isArray(e)
                ? G(e)
                  ? [e]
                  : e.filter(G)
                : [];
          }
          function N(e) {
            return q(e).map(x);
          }
          function x(e) {
            return e[0] + 'x' + e[1];
          }
          function W(e) {
            if (G(e)) return x(e);
          }
          function P(e) {
            return { w: e[0], h: e[1] };
          }
          function M(e) {
            if (G(e)) return P(e);
          }
          function G(e) {
            return ae(e) && 2 === e.length && !isNaN(e[0]) && !isNaN(e[1]);
          }
          function L() {
            return window.top;
          }
          function F() {
            return window.self;
          }
          function z() {
            return window.location;
          }
          function H() {
            try {
              if (S.getWindowTop().location.href) return !0;
            } catch (e) {
              return !1;
            }
          }
          function V() {
            ee() && v && console.log.apply(console, X(arguments, 'MESSAGE:'));
          }
          function K() {
            ee() && E && console.info.apply(console, X(arguments, 'INFO:'));
          }
          function J() {
            ee() && A && console.warn.apply(console, X(arguments, 'WARNING:')),
              C(s.qY.AUCTION_DEBUG, { type: 'WARNING', arguments });
          }
          function Y() {
            ee() && I && console.error.apply(console, X(arguments, 'ERROR:')),
              C(s.qY.AUCTION_DEBUG, { type: 'ERROR', arguments });
          }
          function Q(e) {
            function t(t) {
              return function () {
                for (
                  var n = arguments.length, r = new Array(n), i = 0;
                  i < n;
                  i++
                )
                  r[i] = arguments[i];
                t(e, ...r);
              };
            }
            return {
              logError: t(Y),
              logWarn: t(J),
              logMessage: t(V),
              logInfo: t(K),
            };
          }
          function X(e, t) {
            e = [].slice.call(e);
            let n = r.$W.getCurrentBidder();
            return (
              t && e.unshift(t),
              n && e.unshift(i('#aaa')),
              e.unshift(i('#3b88c3')),
              e.unshift('%cPrebid' + (n ? `%c${n}` : '')),
              e
            );
            function i(e) {
              return `display: inline-block; color: #fff; background: ${e}; padding: 1px 4px; border-radius: 3px;`;
            }
          }
          function Z() {
            return v;
          }
          function ee() {
            return !!r.$W.getConfig('debug');
          }
          const te = (() => {
            const e = {
              border: '0px',
              hspace: '0',
              vspace: '0',
              marginWidth: '0',
              marginHeight: '0',
              scrolling: 'no',
              frameBorder: '0',
              allowtransparency: 'true',
            };
            return function (t, n) {
              let r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : {};
              const i = t.createElement('iframe');
              return (
                Object.assign(i, Object.assign({}, e, n)),
                Object.assign(i.style, r),
                i
              );
            };
          })();
          function ne() {
            return te(
              document,
              { id: U(), width: 0, height: 0, src: 'about:blank' },
              { display: 'none', height: '0px', width: '0px', border: '0px' },
            );
          }
          function re(e) {
            return rt(z().search)[e] || '';
          }
          function ie(e, t) {
            return h.call(e) === '[object ' + t + ']';
          }
          function oe(e) {
            return ie(e, g);
          }
          function se(e) {
            return ie(e, u);
          }
          const ae = Array.isArray.bind(Array);
          function de(e) {
            return ie(e, f);
          }
          function ce(e) {
            return ie(e, p);
          }
          function le(e) {
            return ie(e, m);
          }
          function ue(e) {
            return (
              !e ||
              (ae(e) || se(e) ? !(e.length > 0) : Object.keys(e).length <= 0)
            );
          }
          function ge(e) {
            return se(e) && (!e || 0 === e.length);
          }
          function fe(e, t) {
            if (oe(e?.forEach)) return e.forEach(t, this);
            Object.entries(e || {}).forEach((e) => {
              let [n, r] = e;
              return t.call(this, r, n);
            });
          }
          function pe(e, t) {
            return oe(e?.includes) && e.includes(t);
          }
          function me(e, t) {
            return oe(e?.map)
              ? e.map(t)
              : Object.entries(e || {}).map((n) => {
                  let [r, i] = n;
                  return t(i, r, e);
                });
          }
          function he(e, t, n, r) {
            let i;
            (t = t || document),
              (i = n
                ? t.getElementsByTagName(n)
                : t.getElementsByTagName('head'));
            try {
              if (
                ((i = i.length ? i : t.getElementsByTagName('body')), i.length)
              ) {
                i = i[0];
                let t = r ? null : i.firstChild;
                return i.insertBefore(e, t);
              }
            } catch (e) {}
          }
          function be(e, t) {
            let n = null;
            return new a.k((r) => {
              const i = function () {
                e.removeEventListener('load', i),
                  e.removeEventListener('error', i),
                  null != n && window.clearTimeout(n),
                  r();
              };
              e.addEventListener('load', i),
                e.addEventListener('error', i),
                null != t && (n = window.setTimeout(i, t));
            });
          }
          function ye(e, t, n) {
            const r = new Image();
            t && S.isFn(t) && be(r, n).then(t), (r.src = e);
          }
          function ve(e) {
            let { source: t, burl: n } = e;
            t === s.RW.SRC && n && S.triggerPixel(n);
          }
          function Ee(e) {
            if (!e) return;
            const t = ne();
            var n;
            S.insertElement(t, document, 'body'),
              (n = t.contentWindow.document).open(),
              n.write(e),
              n.close();
          }
          function Ae(e, t, n) {
            let r = S.createTrackPixelIframeHtml(
                e,
                !1,
                'allow-scripts allow-same-origin',
              ),
              i = document.createElement('div');
            i.innerHTML = r;
            let o = i.firstChild;
            t && S.isFn(t) && be(o, n).then(t),
              S.insertElement(o, document, 'html', !0);
          }
          function Ie(e) {
            let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : encodeURI;
            if (!e) return '';
            let n =
              '<div style="position:absolute;left:0px;top:0px;visibility:hidden;">';
            return (n += '<img src="' + t(e) + '"></div>'), n;
          }
          function Te(e) {
            return Array.from(e.matchAll(/\$({[^}]+})/g))
              .map((e) => e[1])
              .reduce(
                (e, t) => e.replace('$' + encodeURIComponent(t), '$' + t),
                encodeURI(e),
              );
          }
          function we(e) {
            let t =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : '';
            return e
              ? ((!(arguments.length > 1 && void 0 !== arguments[1]) ||
                  arguments[1]) &&
                  (e = encodeURI(e)),
                t && (t = `sandbox="${t}"`),
                `<iframe ${t} id="${U()}"\n      frameborder="0"\n      allowtransparency="true"\n      marginheight="0" marginwidth="0"\n      width="0" hspace="0" vspace="0" height="0"\n      style="height:0px;width:0px;display:none;"\n      scrolling="no"\n      src="${e}">\n    </iframe>`)
              : '';
          }
          function Ce(e, t, n) {
            return n.indexOf(e) === t;
          }
          function Se(e, t) {
            return e.concat(t);
          }
          function Oe(e, t) {
            if (e)
              return t
                .flatMap((e) => e.bids)
                .find((t) =>
                  ['bidId', 'adId', 'bid_id'].some((n) => t[n] === e),
                );
          }
          function Be(e, t) {
            return e[t];
          }
          function ke() {
            return (
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : T.adUnits
            )
              .map((e) => e.bids.map((e) => e.bidder).reduce(Se, []))
              .reduce(Se, [])
              .filter((e) => void 0 !== e)
              .filter(Ce);
          }
          function Re() {
            if (
              window.googletag &&
              oe(window.googletag.pubads) &&
              oe(window.googletag.pubads().getSlots)
            )
              return !0;
          }
          function Ue() {
            if (window.apntag && oe(window.apntag.getTag)) return !0;
          }
          function De(e) {
            let t = e.length;
            for (; t > 0; ) {
              let n = Math.floor(Math.random() * t);
              t--;
              let r = e[t];
              (e[t] = e[n]), (e[n] = r);
            }
            return e;
          }
          function _e(e) {
            return (0, i.Q)(e) || {};
          }
          function je() {
            try {
              return S.getWindowSelf() !== S.getWindowTop();
            } catch (e) {
              return !0;
            }
          }
          function $e() {
            if (!je()) return !1;
            const e = S.getWindowSelf();
            return !(!e.$sf || !e.$sf.ext);
          }
          function qe() {
            return /^((?!chrome|android|crios|fxios).)*safari/i.test(
              navigator.userAgent,
            );
          }
          function Ne(e, t) {
            if (e)
              return Object.entries(t).reduce((e, t) => {
                let [n, r] = t;
                return e.replace(
                  new RegExp('\\$\\{' + n + '\\}', 'g'),
                  r || '',
                );
              }, e);
          }
          function xe(e, t) {
            return Ne(e, { AUCTION_PRICE: t });
          }
          function We(e, t) {
            if (e && t && 'string' == typeof t)
              return e.replace(/\${CLICKTHROUGH}/g, t);
          }
          function Pe() {
            return new Date().getTime();
          }
          function Me() {
            return (
              (window.performance &&
                window.performance.now &&
                window.performance.now()) ||
              0
            );
          }
          function Ge() {
            return !1 !== r.$W.getConfig('deviceAccess');
          }
          function Le() {
            if (window.navigator.cookieEnabled || document.cookie.length)
              return !0;
          }
          function Fe(e, t) {
            if (t < 1)
              throw new Error(
                `numRequiredCalls must be a positive number. Got ${t}`,
              );
            let n = 0;
            return function () {
              n++, n === t && e.apply(this, arguments);
            };
          }
          function ze(e, t) {
            return e.reduce(function (e, n) {
              return (e[n[t]] = e[n[t]] || []).push(n), e;
            }, {});
          }
          function He(e, t) {
            return t
              .filter((t) => e[t])
              .reduce((t, n) => Object.assign(t, { [n]: e[n] }), {});
          }
          function Ve(e) {
            const t = ['banner', 'native', 'video'],
              n = ['instream', 'outstream', 'adpod'];
            return (
              !!Object.keys(e).every((e) => (0, o.mK)(t, e)) &&
              (!e.video || !e.video.context || (0, o.mK)(n, e.video.context))
            );
          }
          function Ke(e, t, n) {
            return e
              .filter((e) => e.code === t)
              .flatMap((e) => e.bids)
              .filter((e) => e.bidder === n)
              .map((e) => e.params || {});
          }
          function Je() {
            return (
              '1' === navigator.doNotTrack ||
              '1' === window.doNotTrack ||
              '1' === navigator.msDoNotTrack ||
              'yes' === navigator.doNotTrack
            );
          }
          const Ye = (e, t) =>
            e.getAdUnitPath() === t || e.getSlotElementId() === t;
          function Qe(e) {
            return (t) => Ye(e, t);
          }
          function Xe(e, t) {
            const n = Object.keys(e.mediaTypes || { banner: 'banner' }).join(
              ', ',
            );
            return `\n    ${e.code} is a ${n} ad unit\n    containing bidders that don't support ${n}: ${t}.\n    This bidder won't fetch demand.\n  `;
          }
          const Ze = Number.isInteger.bind(Number);
          function et(e) {
            return Object.fromEntries(
              Object.entries(e).filter((e) => {
                let [t, n] = e;
                return void 0 !== n;
              }),
            );
          }
          function tt(e, t) {
            return 'object' != typeof e
              ? {}
              : t.reduce((n, r, i) => {
                  if ('function' == typeof r) return n;
                  let o = r,
                    s = r.match(/^(.+?)\sas\s(.+?)$/i);
                  s && ((r = s[1]), (o = s[2]));
                  let a = e[r];
                  return (
                    'function' == typeof t[i + 1] && (a = t[i + 1](a, n)),
                    void 0 !== a && (n[o] = a),
                    n
                  );
                }, {});
          }
          function nt(e, t) {
            return ae(e) && (!t || e.length === t) && e.every((e) => Ze(e));
          }
          function rt(e) {
            return e
              ? e
                  .replace(/^\?/, '')
                  .split('&')
                  .reduce((e, t) => {
                    let [n, r] = t.split('=');
                    return (
                      /\[\]$/.test(n)
                        ? ((n = n.replace('[]', '')),
                          (e[n] = e[n] || []),
                          e[n].push(r))
                        : (e[n] = r || ''),
                      e
                    );
                  }, {})
              : {};
          }
          function it(e) {
            return Object.keys(e)
              .map((t) =>
                Array.isArray(e[t])
                  ? e[t].map((e) => `${t}[]=${e}`).join('&')
                  : `${t}=${e[t]}`,
              )
              .join('&');
          }
          function ot(e, t) {
            let n = document.createElement('a');
            t && 'noDecodeWholeURL' in t && t.noDecodeWholeURL
              ? (n.href = e)
              : (n.href = decodeURIComponent(e));
            let r = t && 'decodeSearchAsString' in t && t.decodeSearchAsString;
            return {
              href: n.href,
              protocol: (n.protocol || '').replace(/:$/, ''),
              hostname: n.hostname,
              port: +n.port,
              pathname: n.pathname.replace(/^(?!\/)/, '/'),
              search: r ? n.search : S.parseQS(n.search || ''),
              hash: (n.hash || '').replace(/^#/, ''),
              host: n.host || window.location.host,
            };
          }
          function st(e) {
            return (
              (e.protocol || 'http') +
              '://' +
              (e.host || e.hostname + (e.port ? `:${e.port}` : '')) +
              (e.pathname || '') +
              (e.search ? `?${S.formatQS(e.search || '')}` : '') +
              (e.hash ? `#${e.hash}` : '')
            );
          }
          function at(e, t) {
            let { checkTypes: n = !1 } =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : {};
            if (e === t) return !0;
            if (
              'object' != typeof e ||
              null === e ||
              'object' != typeof t ||
              null === t ||
              (n && e.constructor !== t.constructor)
            )
              return !1;
            {
              const r = Object.keys(e);
              if (r.length !== Object.keys(t).length) return !1;
              for (let i of r) {
                if (!t.hasOwnProperty(i)) return !1;
                if (!at(e[i], t[i], { checkTypes: n })) return !1;
              }
              return !0;
            }
          }
          function dt(e) {
            for (
              var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1;
              r < t;
              r++
            )
              n[r - 1] = arguments[r];
            if (!n.length) return e;
            const i = n.shift();
            if (ce(e) && ce(i))
              for (const t in i)
                ce(i[t])
                  ? (e[t] || Object.assign(e, { [t]: {} }), dt(e[t], i[t]))
                  : ae(i[t])
                    ? e[t]
                      ? ae(e[t]) &&
                        i[t].forEach((n) => {
                          let r = 1;
                          for (let i = 0; i < e[t].length; i++)
                            if (at(e[t][i], n)) {
                              r = 0;
                              break;
                            }
                          r && e[t].push(n);
                        })
                      : Object.assign(e, { [t]: [...i[t]] })
                    : Object.assign(e, { [t]: i[t] });
            return dt(e, ...n);
          }
          function ct(e) {
            let t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              n = function (e, t) {
                if (oe(Math.imul)) return Math.imul(e, t);
                var n = (4194303 & e) * (t |= 0);
                return (
                  4290772992 & e && (n += ((4290772992 & e) * t) | 0), 0 | n
                );
              },
              r = 3735928559 ^ t,
              i = 1103547991 ^ t;
            for (let t, o = 0; o < e.length; o++)
              (t = e.charCodeAt(o)),
                (r = n(r ^ t, 2654435761)),
                (i = n(i ^ t, 1597334677));
            return (
              (r =
                n(r ^ (r >>> 16), 2246822507) ^ n(i ^ (i >>> 13), 3266489909)),
              (i =
                n(i ^ (i >>> 16), 2246822507) ^ n(r ^ (r >>> 13), 3266489909)),
              (4294967296 * (2097151 & i) + (r >>> 0)).toString()
            );
          }
          function lt(e) {
            try {
              return JSON.parse(e);
            } catch (e) {}
          }
          function ut(e) {
            let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : function (e) {
                    return e;
                  };
            const n = new Map(),
              r = function () {
                const r = t.apply(this, arguments);
                return n.has(r) || n.set(r, e.apply(this, arguments)), n.get(r);
              };
            return (r.clear = n.clear.bind(n)), r;
          }
          function gt() {
            let e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0,
              t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 'd';
            if (['m', 'd'].indexOf(t) < 0) return Date.now();
            const n = e / ('m' === t ? 1440 : 1);
            return Date.now() + (e && e > 0 ? 864e5 * n : 0);
          }
          function ft(e) {
            return Object.keys(e).map((t) => ({ [t]: e[t] }));
          }
          function pt(e, t) {
            Object.entries(t).forEach((t) => {
              let [n, r] = t;
              return e.setAttribute(n, r);
            });
          }
          function mt(e, t) {
            let n =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : (e) => e,
              r = 0,
              i = e.length && e.length - 1;
            const o = n(t);
            for (; i - r > 1; ) {
              const t = r + Math.round((i - r) / 2);
              o > n(e[t]) ? (r = t) : (i = t);
            }
            for (; e.length > r && o > n(e[r]); ) r++;
            return r;
          }
          function ht(e) {
            let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : new Set();
            for (const n in e) {
              const r = e[n],
                i = typeof r;
              if (
                void 0 === r ||
                'function' === i ||
                'symbol' === i ||
                r instanceof RegExp ||
                r instanceof Map ||
                r instanceof Set ||
                r instanceof Date ||
                (null !== r && 'object' === i && r.hasOwnProperty('toJSON'))
              )
                return !0;
              if (null !== r && 'object' === i && r.constructor === Object) {
                if (t.has(r)) return !0;
                if ((t.add(r), ht(r, t))) return !0;
              }
            }
            return !1;
          }
        },
        57176: (e, t, n) => {
          n.d(t, { y: () => s });
          var r = n(67314),
            i = n(12693),
            o = n(91069);
          function s(e, t, n) {
            let { index: s = r.n.index, bs: a = i.u } =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : {};
            n = n || s.getBidRequest(t);
            const d = t?.adapterCode,
              c = t?.bidderCode || n?.bidder,
              l = a.get(t?.adapterCode, 'adjustAlternateBids'),
              u =
                a.getOwn(c, 'bidCpmAdjustment') ||
                a.get(l ? d : c, 'bidCpmAdjustment');
            if (u && 'function' == typeof u)
              try {
                return u(e, Object.assign({}, t), n);
              } catch (e) {
                (0, o.logError)('Error during bid adjustment', e);
              }
            return e;
          }
        },
        68229: (e, t, n) => {
          n.d(t, { C: () => i });
          var r = n(70433);
          function i(e) {
            return (
              !e?.gdprApplies ||
              !0 === (0, r.A)(e, 'vendorData.purpose.consents.1')
            );
          }
        },
        16894: (e, t, n) => {
          n.d(t, { Ak: () => h, BO: () => f, K7: () => p, NL: () => b });
          var r = n(43272);
          const i = 'performanceMetrics',
            o =
              window.performance && window.performance.now
                ? () => window.performance.now()
                : () => Date.now(),
            s = new WeakMap();
          function a() {
            let {
              now: e = o,
              mkNode: t = l,
              mkTimer: n = c,
              mkRenamer: r = (e) => e,
              nodes: i = s,
            } = arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : {};
            return function () {
              return (function o(s) {
                let a =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : (e) => ({
                        forEach(t) {
                          t(e);
                        },
                      });
                a = r(a);
                const d =
                  ((c = 'timestamps'),
                  function (e) {
                    return s.dfWalk({
                      visit(t, n) {
                        const r = n[c];
                        if (r.hasOwnProperty(e)) return r[e];
                      },
                    });
                  });
                var c;
                function l(e, t) {
                  const n = a(e);
                  s.dfWalk({
                    follow: (e, t) => t.propagate && (!e || !e.stopPropagation),
                    visit(e, r) {
                      n.forEach((n) => {
                        null == e
                          ? (r.metrics[n] = t)
                          : (r.groups.hasOwnProperty(n) || (r.groups[n] = []),
                            r.groups[n].push(t));
                      });
                    },
                  });
                }
                function u(t) {
                  return n(e, (e) => l(t, e));
                }
                function g() {
                  let e = {};
                  return (
                    s.dfWalk({
                      visit(t, n) {
                        e = Object.assign(
                          {},
                          !t || t.includeGroups ? n.groups : null,
                          n.metrics,
                          e,
                        );
                      },
                    }),
                    e
                  );
                }
                const f = {
                  startTiming: u,
                  measureTime: function (e, t) {
                    return u(e).stopAfter(t)();
                  },
                  measureHookTime: function (e, t, n) {
                    const r = u(e);
                    return n(
                      (function (e) {
                        const t = r.stopBefore(e);
                        return (
                          (t.bail = e.bail && r.stopBefore(e.bail)),
                          (t.stopTiming = r),
                          (t.untimed = e),
                          t
                        );
                      })(t),
                    );
                  },
                  checkpoint: function (t) {
                    s.timestamps[t] = e();
                  },
                  timeSince: function (t, n) {
                    const r = d(t),
                      i = null != r ? e() - r : null;
                    return null != n && l(n, i), i;
                  },
                  timeBetween: function (e, t, n) {
                    const r = d(e),
                      i = d(t),
                      o = null != r && null != i ? i - r : null;
                    return null != n && l(n, o), o;
                  },
                  setMetric: l,
                  getMetrics: g,
                  fork: function () {
                    let {
                      propagate: e = !0,
                      stopPropagation: n = !1,
                      includeGroups: r = !1,
                    } = arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : {};
                    return o(
                      t([
                        [
                          s,
                          {
                            propagate: e,
                            stopPropagation: n,
                            includeGroups: r,
                          },
                        ],
                      ]),
                      a,
                    );
                  },
                  join: function (e) {
                    let {
                      propagate: t = !0,
                      stopPropagation: n = !1,
                      includeGroups: r = !1,
                    } = arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {};
                    const o = i.get(e);
                    null != o &&
                      o.addParent(s, {
                        propagate: t,
                        stopPropagation: n,
                        includeGroups: r,
                      });
                  },
                  newMetrics: function () {
                    return o(s.newSibling(), a);
                  },
                  renameWith: function (e) {
                    return o(s, e);
                  },
                  toJSON: () => g(),
                };
                return i.set(f, s), f;
              })(t([]));
            };
          }
          function d(e, t, n) {
            return function () {
              t && t();
              try {
                return e.apply(this, arguments);
              } finally {
                n && n();
              }
            };
          }
          function c(e, t) {
            const n = e();
            let r = !1;
            function i() {
              r || (t(e() - n), (r = !0));
            }
            return (
              (i.stopBefore = (e) => d(e, i)),
              (i.stopAfter = (e) => d(e, null, i)),
              i
            );
          }
          function l(e) {
            return {
              metrics: {},
              timestamps: {},
              groups: {},
              addParent(t, n) {
                e.push([t, n]);
              },
              newSibling: () => l(e.slice()),
              dfWalk() {
                let t,
                  {
                    visit: n,
                    follow: r = () => !0,
                    visited: i = new Set(),
                    inEdge: o,
                  } = arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {};
                if (!i.has(this)) {
                  if ((i.add(this), (t = n(o, this)), null != t)) return t;
                  for (const [s, a] of e)
                    if (
                      r(o, a) &&
                      ((t = s.dfWalk({
                        visit: n,
                        follow: r,
                        visited: i,
                        inEdge: a,
                      })),
                      null != t)
                    )
                      return t;
                }
              },
            };
          }
          const u = (() => {
            const e = function () {},
              t = () => ({}),
              n = { forEach: e },
              r = () => null;
            (r.stopBefore = (e) => e), (r.stopAfter = (e) => e);
            const i = Object.defineProperties(
              { dfWalk: e, newSibling: () => i, addParent: e },
              Object.fromEntries(
                ['metrics', 'timestamps', 'groups'].map((e) => [e, { get: t }]),
              ),
            );
            return a({
              now: () => 0,
              mkNode: () => i,
              mkRenamer: () => () => n,
              mkTimer: () => r,
              nodes: { get: e, set: e },
            })();
          })();
          let g = !0;
          function f(e) {
            return (g && e) || u;
          }
          r.$W.getConfig(i, (e) => {
            g = !!e[i];
          });
          const p = (() => {
            const e = a();
            return function () {
              return g ? e() : u;
            };
          })();
          function m(e, t) {
            return function (n, r) {
              return function (i) {
                for (
                  var o = arguments.length,
                    s = new Array(o > 1 ? o - 1 : 0),
                    a = 1;
                  a < o;
                  a++
                )
                  s[a - 1] = arguments[a];
                const d = this;
                return f(t.apply(d, s)).measureHookTime(e + n, i, function (e) {
                  return r.call(d, e, ...s);
                });
              };
            };
          }
          const h = m('requestBids.', (e) => e.metrics),
            b = m('addBidResponse.', (e, t) => t.metrics);
        },
        25555: (e, t, n) => {
          n.d(t, { k: () => o, v: () => s });
          const r = 0,
            i = 1;
          class o {
            #d;
            #c;
            static timeout() {
              let e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0;
              return new o((t) => {
                0 === e ? t() : setTimeout(t, e);
              });
            }
            constructor(e) {
              if ('function' != typeof e)
                throw new Error('resolver not a function');
              const t = [],
                n = [];
              let [o, s] = [r, i].map(
                (e) =>
                  function (i) {
                    if (e === r && 'function' == typeof i?.then) i.then(o, s);
                    else if (!t.length)
                      for (t.push(e, i); n.length; ) n.shift()();
                  },
              );
              try {
                e(o, s);
              } catch (e) {
                s(e);
              }
              (this.#d = t), (this.#c = n);
            }
            then(e, t) {
              const n = this.#d;
              return new this.constructor((i, o) => {
                const s = () => {
                  let s = n[1],
                    [a, d] = n[0] === r ? [e, i] : [t, o];
                  if ('function' == typeof a) {
                    try {
                      s = a(s);
                    } catch (e) {
                      return void o(e);
                    }
                    d = i;
                  }
                  d(s);
                };
                n.length ? s() : this.#c.push(s);
              });
            }
            catch(e) {
              return this.then(null, e);
            }
            finally(e) {
              let t;
              return this.then(
                (n) => ((t = n), e()),
                (n) => ((t = this.constructor.reject(n)), e()),
              ).then(() => t);
            }
            static #l(e, t, n) {
              let r = e.length;
              function i() {
                t.apply(this, arguments), --r <= 0 && n && n();
              }
              0 === e.length && n
                ? n()
                : e.forEach((e, t) =>
                    this.resolve(e).then(
                      (e) => i(!0, e, t),
                      (e) => i(!1, e, t),
                    ),
                  );
            }
            static race(e) {
              return new this((t, n) => {
                this.#l(e, (e, r) => (e ? t(r) : n(r)));
              });
            }
            static all(e) {
              return new this((t, n) => {
                let r = [];
                this.#l(
                  e,
                  (e, t, i) => (e ? (r[i] = t) : n(t)),
                  () => t(r),
                );
              });
            }
            static allSettled(e) {
              return new this((t) => {
                let n = [];
                this.#l(
                  e,
                  (e, t, r) =>
                    (n[r] = e
                      ? { status: 'fulfilled', value: t }
                      : { status: 'rejected', reason: t }),
                  () => t(n),
                );
              });
            }
            static resolve(e) {
              return new this((t) => t(e));
            }
            static reject(e) {
              return new this((t, n) => n(e));
            }
          }
          function s() {
            let e,
              t,
              { promiseFactory: n = (e) => new o(e) } =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {};
            function r(e) {
              return (t) => e(t);
            }
            return {
              promise: n((n, r) => {
                (e = n), (t = r);
              }),
              resolve: r(e),
              reject: r(t),
            };
          }
        },
        12713: (e, t, n) => {
          function r(e, t) {
            return e === t ? 0 : e < t ? -1 : 1;
          }
          function i() {
            let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : (e) => e;
            return (t, n) => r(e(t), e(n));
          }
          function o() {
            let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : r;
            return (t, n) => -e(t, n) || 0;
          }
          function s() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return function (e, n) {
              for (const r of t) {
                const t = r(e, n);
                if (0 !== t) return t;
              }
              return 0;
            };
          }
          function a() {
            let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : r;
            return (t, n) => (e(n, t) < 0 ? n : t);
          }
          function d() {
            return a(
              o(
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : r,
              ),
            );
          }
          n.d(t, {
            Bp: () => a,
            Bq: () => g,
            NV: () => i,
            Ph: () => d,
            Vk: () => u,
          });
          const c = i((e) => e.cpm),
            l = i((e) => e.responseTimestamp),
            u = d(s(c, o(i((e) => e.timeToRespond)))),
            g = d(s(c, o(l)));
          d(s(c, l));
        },
        67046: (e, t, n) => {
          n.d(t, { H: () => o });
          var r = n(25555),
            i = n(91069);
          function o() {
            let {
              startTime: e = i.timestamp,
              ttl: t = () => null,
              monotonic: n = !1,
              slack: o = 5e3,
            } = arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : {};
            const s = new Map(),
              a = [],
              d = [],
              c = n
                ? (e) => d.push(e)
                : (e) =>
                    d.splice(
                      (0, i.binarySearch)(d, e, (e) => e.expiry),
                      0,
                      e,
                    );
            let l, u;
            function g() {
              if ((u && clearTimeout(u), d.length > 0)) {
                const e = (0, i.timestamp)();
                (l = Math.max(e, d[0].expiry + o)),
                  (u = setTimeout(() => {
                    const e = (0, i.timestamp)();
                    let t = 0;
                    for (const n of d) {
                      if (n.expiry > e) break;
                      a.forEach((e) => {
                        try {
                          e(n.item);
                        } catch (e) {
                          (0, i.logError)(e);
                        }
                      }),
                        s.delete(n.item),
                        t++;
                    }
                    d.splice(0, t), (u = null), g();
                  }, l - e));
              } else u = null;
            }
            function f(n) {
              const i = {},
                s = p;
              let a;
              const [d, f] = Object.entries({ start: e, delta: t }).map((e) => {
                  let t,
                    [d, f] = e;
                  return function () {
                    const e = (t = {});
                    r.k.resolve(f(n)).then((n) => {
                      e === t &&
                        ((i[d] = n),
                        s === p &&
                          null != i.start &&
                          null != i.delta &&
                          ((a = i.start + i.delta),
                          c(m),
                          (null == u || l > a + o) && g()));
                    });
                  };
                }),
                m = {
                  item: n,
                  refresh: f,
                  get expiry() {
                    return a;
                  },
                };
              return d(), f(), m;
            }
            let p = {};
            return {
              [Symbol.iterator]: () => s.keys(),
              add(e) {
                !s.has(e) && s.set(e, f(e));
              },
              clear() {
                (d.length = 0), g(), s.clear(), (p = {});
              },
              toArray: () => Array.from(s.keys()),
              refresh() {
                (d.length = 0), g();
                for (const e of s.values()) e.refresh();
              },
              onExpiry: (e) => (
                a.push(e),
                () => {
                  const t = a.indexOf(e);
                  t >= 0 && a.splice(t, 1);
                }
              ),
            };
          }
        },
        63895: (e, t, n) => {
          n.d(t, {
            E2: () => g,
            H6: () => d,
            V0: () => l,
            mn: () => c,
            vk: () => u,
          });
          var r = n(70433),
            i = n(91069),
            o = n(43272),
            s = n(16833),
            a = n(67314);
          const d = 'outstream',
            c = 'instream';
          function l(e) {
            const t = e?.mediaTypes?.video;
            null != t &&
              null == t.plcmt &&
              (t.context === d || [2, 3, 4].includes(t.placement)
                ? (t.plcmt = 4)
                : t.context !== d &&
                  [2, 6].includes(t.playbackmethod) &&
                  (t.plcmt = 2));
          }
          function u(e) {
            let { index: t = a.n.index } =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {};
            const n = (0, r.A)(t.getMediaTypes(e), 'video'),
              i = n && (0, r.A)(n, 'context'),
              o = n && (0, r.A)(n, 'useCacheKey'),
              s = t.getAdUnit(e);
            return g(e, s, n, i, o);
          }
          const g = (0, s.A_)(
            'sync',
            function (e, t, n, r, s) {
              return n && (s || r !== d)
                ? o.$W.getConfig('cache.url') || !e.vastXml || e.vastUrl
                  ? !(!e.vastUrl && !e.vastXml)
                  : ((0, i.logError)(
                      '\n        This bid contains only vastXml and will not work when a prebid cache url is not specified.\n        Try enabling prebid cache with pbjs.setConfig({ cache: {url: "..."} });\n      ',
                    ),
                    !1)
                : !(r === d && !s) ||
                    !!(e.renderer || (t && t.renderer) || n.renderer);
            },
            'checkVideoBidSetup',
          );
        },
        68693: (e, t, n) => {
          n.d(t, { M: () => c, t: () => d });
          var r = n(68044),
            i = n(43272),
            o = n(67314);
          const s = 15;
          function a(e) {
            let { index: t = o.n.index } =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {};
            const n = e.vastXml
              ? e.vastXml
              : ((r = e.vastUrl),
                (a = e.vastImpUrl),
                `<VAST version="3.0">\n    <Ad>\n      <Wrapper>\n        <AdSystem>prebid.org wrapper</AdSystem>\n        <VASTAdTagURI><![CDATA[${r}]]></VASTAdTagURI>\n        ${
                  (a = a && (Array.isArray(a) ? a : [a]))
                    ? a
                        .map((e) => `<Impression><![CDATA[${e}]]></Impression>`)
                        .join('')
                    : ''
                }\n        <Creatives></Creatives>\n      </Wrapper>\n    </Ad>\n  </VAST>`);
            var r, a;
            const d = t.getAuction(e);
            let c = { type: 'xml', value: n, ttlseconds: Number(e.ttl) + s };
            return (
              i.$W.getConfig('cache.vasttrack') &&
                ((c.bidder = e.bidder),
                (c.bidid = e.requestId),
                (c.aid = e.auctionId)),
              null != d && (c.timestamp = d.getAuctionStart()),
              'string' == typeof e.customCacheKey &&
                '' !== e.customCacheKey &&
                (c.key = e.customCacheKey),
              c
            );
          }
          function d(e, t) {
            let n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : r.g4;
            const o = { puts: e.map(a) };
            n(i.$W.getConfig('cache.timeout'))(
              i.$W.getConfig('cache.url'),
              (function (e) {
                return {
                  success: function (t) {
                    let n;
                    try {
                      n = JSON.parse(t).responses;
                    } catch (t) {
                      return void e(t, []);
                    }
                    n
                      ? e(null, n)
                      : e(
                          new Error(
                            "The cache server didn't respond with a responses property.",
                          ),
                          [],
                        );
                  },
                  error: function (t, n) {
                    e(
                      new Error(
                        `Error storing video ad in the cache: ${t}: ${JSON.stringify(
                          n,
                        )}`,
                      ),
                      [],
                    );
                  },
                };
              })(t),
              JSON.stringify(o),
              { contentType: 'text/plain', withCredentials: !0 },
            );
          }
          function c(e) {
            return `${i.$W.getConfig('cache.url')}?uuid=${e}`;
          }
        },
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [51085],
      {
        34595: (s, d, e) => {
          e.d(d, { G: () => n });
          const n =
            '(()=>{"use strict";window.render=function({ad:d,adUrl:e,width:i,height:r},{mkFrame:n},o){if(!d&&!e)throw{reason:"noAd",message:"Missing ad markup or URL"};{const s=o.document,t={width:i,height:r};e&&!d?t.src=e:t.srcdoc=d,s.body.appendChild(n(s,t))}}})();';
        },
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [33005],
      {
        51252: (t, n, e) => {
          e.d(n, { mw: () => u, p: () => s });
          var o = e(15901),
            d = e(91069);
          function u(t) {
            return (n) => (0, d.compareCodeAndSlot)(n, t);
          }
          function s(t) {
            const n = (function (t) {
              let n;
              return (
                (0, d.isGptPubadsDefined)() &&
                  (n = (0, o.I6)(window.googletag.pubads().getSlots(), u(t))),
                n
              );
            })(t);
            return n
              ? { gptSlot: n.getAdUnitPath(), divId: n.getSlotElementId() }
              : {};
          }
        },
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [97247],
      {
        28656: (r, e, a) => {
          a.d(e, { D: () => o });
          var n = a(73858),
            t = a(70433);
          const s = ['user.keywords'].concat(
            n.Dy.flatMap((r) =>
              ['keywords', 'content.keywords'].map((e) => `${r}.${e}`),
            ),
          );
          function o(r) {
            for (
              var e = arguments.length, a = new Array(e > 1 ? e - 1 : 0), n = 1;
              n < e;
              n++
            )
              a[n - 1] = arguments[n];
            return (function () {
              const r = new Set();
              for (
                var e = arguments.length, a = new Array(e), n = 0;
                n < e;
                n++
              )
                a[n] = arguments[n];
              return (
                a
                  .filter((r) => r)
                  .flatMap((r) => (Array.isArray(r) ? r : r.split(',')))
                  .map((r) => r.replace(/^\s*/, '').replace(/\s*$/, ''))
                  .filter((r) => r)
                  .forEach((e) => r.add(e)),
                Array.from(r.keys())
              );
            })(...s.map((e) => (0, t.A)(r, e)), ...a);
          }
        },
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [95444],
      {
        554: (e, t, r) => {
          r.d(t, { QF: () => g, T_: () => f, gg: () => u });
          var n = r(91069),
            o = r(70433),
            i = r(28656),
            c = r(73858);
          const s = {
              526: '1plusX',
              527: '1plusX',
              541: 'captify_segments',
              540: 'perid',
            },
            a = ['user.data'].concat(c.Dy.map((e) => `${e}.content.data`));
          function d(e, t, r) {
            return null == t
              ? r
              : (0, n.isStr)(t)
                ? t
                : (0, n.isNumber)(t)
                  ? t.toString()
                  : void (0, n.logWarn)(
                      'Unsuported type for param: ' +
                        e +
                        ' required type: String',
                    );
          }
          function u(e) {
            return (0, n.isStr)(e) && '' !== e ? l(e.split(/\s*(?:,)\s*/)) : {};
          }
          function l(e) {
            const t = {};
            return (
              e.forEach((e) => {
                if (-1 !== e.indexOf('=')) {
                  let r = e.split('='),
                    n = r[0],
                    o = r[1];
                  t.hasOwnProperty(n) ? t[n].push(o) : (t[n] = [o]);
                } else t.hasOwnProperty(e) || (t[e] = []);
              }),
              t
            );
          }
          function f() {
            for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
              t[r] = arguments[r];
            return (function (e) {
              let t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 'keywords';
              const r = [];
              return (
                (0, n._each)(e, (e, o) => {
                  if ((0, n.isArray)(e)) {
                    let r = [];
                    (0, n._each)(e, (e) => {
                      ((e = d(t + '.' + o, e)) || '' === e) && r.push(e);
                    }),
                      (e = r);
                  } else {
                    if (((e = d(t + '.' + o, e)), !(0, n.isStr)(e))) return;
                    e = [e];
                  }
                  e = e.filter((e) => '' !== e);
                  const i = { key: o };
                  e.length > 0 && (i.value = e), r.push(i);
                }),
                r
              );
            })(
              (0, n.mergeDeep)(
                ...t.map((e) =>
                  Object.fromEntries(
                    Object.entries(e || {}).map((e) => {
                      let [t, r] = e;
                      return [
                        t,
                        (0, n.isNumber)(r) || (0, n.isStr)(r) ? [r] : r,
                      ];
                    }),
                  ),
                ),
              ),
            );
          }
          function g(e) {
            for (
              var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1;
              n < t;
              n++
            )
              r[n - 1] = arguments[n];
            return f(
              (function (e) {
                return l((0, i.D)(e));
              })(e),
              (function (e) {
                let t = {};
                return (
                  a.forEach((r) => {
                    ((0, o.A)(e, r) || []).forEach((e) => {
                      const r = s[(0, o.A)(e, 'ext.segtax')];
                      r &&
                        e.segment.forEach((e) => {
                          t[r] ? t[r].push(e.id) : (t[r] = [e.id]);
                        });
                    });
                  }),
                  t
                );
              })(e),
              ...r,
            );
          }
        },
        2349: (e, t, r) => {
          r.d(t, { DX: () => i, GS: () => c, vk: () => o });
          var n = r(91069);
          function o(e) {
            return e
              .replace(/(?:^|\.?)([A-Z])/g, function (e, t) {
                return '_' + t.toLowerCase();
              })
              .replace(/^_/, '');
          }
          const i = [
            { code: 'appnexusAst', gvlid: 32 },
            { code: 'emxdigital', gvlid: 183 },
            { code: 'emetriq', gvlid: 213 },
            { code: 'pagescience', gvlid: 32 },
            { code: 'gourmetads', gvlid: 32 },
            { code: 'matomy', gvlid: 32 },
            { code: 'featureforward', gvlid: 32 },
            { code: 'oftmedia', gvlid: 32 },
            { code: 'adasta', gvlid: 32 },
            { code: 'beintoo', gvlid: 618 },
            { code: 'projectagora', gvlid: 1032 },
            { code: 'uol', gvlid: 32 },
            { code: 'adzymic', gvlid: 723 },
          ];
          function c(e, t) {
            let r = [];
            for (let o = 0; o < t; o++) {
              let t = (0, n.isPlainObject)(e) ? (0, n.deepClone)(e) : e;
              r.push(t);
            }
            return r;
          }
        },
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [44982],
      {
        29906: (e, l, s) => {
          function t(e, l) {
            let s = [];
            for (let t = 0; t < Math.ceil(e.length / l); t++) {
              let h = t * l,
                n = h + l;
              s.push(e.slice(h, n));
            }
            return s;
          }
          s.d(l, { i: () => t });
        },
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [42698],
      {
        24673: (A, B, I) => {
          I.d(B, { n: () => s });
          const s = {
            1: 'IAB20-3',
            2: 'IAB18-5',
            3: 'IAB10-1',
            4: 'IAB2-3',
            5: 'IAB19-8',
            6: 'IAB22-1',
            7: 'IAB18-1',
            8: 'IAB12-3',
            9: 'IAB5-1',
            10: 'IAB4-5',
            11: 'IAB13-4',
            12: 'IAB8-7',
            13: 'IAB9-7',
            14: 'IAB7-1',
            15: 'IAB20-18',
            16: 'IAB10-7',
            17: 'IAB19-18',
            18: 'IAB13-6',
            19: 'IAB18-4',
            20: 'IAB1-5',
            21: 'IAB1-6',
            22: 'IAB3-4',
            23: 'IAB19-13',
            24: 'IAB22-2',
            25: 'IAB3-9',
            26: 'IAB17-18',
            27: 'IAB19-6',
            28: 'IAB1-7',
            29: 'IAB9-30',
            30: 'IAB20-7',
            31: 'IAB20-17',
            32: 'IAB7-32',
            33: 'IAB16-5',
            34: 'IAB19-34',
            35: 'IAB11-5',
            36: 'IAB12-3',
            37: 'IAB11-4',
            38: 'IAB12-3',
            39: 'IAB9-30',
            41: 'IAB7-44',
            42: 'IAB7-1',
            43: 'IAB7-30',
            50: 'IAB19-30',
            51: 'IAB17-12',
            52: 'IAB19-30',
            53: 'IAB3-1',
            55: 'IAB13-2',
            56: 'IAB19-30',
            57: 'IAB19-30',
            58: 'IAB7-39',
            59: 'IAB22-1',
            60: 'IAB7-39',
            61: 'IAB21-3',
            62: 'IAB5-1',
            63: 'IAB12-3',
            64: 'IAB20-18',
            65: 'IAB11-2',
            66: 'IAB17-18',
            67: 'IAB9-9',
            68: 'IAB9-5',
            69: 'IAB7-44',
            71: 'IAB22-3',
            73: 'IAB19-30',
            74: 'IAB8-5',
            78: 'IAB22-1',
            85: 'IAB12-2',
            86: 'IAB22-3',
            87: 'IAB11-3',
            112: 'IAB7-32',
            113: 'IAB7-32',
            114: 'IAB7-32',
            115: 'IAB7-32',
            118: 'IAB9-5',
            119: 'IAB9-5',
            120: 'IAB9-5',
            121: 'IAB9-5',
            122: 'IAB9-5',
            123: 'IAB9-5',
            124: 'IAB9-5',
            125: 'IAB9-5',
            126: 'IAB9-5',
            127: 'IAB22-1',
            132: 'IAB1-2',
            133: 'IAB19-30',
            137: 'IAB3-9',
            138: 'IAB19-3',
            140: 'IAB2-3',
            141: 'IAB2-1',
            142: 'IAB2-3',
            143: 'IAB17-13',
            166: 'IAB11-4',
            175: 'IAB3-1',
            176: 'IAB13-4',
            182: 'IAB8-9',
            183: 'IAB3-5',
          };
        },
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [12126],
      {
        25761: (e, n, r) => {
          r.d(n, { $: () => t });
          var s = r(91069);
          function t(e, n) {
            return (
              Object.keys(e).forEach((r) => {
                var t, u;
                n[r] &&
                  ((0, s.isFn)(e[r])
                    ? (n[r] = e[r](n[r]))
                    : (n[r] =
                        ((t = e[r]),
                        (u = n[r]),
                        'string' === t
                          ? u && u.toString()
                          : 'number' === t
                            ? Number(u)
                            : u)),
                  isNaN(n[r]) && delete n.key);
              }),
              n
            );
          }
        },
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [57109],
      {
        20965: (t, e, n) => {
          n.d(e, { c5: () => o, q4: () => r });
          var a = n(25555);
          const c = 0,
            l = 1,
            r = 2;
          function o(t) {
            let {
                apiName: e,
                apiVersion: n,
                apiArgs: o = ['command', 'callback', 'parameter', 'version'],
                callbackArgs: s = ['returnValue', 'success'],
                mode: i = c,
              } = t,
              u =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : window;
            const f = {},
              d = `${e}Call`,
              p = `${e}Return`;
            function b(t) {
              const e =
                'string' == typeof t.data && t.data.includes(p)
                  ? JSON.parse(t.data)
                  : t.data;
              if (e?.[p]?.callId) {
                const t = e[p];
                f.hasOwnProperty(t.callId) &&
                  f[t.callId](...s.map((e) => t[e]));
              }
            }
            const [k, m] = (function () {
              let t,
                n = u,
                a = !1;
              for (; null != n; ) {
                try {
                  if ('function' == typeof n[e]) {
                    (t = n), (a = !0);
                    break;
                  }
                } catch (t) {}
                try {
                  if (n.frames[`${e}Locator`]) {
                    t = n;
                    break;
                  }
                } catch (t) {}
                if (n === u.top) break;
                n = n.parent;
              }
              return [t, a];
            })();
            if (!k) return;
            function g(t) {
              return (
                (t = Object.assign({ version: n }, t)), o.map((e) => [e, t[e]])
              );
            }
            function h(t, e, n, a) {
              const c = 'function' == typeof t;
              return function (r, o) {
                if ((a && a(), i !== l)) {
                  (null == o || o ? e : n)(c ? void 0 : r);
                }
                c && t.apply(this, arguments);
              };
            }
            let v;
            return (
              m
                ? (v = function () {
                    let t =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {};
                    return new a.k((n, a) => {
                      const o = k[e](
                        ...g({
                          ...t,
                          callback:
                            t.callback || i === r
                              ? h(t.callback, n, a)
                              : void 0,
                        }).map((t) => {
                          let [e, n] = t;
                          return n;
                        }),
                      );
                      (i === l || (null == t.callback && i === c)) && n(o);
                    });
                  })
                : (u.addEventListener('message', b, !1),
                  (v = function (t) {
                    let e =
                      arguments.length > 1 &&
                      void 0 !== arguments[1] &&
                      arguments[1];
                    return new a.k((n, a) => {
                      const c = Math.random().toString(),
                        r = {
                          [d]: {
                            ...Object.fromEntries(
                              g(t).filter((t) => {
                                let [e] = t;
                                return 'callback' !== e;
                              }),
                            ),
                            callId: c,
                          },
                        };
                      (f[c] = h(
                        t?.callback,
                        n,
                        a,
                        (e || null == t?.callback) &&
                          (() => {
                            delete f[c];
                          }),
                      )),
                        k.postMessage(r, '*'),
                        i === l && n();
                    });
                  })),
              Object.assign(v, {
                isDirect: m,
                close() {
                  !m && u.removeEventListener('message', b);
                },
              })
            );
          }
        },
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [58498],
      {
        89766: (e, t, r) => {
          r.d(t, { T: () => f, A: () => l });
          const i = new WeakMap();
          var n = r(91069),
            o = r(70433),
            s = r(71371);
          const a = new Set([
            'pos',
            'placement',
            'plcmt',
            'api',
            'mimes',
            'protocols',
            'playbackmethod',
            'minduration',
            'maxduration',
            'w',
            'h',
            'startdelay',
            'placement',
            'linearity',
            'skip',
            'skipmin',
            'skipafter',
            'minbitrate',
            'maxbitrate',
            'delivery',
            'playbackend',
          ]);
          var d = r(75561);
          var p = r(1e3),
            c = r(73858);
          const u = {
            [p.S3]: {
              fpd: {
                priority: 99,
                fn(e, t) {
                  (0, n.mergeDeep)(e, t.ortb2);
                },
              },
              onlyOneClient: { priority: -99, fn: (0, c.i8)('ORTB request') },
              props: {
                fn(e, t) {
                  Object.assign(e, {
                    id: e.id || (0, n.generateUUID)(),
                    test: e.test || 0,
                  });
                  const r = parseInt(t.timeout, 10);
                  isNaN(r) || (e.tmax = r);
                },
              },
            },
            [p.Tb]: {
              fpd: {
                priority: 99,
                fn(e, t) {
                  (0, n.mergeDeep)(e, t.ortb2Imp);
                },
              },
              id: {
                fn(e, t) {
                  e.id = t.bidId;
                },
              },
              banner: {
                fn: function (e, t, r) {
                  if (r.mediaType && r.mediaType !== s.D4) return;
                  const i = (0, o.A)(t, 'mediaTypes.banner');
                  if (i) {
                    const t = { topframe: !0 === (0, n.inIframe)() ? 0 : 1 };
                    i.sizes &&
                      (t.format = (0, n.sizesToSizeTuples)(i.sizes).map(
                        n.sizeTupleToRtbSize,
                      )),
                      i.hasOwnProperty('pos') && (t.pos = i.pos),
                      (e.banner = (0, n.mergeDeep)(t, e.banner));
                  }
                },
              },
              pbadslot: {
                fn(e) {
                  const t = e.ext?.data?.pbadslot;
                  (t && 'string' == typeof t) || delete e.ext?.data?.pbadslot;
                },
              },
            },
            [p.WR]: {
              mediaType: { priority: 99, fn: d.K },
              banner: {
                fn: (function () {
                  let {
                    createPixel: e = (e) =>
                      (0, n.createTrackPixelHtml)(
                        decodeURIComponent(e),
                        n.encodeMacroURI,
                      ),
                  } =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : {};
                  return function (t, r) {
                    t.mediaType === s.D4 &&
                      (r.adm && r.nurl
                        ? ((t.ad = r.adm), (t.ad += e(r.nurl)))
                        : r.adm
                          ? (t.ad = r.adm)
                          : r.nurl && (t.adUrl = r.nurl));
                  };
                })(),
              },
              props: {
                fn(e, t, r) {
                  Object.entries({
                    requestId: r.bidRequest?.bidId,
                    seatBidId: t.id,
                    cpm: t.price,
                    currency: r.ortbResponse.cur || r.currency,
                    width: t.w,
                    height: t.h,
                    dealId: t.dealid,
                    creative_id: t.crid,
                    creativeId: t.crid,
                    burl: t.burl,
                    ttl: t.exp || r.ttl,
                    netRevenue: r.netRevenue,
                  })
                    .filter((e) => {
                      let [t, r] = e;
                      return void 0 !== r;
                    })
                    .forEach((t) => {
                      let [r, i] = t;
                      return (e[r] = i);
                    }),
                    e.meta || (e.meta = {}),
                    t.adomain && (e.meta.advertiserDomains = t.adomain),
                    t.ext?.dsa && (e.meta.dsa = t.ext.dsa);
                },
              },
            },
          };
          (u[p.Tb].native = {
            fn: function (e, t, r) {
              if (r.mediaType && r.mediaType !== s.s6) return;
              let i = t.nativeOrtbRequest;
              i &&
                ((i = Object.assign({}, r.nativeRequest, i)),
                i.assets?.length
                  ? (e.native = (0, n.mergeDeep)(
                      {},
                      { request: JSON.stringify(i), ver: i.ver },
                      e.native,
                    ))
                  : (0, n.logWarn)(
                      'mediaTypes.native is set, but no assets were specified. Native request skipped.',
                      t,
                    ));
            },
          }),
            (u[p.WR].native = {
              fn: function (e, t) {
                if (e.mediaType === s.s6) {
                  let r;
                  if (
                    ((r = 'string' == typeof t.adm ? JSON.parse(t.adm) : t.adm),
                    !(0, n.isPlainObject)(r) || !Array.isArray(r.assets))
                  )
                    throw new Error('ORTB native response contained no assets');
                  e.native = { ortb: r };
                }
              },
            }),
            (u[p.Tb].video = {
              fn: function (e, t, r) {
                if (r.mediaType && r.mediaType !== s.G_) return;
                const i = (0, o.A)(t, 'mediaTypes.video');
                if (!(0, n.isEmpty)(i)) {
                  const t = Object.fromEntries(
                    Object.entries(i).filter((e) => {
                      let [t] = e;
                      return a.has(t);
                    }),
                  );
                  if (i.playerSize) {
                    const e = (0, n.sizesToSizeTuples)(i.playerSize).map(
                      n.sizeTupleToRtbSize,
                    );
                    e.length > 1 &&
                      (0, n.logWarn)(
                        'video request specifies more than one playerSize; all but the first will be ignored',
                      ),
                      Object.assign(t, e[0]);
                  }
                  e.video = (0, n.mergeDeep)(t, e.video);
                }
              },
            }),
            (u[p.WR].video = {
              fn: function (e, t, r) {
                e.mediaType === s.G_ &&
                  ((0, o.A)(r.imp, 'video.w') &&
                    (0, o.A)(r.imp, 'video.h') &&
                    ([e.playerWidth, e.playerHeight] = [
                      r.imp.video.w,
                      r.imp.video.h,
                    ]),
                  t.adm && (e.vastXml = t.adm),
                  t.nurl && (e.vastUrl = t.nurl));
              },
            });
          var m = r(99466);
          function l() {
            let {
              context: e = {},
              processors: t = f,
              overrides: r = {},
              imp: o,
              request: s,
              bidResponse: a,
              response: d,
            } = arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : {};
            const c = new WeakMap();
            function u(e, n, o, s) {
              let a;
              return function () {
                return (
                  null == a &&
                    (a = (function () {
                      let a = o.bind(
                        this,
                        (function (e) {
                          let t =
                            arguments.length > 1 && void 0 !== arguments[1]
                              ? arguments[1]
                              : {};
                          if (!i.has(e)) {
                            const t = Object.entries(e);
                            t.sort((e, t) =>
                              (e = e[1].priority || 0) ===
                              (t = t[1].priority || 0)
                                ? 0
                                : e > t
                                  ? -1
                                  : 1,
                            ),
                              i.set(
                                e,
                                t.map((e) => {
                                  let [t, r] = e;
                                  return [t, r.fn];
                                }),
                              );
                          }
                          const r = i
                            .get(e)
                            .filter((e) => {
                              let [r] = e;
                              return !t.hasOwnProperty(r) || t[r];
                            })
                            .map(function (e) {
                              let [r, i] = e;
                              return t.hasOwnProperty(r)
                                ? t[r].bind(this, i)
                                : i;
                            });
                          return function () {
                            const e = Array.from(arguments);
                            r.forEach((t) => {
                              t.apply(this, e);
                            });
                          };
                        })(t()[e] || {}, r[e] || {}),
                      );
                      return (
                        n && (a = n.bind(this, a)),
                        function () {
                          try {
                            return a.apply(this, arguments);
                          } catch (e) {
                            s.call(this, e, ...arguments);
                          }
                        }
                      );
                    })()),
                  a.apply(this, arguments)
                );
              };
            }
            const m = u(
                p.Tb,
                o,
                function (e, t, r) {
                  const i = {};
                  return e(i, t, r), i;
                },
                function (e, t, r) {
                  (0, n.logError)(
                    'Error while converting bidRequest to ORTB imp; request skipped.',
                    { error: e, bidRequest: t, context: r },
                  );
                },
              ),
              l = u(
                p.S3,
                s,
                function (e, t, r, i) {
                  const n = { imp: t };
                  return e(n, r, i), n;
                },
                function (e, t, r, i) {
                  throw (
                    ((0, n.logError)('Error while converting to ORTB request', {
                      error: e,
                      imps: t,
                      bidderRequest: r,
                      context: i,
                    }),
                    e)
                  );
                },
              ),
              b = u(
                p.WR,
                a,
                function (e, t, r) {
                  const i = {};
                  return e(i, t, r), i;
                },
                function (e, t, r) {
                  (0, n.logError)(
                    'Error while converting ORTB seatbid.bid to bidResponse; bid skipped.',
                    { error: e, bid: t, context: r },
                  );
                },
              ),
              y = u(
                p.Cf,
                d,
                function (e, t, r, i) {
                  const n = { bids: t };
                  return e(n, r, i), n;
                },
                function (e, t, r, i) {
                  throw (
                    ((0, n.logError)(
                      'Error while converting from ORTB response',
                      {
                        error: e,
                        bidResponses: t,
                        ortbResponse: r,
                        context: i,
                      },
                    ),
                    e)
                  );
                },
              );
            return {
              toORTB(t) {
                let { bidderRequest: r, bidRequests: i, context: o = {} } = t;
                i = i || r.bids;
                const s = {
                  req: Object.assign({ bidRequests: i }, e, o),
                  imp: {},
                };
                s.req.impContext = s.imp;
                const a = i
                    .map((t) => {
                      const i = Object.assign(
                          { bidderRequest: r, reqContext: s.req },
                          e,
                          o,
                        ),
                        a = m(t, i);
                      if (null != a) {
                        if (a.hasOwnProperty('id'))
                          return (
                            Object.assign(i, { bidRequest: t, imp: a }),
                            (s.imp[a.id] = i),
                            a
                          );
                        (0, n.logError)(
                          'Converted ORTB imp does not specify an id, ignoring bid request',
                          t,
                          a,
                        );
                      }
                    })
                    .filter(Boolean),
                  d = l(a, r, s.req);
                return (s.req.bidderRequest = r), null != d && c.set(d, s), d;
              },
              fromORTB(e) {
                let { request: t, response: r } = e;
                const i = c.get(t);
                if (null == i)
                  throw new Error(
                    'ortbRequest passed to `fromORTB` must be the same object returned by `toORTB`',
                  );
                function o(e) {
                  let r =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {};
                  return Object.assign(e, { ortbRequest: t }, r, e);
                }
                const s = Object.fromEntries(
                    (t.imp || []).map((e) => [e.id, e]),
                  ),
                  a = (r.seatbid || [])
                    .flatMap((e) =>
                      (e.bid || []).map((t) => {
                        if (
                          s.hasOwnProperty(t.impid) &&
                          i.imp.hasOwnProperty(t.impid)
                        )
                          return b(
                            t,
                            o(i.imp[t.impid], {
                              imp: s[t.impid],
                              seatbid: e,
                              ortbResponse: r,
                            }),
                          );
                        (0, n.logError)(
                          'ORTB response seatbid[].bid[].impid does not match any imp in request; ignoring bid',
                          t,
                        );
                      }),
                    )
                    .filter(Boolean);
                return y(a, r, o(i.req));
              },
            };
          }
          const f = (0, n.memoize)(() => (0, m.U)(u, (0, p.yB)(p.qN)));
        },
        99466: (e, t, r) => {
          r.d(t, { U: () => n });
          var i = r(1e3);
          function n() {
            for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
              t[r] = arguments[r];
            const o = t.shift(),
              s = t.length > 1 ? n(...t) : t[0];
            return Object.fromEntries(
              i.zt.map((e) => [e, Object.assign({}, o[e], s[e])]),
            );
          }
        },
        75561: (e, t, r) => {
          r.d(t, { K: () => o, X: () => n });
          var i = r(71371);
          const n = { 1: i.D4, 2: i.G_, 4: i.s6 };
          function o(e, t, r) {
            if (e.mediaType) return;
            const i = r.mediaType;
            if (!i && !n.hasOwnProperty(t.mtype))
              throw new Error('Cannot determine mediaType for response');
            e.mediaType = i || n[t.mtype];
          }
        },
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [15889],
      {
        54406: (e, r, t) => {
          t.d(r, { FE: () => i });
          var n = t(70433),
            s = t(63172),
            o = t(91069);
          const u = Object.freeze([
            ...[
              'device.sua',
              'source.schain',
              'regs.gdpr',
              'regs.us_privacy',
              'regs.gpp',
              'regs.gpp_sid',
              'user.consent',
              'user.eids',
            ].map((e) =>
              (function (e) {
                let r =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : (e, r) => `${e}.ext.${r}`;
                const [t, o] = (function (e) {
                  const r = e.split('.');
                  return [r.slice(0, r.length - 1).join('.'), r[r.length - 1]];
                })(e);
                return (
                  (r = r(t, o)),
                  (e) => {
                    const u = (0, n.A)(e, t);
                    if (null != u?.[o])
                      return (0, s.J)(e, r, u[o]), () => delete u[o];
                  }
                );
              })(e),
            ),
            ...['app', 'content', 'site', 'user'].map(function (e) {
              return (r) => {
                const t = r[e]?.kwarray;
                if (null != t) {
                  let n = (r[e].keywords || '').split(',');
                  return (
                    Array.isArray(t) && n.push(...t),
                    (r[e].keywords = n.join(',')),
                    () => delete r[e].kwarray
                  );
                }
              };
            }),
          ]);
          function i() {
            let e =
                !(arguments.length > 0 && void 0 !== arguments[0]) ||
                arguments[0],
              r =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : u;
            return function (t) {
              return (
                r.forEach((r) => {
                  try {
                    const n = r(t);
                    'function' == typeof n && e && n();
                  } catch (e) {
                    (0, o.logError)('Error translating request to ORTB 2.5', e);
                  }
                }),
                t
              );
            };
          }
          i();
        },
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [47650],
      {
        25246: (s, t, p) => {
          p.d(t, { M: () => e, P: () => o });
          const e = {
              env: 'vp',
              gdfp_req: 1,
              output: 'vast',
              unviewed_position_start: 1,
            },
            o = {
              protocol: 'https',
              host: 'securepubads.g.doubleclick.net',
              pathname: '/gampad/ads',
            };
        },
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [40082],
      {
        77274: (n, e, t) => {
          t.d(e, { l: () => v });
          var i = t(95139),
            o = t(76811),
            s = t(16916),
            r = t(91069);
          function a(n) {
            return null != n && 0 !== n;
          }
          function c(n) {
            return (
              ['MspaServiceProviderMode', 'Gpc'].some((e) => 1 === n[e]) ||
              2 === n.PersonalDataConsents ||
              1 === n.KnownChildSensitiveDataConsents[0] ||
              a(n.KnownChildSensitiveDataConsents[1]) ||
              0 === n.MspaCoveredTransaction
            );
          }
          function l(n, e) {
            return [
              'SensitiveDataProcessingOptOutNotice',
              'SensitiveDataLimitUseNotice',
            ].some((t) => n[t] === e);
          }
          function u(n) {
            return (
              c(n) ||
              ['Sale', 'Sharing', 'TargetedAdvertising'].some((e) => {
                const t = n[`${e}OptOut`],
                  i = n[`${e}OptOutNotice`];
                return 1 === t || 2 === i || (2 === t && 0 === i);
              }) ||
              2 === n.SharingNotice ||
              (2 === n.SharingOptOut && 0 === n.SharingNotice)
            );
          }
          const g = (() => {
            const n = [6, 7, 9, 10, 12].map((n) => --n),
              e = Array.from(Array(12).keys()).filter((n) => 7 !== n),
              t = e.filter((e) => !n.includes(e));
            return function (i) {
              return (
                u(i) ||
                l(i, 2) ||
                n.some((n) => a(i.SensitiveDataProcessing[n])) ||
                t.some((n) => 1 === i.SensitiveDataProcessing[n]) ||
                (l(i, 0) && e.some((n) => 2 === i.SensitiveDataProcessing[n]))
              );
            };
          })();
          const f = {
            [o.Ml]: u,
            [o.yl]: u,
            [o.qX]: g,
            [o.hE]: function (n) {
              const e = n.SensitiveDataProcessing[7];
              return 1 === e || c(n) || l(n, 2) || (l(n, 0) && 2 === e);
            },
          };
          function v(n, e) {
            let t =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : (n) => n,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : f,
              a =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : i.qB,
              c =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : () => s.ad.getConsentData();
            const l = [],
              u = `MSPA (GPP '${n}' for section${
                e.length > 1 ? 's' : ''
              } ${e.join(', ')})`;
            return (
              (0, r.logInfo)(`Enabling activity controls for ${u}`),
              Object.entries(o).forEach((i) => {
                let [o, r] = i;
                l.push(
                  a(
                    o,
                    u,
                    (function (n, e, t) {
                      let i =
                        arguments.length > 3 && void 0 !== arguments[3]
                          ? arguments[3]
                          : () => s.ad.getConsentData()?.applicableSections;
                      return function () {
                        if (i().some((e) => n.includes(e))) {
                          const n = e();
                          if (null == n)
                            return {
                              allow: !1,
                              reason: 'consent data not available',
                            };
                          if (t(n)) return { allow: !1 };
                        }
                      };
                    })(
                      e,
                      () => {
                        return t(
                          ((e = c()?.parsedSections?.[n]),
                          null == e
                            ? e
                            : e.reduceRight((n, e) => Object.assign(e, n), {})),
                        );
                        var e;
                      },
                      r,
                      () => c()?.applicableSections || [],
                    ),
                  ),
                );
              }),
              () => l.forEach((n) => n())
            );
          }
        },
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [41225],
      {
        76743: (n, t, e) => {
          e.d(t, { hZ: () => u, x4: () => h });
          var l = e(7873),
            r = e(12713);
          function u(n, t, e) {
            let r =
              !(arguments.length > 3 && void 0 !== arguments[3]) ||
              arguments[3];
            if (t === e) return n;
            let u = n;
            try {
              u = (0, l.m)().convertCurrency(n, t, e);
            } catch (n) {
              if (!r) throw n;
            }
            return u;
          }
          function h() {
            let n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : (n) => [n.cpm, n.currency],
              t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : (function () {
                      let n =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : null,
                        t =
                          !(arguments.length > 1 && void 0 !== arguments[1]) ||
                          arguments[1],
                        e =
                          arguments.length > 2 && void 0 !== arguments[2]
                            ? arguments[2]
                            : u;
                      return function (l, r) {
                        return null == n && (n = r), e(l, r, n, t);
                      };
                    })();
            return (0, r.NV)((e) => t.apply(null, n(e)));
          }
        },
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [47606],
      {
        27194: (n, t, e) => {
          e.d(t, { $: () => u });
          var s = e(67314);
          const u = () =>
            (function (n) {
              const t = new WeakMap();
              return function (e) {
                let s =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : {};
                const u = n(e);
                if (null != u) return t.has(u) || t.set(u, s), t.get(u);
              };
            })((n) => s.n.index.getAuction({ auctionId: n }));
        },
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [2630],
      {
        88910: (e, t, n) => {
          n.d(t, { Ay: () => d });
          var l = n(78969),
            s = n(68044),
            a = n(91069),
            i = n(75023);
          const r = { ajax: s.RD },
            o = 'endpoint',
            c = 'bundle',
            p = Object.values(l.qY).filter((e) => e !== l.qY.AUCTION_DEBUG);
          let u = 100;
          function d(e) {
            let { url: t, analyticsType: n, global: s, handler: d } = e;
            const f = [];
            let g,
              y,
              b = !1,
              h = !0;
            const v = (() => {
              let e,
                t = !1;
              const n = () => {
                if (!t) {
                  t = !0;
                  try {
                    let e = 0,
                      t = 0;
                    for (; f.length > 0; ) {
                      e++;
                      const n = f.length;
                      if ((f.shift()(), f.length >= n ? t++ : (t = 0), t >= 10))
                        return (
                          (0, a.logError)(
                            'Detected probable infinite loop, discarding events',
                            f,
                          ),
                          void (f.length = 0)
                        );
                    }
                    (0, a.logMessage)(`${y} analytics: processed ${e} events`);
                  } finally {
                    t = !1;
                  }
                }
              };
              return function () {
                null != e && (clearTimeout(e), (e = null)),
                  0 === u ? n() : (e = setTimeout(n, u));
              };
            })();
            return Object.defineProperties(
              {
                track: function (e) {
                  let { eventType: n, args: l } = e;
                  this.getAdapterType() === c && window[s](d, n, l);
                  this.getAdapterType() === o &&
                    (function (e) {
                      let { eventType: n, args: l, callback: s } = e;
                      r.ajax(t, s, JSON.stringify({ eventType: n, args: l }));
                    })(...arguments);
                },
                enqueue: T,
                enableAnalytics: A,
                disableAnalytics: function () {
                  Object.entries(g || {}).forEach((e) => {
                    let [t, n] = e;
                    i.off(t, n);
                  }),
                    (this.enableAnalytics = this._oldEnable
                      ? this._oldEnable
                      : A),
                    (b = !1);
                },
                getAdapterType: () => n,
                getGlobal: () => s,
                getHandler: () => d,
                getUrl: () => t,
              },
              { enabled: { get: () => b } },
            );
            function T(e) {
              let { eventType: t, args: n } = e;
              f.push(() => {
                this.track({ eventType: t, args: n });
              }),
                v();
            }
            function A(e) {
              y = e?.provider;
              var t = this;
              if (
                ((h =
                  'object' != typeof e ||
                  'object' != typeof e.options ||
                  void 0 === e.options.sampling ||
                  Math.random() < parseFloat(e.options.sampling)),
                h)
              ) {
                const n = (() => {
                  const { includeEvents: t = p, excludeEvents: n = [] } =
                    e || {};
                  return new Set(
                    Object.values(l.qY)
                      .filter((e) => t.includes(e))
                      .filter((e) => !n.includes(e)),
                  );
                })();
                i.getEvents().forEach((e) => {
                  if (!e || !n.has(e.eventType)) return;
                  const { eventType: l, args: s } = e;
                  T.call(t, { eventType: l, args: s });
                }),
                  (g = Object.fromEntries(
                    Array.from(n).map((e) => {
                      const t = (t) => this.enqueue({ eventType: e, args: t });
                      return i.on(e, t), [e, t];
                    }),
                  ));
              } else
                (0, a.logMessage)(
                  `Analytics adapter for "${s}" disabled by sampling`,
                );
              (this._oldEnable = this.enableAnalytics),
                (this.enableAnalytics = function () {
                  return (0, a.logMessage)(
                    `Analytics adapter for "${s}" already enabled, unnecessary call to \`enableAnalytics\`.`,
                  );
                }),
                (b = !0);
            }
          }
        },
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [45881],
      {
        96318: (e, n, t) => {
          t.d(n, { Qo: () => a });
          var r = t(95139),
            o = t(76811),
            l = t(3066),
            c = t(91069),
            i = t(70433),
            u = t(63172);
          function s(e) {
            return Object.assign(
              {
                wp: !0,
                run(e, n, t, r, o) {
                  const s = t && t.hasOwnProperty(r),
                    f = s ? t[r] : void 0,
                    a =
                      s && null != f && 'object' == typeof f
                        ? (0, c.deepClone)(f)
                        : f;
                  return function () {
                    const t = null == n ? e : (0, i.A)(e, n),
                      d = t && (0, l.$V)(t[r]),
                      h = d ? t[r] : void 0;
                    !s && d && o()
                      ? delete t[r]
                      : (s === d && h === f && (0, c.deepEqual)(h, a)) ||
                        !o() ||
                        (0, u.J)(
                          e,
                          (null == n ? [] : [n]).concat(r).join('.'),
                          a,
                        );
                  };
                },
              },
              e,
            );
          }
          const f = (function () {
            let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : r.io;
            return (function (e) {
              const n = {},
                t = [];
              e.forEach((e) => {
                e.wp && t.push(e),
                  e.get &&
                    e.paths.forEach((t) => {
                      let r = n;
                      t.split('.').forEach((e) => {
                        (r.children = r.children || {}),
                          (r.children[e] = r.children[e] || {}),
                          (r = r.children[e]);
                      }),
                        (r.rule = e);
                    });
              });
              const r = (0, l.nl)(t);
              function o(e, n, t) {
                return new Proxy(e, {
                  get(e, r, c) {
                    const i = Reflect.get(e, r, c);
                    if (n.hasOwnProperty(r)) {
                      const { children: e, rule: c } = n[r];
                      if (e && null != i && 'object' == typeof i)
                        return o(i, e, t);
                      if (c && (0, l.$V)(i) && t(c)) return c.get(i);
                    }
                    return i;
                  },
                });
              }
              return function (e) {
                const t = {};
                for (
                  var c = arguments.length,
                    i = new Array(c > 1 ? c - 1 : 0),
                    u = 1;
                  u < c;
                  u++
                )
                  i[u - 1] = arguments[u];
                return {
                  obj: o(e, n.children || {}, (0, l.uD)(t, ...i)),
                  verify:
                    ((s = r(t, e, ...i)),
                    function () {
                      s.forEach((e) => e());
                    }),
                };
                var s;
              };
            })(
              (0, l.ZP)(e).concat(
                (function () {
                  let e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : r.io;
                  return [
                    { name: o.yl, paths: l.Vx, applies: (0, l.p4)(o.yl, e) },
                    { name: o.qX, paths: l.l7, applies: (0, l.p4)(o.qX, e) },
                  ].map(s);
                })(e),
              ),
            );
          })();
          const a = (function () {
            let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : f;
            return function (n, t) {
              (n.global = n.global || {}), (n.bidder = n.bidder || {});
              const r = new Set(Object.keys(n.bidder)),
                o = [];
              function l(n) {
                const r = e(n, t);
                return o.push(r.verify), r.obj;
              }
              const i = {
                global: l(n.global),
                bidder: Object.fromEntries(
                  Object.entries(n.bidder).map((e) => {
                    let [n, t] = e;
                    return [n, l(t)];
                  }),
                ),
              };
              return {
                obj: i,
                verify() {
                  Object.entries(i.bidder)
                    .filter((e) => {
                      let [n] = e;
                      return !r.has(n);
                    })
                    .forEach((r) => {
                      let [o, l] = r;
                      const i = {},
                        u = e(i, t);
                      (0, c.mergeDeep)(u.obj, l), u.verify(), (n.bidder[o] = i);
                    }),
                    o.forEach((e) => e());
                },
              };
            };
          })();
        },
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [47618],
      {
        34610: (e, i, t) => {
          t.d(i, { m: () => m });
          var d = t(99466),
            r = t(1e3),
            n = t(70433),
            s = t(91069),
            a = t(25825),
            b = t(11445),
            o = t(43272),
            p = t(63172);
          var c = t(43323);
          var f = t(7873);
          var g = t(71371);
          const l = {
            [r.S3]: {
              extPrebid: {
                fn: function (e, i) {
                  (0, p.J)(
                    e,
                    'ext.prebid',
                    (0, s.mergeDeep)(
                      {
                        auctiontimestamp: i.auctionStart,
                        targeting: {
                          includewinners: !0,
                          includebidderkeys: !1,
                        },
                      },
                      e.ext?.prebid,
                    ),
                  ),
                    o.$W.getConfig('debug') && (e.ext.prebid.debug = !0);
                },
              },
              extPrebidChannel: {
                fn: function (e) {
                  (0, p.J)(
                    e,
                    'ext.prebid.channel',
                    Object.assign(
                      { name: 'pbjs', version: (0, f.m)().version },
                      e.ext?.prebid?.channel,
                    ),
                  );
                },
              },
              extPrebidAliases: {
                fn: function (e, i, t) {
                  let { am: d = b.Ay } =
                    arguments.length > 3 && void 0 !== arguments[3]
                      ? arguments[3]
                      : {};
                  if (d.aliasRegistry[i.bidderCode]) {
                    const t = d.bidderRegistry[i.bidderCode];
                    if (!t || !t.getSpec().skipPbsAliasing) {
                      (0, p.J)(
                        e,
                        `ext.prebid.aliases.${i.bidderCode}`,
                        d.aliasRegistry[i.bidderCode],
                      );
                      const r =
                        o.$W.getConfig(`gvlMapping.${i.bidderCode}`) ||
                        t?.getSpec?.().gvlid;
                      r &&
                        (0, p.J)(
                          e,
                          `ext.prebid.aliasgvlids.${i.bidderCode}`,
                          r,
                        );
                    }
                  }
                },
              },
            },
            [r.Tb]: {
              params: { fn: c.W },
              adUnitCode: {
                fn: function (e, i) {
                  const t = i.adUnitCode;
                  t && (0, p.J)(e, 'ext.prebid.adunitcode', t);
                },
              },
            },
            [r.WR]: {
              mediaType: { fn: a.o, priority: 99 },
              videoCache: {
                fn: function (e, i) {
                  if (e.mediaType === g.G_) {
                    let { cacheId: t, url: d } =
                      (0, n.A)(i, 'ext.prebid.cache.vastXml') || {};
                    if (!t || !d) {
                      const {
                        hb_uuid: e,
                        hb_cache_host: r,
                        hb_cache_path: s,
                      } = (0, n.A)(i, 'ext.prebid.targeting') || {};
                      e &&
                        r &&
                        s &&
                        ((t = e), (d = `https://${r}${s}?uuid=${e}`));
                    }
                    t &&
                      d &&
                      Object.assign(e, { videoCacheKey: t, vastUrl: d });
                  }
                },
                priority: -10,
              },
              bidderCode: {
                fn(e, i, t) {
                  (e.bidderCode = t.seatbid.seat),
                    (e.adapterCode =
                      (0, n.A)(i, 'ext.prebid.meta.adaptercode') ||
                      t.bidRequest?.bidder ||
                      e.bidderCode);
                },
              },
              pbsBidId: {
                fn(e, i) {
                  const t = (0, n.A)(i, 'ext.prebid.bidid');
                  (0, s.isStr)(t) && (e.pbsBidId = t);
                },
              },
              adserverTargeting: {
                fn(e, i) {
                  const t = (0, n.A)(i, 'ext.prebid.targeting');
                  (0, s.isPlainObject)(t) && (e.adserverTargeting = t);
                },
              },
              extPrebidMeta: {
                fn(e, i) {
                  e.meta = (0, s.mergeDeep)(
                    {},
                    (0, n.A)(i, 'ext.prebid.meta'),
                    e.meta,
                  );
                },
              },
              pbsWurl: {
                fn(e, i) {
                  const t = (0, n.A)(i, 'ext.prebid.events.win');
                  (0, s.isStr)(t) && (e.pbsWurl = t);
                },
              },
            },
            [r.Cf]: {
              serverSideStats: {
                fn(e, i, t) {
                  Object.entries({
                    errors: 'serverErrors',
                    responsetimemillis: 'serverResponseTimeMs',
                  }).forEach((e) => {
                    let [d, r] = e;
                    const s = (0, n.A)(
                      i,
                      `ext.${d}.${t.bidderRequest.bidderCode}`,
                    );
                    s &&
                      ((t.bidderRequest[r] = s),
                      t.bidRequests.forEach((e) => (e[r] = s)));
                  });
                },
              },
            },
          };
          var u = t(89766);
          const m = (0, s.memoize)(() =>
            (0, d.U)((0, u.T)(), l, (0, r.yB)(r.e4)),
          );
        },
        25825: (e, i, t) => {
          t.d(i, { o: () => s, s: () => n });
          var d = t(71371),
            r = t(75561);
          const n = { [d.D4]: 'banner', [d.s6]: 'native', [d.G_]: 'video' };
          function s(e, i, t) {
            let s = t.mediaType;
            s ||
              ((s = r.X.hasOwnProperty(i.mtype)
                ? r.X[i.mtype]
                : i.ext?.prebid?.type),
              n.hasOwnProperty(s) || (s = d.D4)),
              (e.mediaType = s);
          }
        },
        43323: (e, i, t) => {
          t.d(i, { W: () => r });
          var d = t(63172);
          function r(e, i) {
            let t = i.params;
            t && (0, d.J)(e, `ext.prebid.bidder.${i.bidder}`, t);
          }
        },
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [12764],
      {
        2339: (o, n, e) => {
          function t(o, n) {
            return function () {
              const e = document.domain.split('.'),
                t = `_gd${Date.now()}_${n}`;
              for (let n, i, s = 0; s < e.length; s++) {
                const u = e.slice(s).join('.');
                if (
                  (o.setCookie(t, '1', void 0, void 0, u),
                  (i = o.getCookie(t)),
                  o.setCookie(
                    t,
                    '',
                    'Thu, 01 Jan 1970 00:00:01 GMT',
                    void 0,
                    u,
                  ),
                  '1' !== i)
                )
                  return n;
                n = u;
              }
            };
          }
          e.d(n, { w: () => t });
        },
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [97966],
      {
        93800: (e, a, r) => {
          var t = r(7873),
            i = r(71371),
            s = r(91069),
            n = r(70433),
            d = r(27934),
            o = r(63895),
            p = r(95789),
            m = r(43272),
            l = r(12449),
            c = r(15901),
            g = r(51252),
            u = r(57377),
            y = r(38230);
          const f = 'Adagio:',
            A = [i.D4, i.s6, i.G_],
            v = 'adagio',
            b = `https://${v}.bbvms.com/r/$RENDERER.js`,
            I = {
              mimes: (e) =>
                Array.isArray(e) &&
                e.length > 0 &&
                e.every((e) => 'string' == typeof e),
              minduration: (e) => (0, s.isInteger)(e),
              maxduration: (e) => (0, s.isInteger)(e),
              protocols: (e) => (0, s.isArrayOfNums)(e),
              w: (e) => (0, s.isInteger)(e),
              h: (e) => (0, s.isInteger)(e),
              startdelay: (e) => (0, s.isInteger)(e),
              placement: (e) => (
                (0, s.logWarn)(
                  f,
                  'The OpenRTB video param `placement` is deprecated and should not be used anymore.',
                ),
                (0, s.isInteger)(e)
              ),
              plcmt: (e) => (0, s.isInteger)(e),
              linearity: (e) => (0, s.isInteger)(e),
              skip: (e) => [1, 0].includes(e),
              skipmin: (e) => (0, s.isInteger)(e),
              skipafter: (e) => (0, s.isInteger)(e),
              sequence: (e) => (0, s.isInteger)(e),
              battr: (e) => (0, s.isArrayOfNums)(e),
              maxextended: (e) => (0, s.isInteger)(e),
              minbitrate: (e) => (0, s.isInteger)(e),
              maxbitrate: (e) => (0, s.isInteger)(e),
              boxingallowed: (e) => (0, s.isInteger)(e),
              playbackmethod: (e) => (0, s.isArrayOfNums)(e),
              playbackend: (e) => (0, s.isInteger)(e),
              delivery: (e) => (0, s.isArrayOfNums)(e),
              pos: (e) => (0, s.isInteger)(e),
              api: (e) => (0, s.isArrayOfNums)(e),
            },
            h = (function () {
              const e = (0, s.canAccessWindowTop)()
                ? (0, s.getWindowTop)()
                : (0, s.getWindowSelf)();
              return (
                (e.ADAGIO = e.ADAGIO || {}),
                (e.ADAGIO.pageviewId =
                  e.ADAGIO.pageviewId || (0, s.generateUUID)()),
                (e.ADAGIO.adUnits = e.ADAGIO.adUnits || {}),
                (e.ADAGIO.pbjsAdUnits = e.ADAGIO.pbjsAdUnits || []),
                (e.ADAGIO.queue = e.ADAGIO.queue || []),
                (e.ADAGIO.versions = e.ADAGIO.versions || {}),
                (e.ADAGIO.versions.pbjs = '9.0.0'),
                (e.ADAGIO.isSafeFrameWindow = (0, s.isSafeFrameWindow)()),
                e.ADAGIO
              );
            })();
          const w = {
            canAccessWindowTop: s.canAccessWindowTop,
            getAdagioNs: function () {
              return h;
            },
            getDevice: function () {
              const e = navigator.language ? 'language' : 'userLanguage';
              return {
                userAgent: navigator.userAgent,
                language: navigator[e],
                dnt: (0, s.getDNT)() ? 1 : 0,
                geo: {},
                js: 1,
              };
            },
            getSite: function (e) {
              const { refererInfo: a } = e;
              return {
                domain: (0, d.gR)(a.topmostLocation) || '',
                page: a.topmostLocation || '',
                referrer:
                  a.ref || (0, s.getWindowSelf)().document.referrer || '',
                top: a.reachedTop,
              };
            },
            getRefererInfo: d.EN,
            hasRtd: function () {
              return (m.$W.getConfig('realTimeData.dataProviders') || []).find(
                (e) => 'adagio' === e.name,
              );
            },
            isRendererPreferredFromPublisher: function (e) {
              const a = (0, n.A)(e, 'renderer'),
                r = !!(a && a.url && a.render),
                t = (0, n.A)(e, 'mediaTypes.video.renderer'),
                i = !!(t && t.url && t.render);
              return !!(
                (r && !0 !== a.backupOnly) ||
                (i && !0 !== t.backupOnly)
              );
            },
          };
          function T(e) {
            const a = (0, n.A)(e, 'mediaTypes.video', {}),
              r = (0, n.A)(e, 'params.video', {}),
              t = {};
            if (Array.isArray(a.playerSize)) {
              const e = Array.isArray(a.playerSize[0])
                ? a.playerSize[0]
                : a.playerSize;
              (t.w = e[0]), (t.h = e[1]);
            }
            const i = { ...t, ...a, ...r };
            i.context &&
              i.context === o.H6 &&
              (e.mediaTypes.video.playerName = (function (e) {
                return w.isRendererPreferredFromPublisher(e)
                  ? 'other'
                  : 'adagio';
              })(e)),
              Object.keys(I).forEach((a) => {
                i.hasOwnProperty(a) &&
                  (I[a](i[a])
                    ? (e.mediaTypes.video[a] = i[a])
                    : (delete e.mediaTypes.video[a],
                      (0, s.logWarn)(
                        `${f} The OpenRTB video param ${a} has been skipped due to misformating. Please refer to OpenRTB 2.5 spec.`,
                      )));
              });
          }
          function k(e) {
            if (!e.admNative || !Array.isArray(e.admNative.assets))
              return void (0, s.logError)(`${f} Invalid native response`);
            const a = {};
            e.admNative.assets.forEach((e) => {
              if (e.title) a.title = e.title.text;
              else if (e.data)
                !(function (e) {
                  const r = {
                    1: 'sponsoredBy',
                    2: 'body',
                    3: 'rating',
                    4: 'likes',
                    5: 'downloads',
                    6: 'price',
                    7: 'salePrice',
                    8: 'phone',
                    9: 'address',
                    10: 'body2',
                    11: 'displayUrl',
                    12: 'cta',
                  };
                  r.hasOwnProperty(e.type) &&
                    'string' == typeof e.value &&
                    (a[r[e.type]] = e.value);
                })(e.data);
              else if (e.img)
                if (1 === e.img.type)
                  a.icon = { url: e.img.url, width: e.img.w, height: e.img.h };
                else
                  a.image = { url: e.img.url, width: e.img.w, height: e.img.h };
            }),
              e.admNative.link &&
                (e.admNative.link.url && (a.clickUrl = e.admNative.link.url),
                Array.isArray(e.admNative.link.clicktrackers) &&
                  (a.clickTrackers = e.admNative.link.clicktrackers)),
              Array.isArray(e.admNative.eventtrackers)
                ? ((a.impressionTrackers = []),
                  e.admNative.eventtrackers.forEach((e) => {
                    if (1 === e.event)
                      switch (e.method) {
                        case 1:
                          a.impressionTrackers.push(e.url);
                          break;
                        case 2:
                          const r = `<script async src="${e.url}"><\/script>`;
                          a.javascriptTrackers
                            ? (a.javascriptTrackers += `\n${r}`)
                            : (a.javascriptTrackers = r);
                      }
                  }))
                : ((a.impressionTrackers = Array.isArray(
                    e.admNative.imptrackers,
                  )
                    ? e.admNative.imptrackers
                    : []),
                  e.admNative.jstracker &&
                    (a.javascriptTrackers = e.admNative.jstracker)),
              e.admNative.privacy && (a.privacyLink = e.admNative.privacy),
              e.admNative.ext &&
                ((a.ext = {}),
                e.admNative.ext.bvw &&
                  (a.ext.adagio_bvw = e.admNative.ext.bvw)),
              (e.native = a);
          }
          function O(e, a) {
            if (((e.params = e.params || {}), e.params[a])) return;
            const r = m.$W.getConfig('adagio') || {},
              t = e.ortb2,
              i = r[a] || (0, n.A)(t, `site.ext.data.${a}`, null);
            if (i) {
              if (Array.isArray(i))
                return void (i.length && (e.params[a] = i[0].toString()));
              e.params[a] = i.toString();
            }
          }
          function S(e) {
            const a = m.$W.getConfig('adagio') || {};
            (e.params = e.params || {}),
              a.siteId &&
                ((e.params.organizationId = a.siteId.split(':')[0]),
                (e.params.site = a.siteId.split(':')[1])),
              (e.params.placement = (0, n.A)(
                e,
                'ortb2Imp.ext.data.placement',
                e.params.placement,
              )),
              e.params.placement ||
                (!0 !== a.useAdUnitCodeAsPlacement &&
                  !0 !== e.params.useAdUnitCodeAsPlacement) ||
                (e.params.placement = e.adUnitCode),
              (e.params.adUnitElementId = (0, n.A)(
                e,
                'ortb2Imp.ext.data.divId',
                e.params.adUnitElementId,
              )),
              e.params.adUnitElementId ||
                (!0 === a.useAdUnitCodeAsAdUnitElementId ||
                !0 === e.params.useAdUnitCodeAsAdUnitElementId
                  ? (e.params.adUnitElementId = e.adUnitCode)
                  : (e.params.adUnitElementId = (function (e) {
                      const a = (0, g.p)(e);
                      if (a.divId) return a.divId;
                    })(e.adUnitCode))),
              O(e, 'pagetype'),
              O(e, 'category');
          }
          const U = {
              bootstrapPlayer: function (e) {
                const a = e.outstreamRendererCode,
                  r = { code: e.adUnitCode };
                if (
                  (e.vastXml
                    ? (r.vastXml = e.vastXml)
                    : e.vastUrl && (r.vastUrl = e.vastUrl),
                  !e.vastXml && !e.vastUrl)
                )
                  return void (0, s.logError)(
                    `${f} no vastXml or vastUrl on bid`,
                  );
                if (
                  !window.bluebillywig ||
                  !window.bluebillywig.renderers ||
                  !window.bluebillywig.renderers.length
                )
                  return void (0, s.logError)(
                    `${f} no BlueBillywig renderers found!`,
                  );
                const t = this.getRendererId(v, a),
                  i = {};
                e.skipOffset && (i.skipOffset = e.skipOffset.toString());
                const n = window.bluebillywig.renderers.find(
                  (e) => e._id === t,
                );
                if (!n)
                  return void (0, s.logError)(
                    `${f} couldn't find a renderer with ID ${t}`,
                  );
                const d = document.getElementById(e.adUnitCode);
                n.bootstrap(r, d, i);
              },
              newRenderer: function (e, a) {
                const r = b.replace('$RENDERER', a),
                  t = p.A4.install({ url: r, loaded: !1, adUnitCode: e });
                try {
                  t.setRender(this.outstreamRender);
                } catch (e) {
                  (0, s.logError)(`${f} error trying to setRender`, e);
                }
                return t;
              },
              outstreamRender: function (e) {
                e.renderer.push(() => {
                  U.bootstrapPlayer(e);
                });
              },
              getRendererId: function (e, a) {
                return `${e}-${a}`;
              },
            },
            N = {
              code: 'adagio',
              gvlid: 617,
              supportedMediaTypes: A,
              isBidRequestValid: (e) => (
                (e.params = e.params || {}),
                S(e),
                !!(
                  e.params.organizationId &&
                  e.params.site &&
                  e.params.placement
                ) ||
                  ((0, s.logWarn)(
                    `${f} at least one required param is missing.`,
                  ),
                  !1)
              ),
              buildRequests(e, a) {
                e = (0, l.Xj)(e);
                const r = 'https:' === location.protocol ? 1 : 0,
                  t = w.getDevice(),
                  d = w.getSite(a),
                  o = w.getAdagioNs().pageviewId,
                  p =
                    (function (e) {
                      if (!(0, n.A)(e, 'gdprConsent')) return !1;
                      const {
                        apiVersion: a,
                        gdprApplies: r,
                        consentString: t,
                        allowAuctionWithoutConsent: i,
                      } = e.gdprConsent;
                      return (0, s.cleanObj)({
                        apiVersion: a,
                        consentString: t,
                        consentRequired: r ? 1 : 0,
                        allowAuctionWithoutConsent: i ? 1 : 0,
                      });
                    })(a) || {},
                  c =
                    (function (e) {
                      return (
                        !!(0, n.A)(e, 'uspConsent') && {
                          uspConsent: e.uspConsent,
                        }
                      );
                    })(a) || {},
                  g = { required: !0 === m.$W.getConfig('coppa') ? 1 : 0 },
                  u = (function (e) {
                    let a = (0, n.A)(e, 'gppConsent.gppString'),
                      r = (0, n.A)(e, 'gppConsent.applicableSections');
                    return (
                      (a && r) ||
                        ((a = (0, n.A)(e, 'ortb2.regs.gpp', '')),
                        (r = (0, n.A)(e, 'ortb2.regs.gpp_sid', []))),
                      { gpp: a, gppSid: r }
                    );
                  })(a),
                  v = ((b = e[0]), (0, n.A)(b, 'schain'));
                var b;
                const I =
                    (function (e) {
                      if ((0, n.A)(e, 'userIdAsEids')) return e.userIdAsEids;
                    })(e[0]) || [],
                  h =
                    (0, n.A)(m.$W.getConfig('userSync'), 'syncEnabled') &&
                    y.zt.canBidderRegisterSync('iframe', 'adagio'),
                  k = (0, n.A)(a, 'ortb2.regs.ext.dsa'),
                  O = (0, n.A)(a, 'ortb2.site.ext.data.adg_rtd.session', {});
                Object.keys(O).length ||
                  ((0, s.logInfo)(
                    f,
                    'No session data provided. A new session is be generated.',
                  ),
                  (O.new = !0),
                  (O.rnd = Math.random()));
                const S =
                    (0, n.A)(
                      'bidderRequest',
                      'ortb2.site.ext.data.adg_rtd.uid',
                    ) || (0, s.generateUUID)(),
                  U = e.map((e) => {
                    const a = (0, s.deepClone)(e);
                    if (
                      ((a.auctionId = S),
                      a.params.splitKeyword &&
                        ((0, s.isStr)(a.params.splitKeyword) ||
                        (0, s.isNumber)(a.params.splitKeyword)
                          ? (a.params.splitKeyword =
                              a.params.splitKeyword.toString())
                          : (delete a.params.splitKeyword,
                            (0, s.logWarn)(
                              f,
                              'The splitKeyword param have been removed because the type is invalid, accepted type: number or string.',
                            ))),
                      (a.params.organizationId =
                        a.params.organizationId.toString()),
                      a.params.dataLayer)
                    )
                      if (
                        (0, s.isStr)(a.params.dataLayer) ||
                        (0, s.isNumber)(a.params.dataLayer) ||
                        (0, s.isArray)(a.params.dataLayer) ||
                        (0, s.isFn)(a.params.dataLayer)
                      )
                        (0, s.logWarn)(
                          f,
                          'The dataLayer param is invalid, only object is accepted as a type.',
                        ),
                          delete a.params.dataLayer;
                      else {
                        let e = !1;
                        (a.params.dl = a.params.dataLayer),
                          delete a.params.dataLayer,
                          Object.keys(a.params.dl).forEach((r) => {
                            a.params.dl[r] &&
                              ((0, s.isStr)(a.params.dl[r]) ||
                              (0, s.isNumber)(a.params.dl[r])
                                ? (a.params.dl[r] = a.params.dl[r].toString())
                                : ((e = !0), delete a.params.dl[r]));
                          }),
                          e &&
                            (0, s.logWarn)(
                              f,
                              'Some parameters of the dataLayer property have been removed because the type is invalid, accepted type: number or string.',
                            );
                      }
                    const r = (function (e) {
                      if (!(0, s.isFn)(e.getFloor)) return !1;
                      const a = [],
                        r = (r, t) => {
                          const i = e.getFloor({
                            currency: 'USD',
                            mediaType: r,
                            size: t,
                          });
                          a.push(
                            (0, s.cleanObj)({
                              mt: r,
                              s: (0, s.isArray)(t) ? `${t[0]}x${t[1]}` : void 0,
                              f:
                                isNaN(i.floor) || 'USD' !== i.currency
                                  ? void 0
                                  : i.floor,
                            }),
                          );
                        };
                      return (
                        Object.keys(e.mediaTypes).forEach((a) => {
                          if (-1 !== A.indexOf(a)) {
                            const t = a === i.G_ ? 'playerSize' : 'sizes';
                            e.mediaTypes[a][t] && e.mediaTypes[a][t].length
                              ? (0, s.isArray)(e.mediaTypes[a][t][0])
                                ? e.mediaTypes[a][t].forEach((e) => {
                                    r(a, [e[0], e[1]]);
                                  })
                                : r(a, [
                                    e.mediaTypes[a][t][0],
                                    e.mediaTypes[a][t][1],
                                  ])
                              : r(a, '*');
                          }
                        }),
                        a
                      );
                    })(e);
                    if ((0, s.isArray)(r) && r.length) {
                      if (((a.floors = r), (0, n.A)(a, 'mediaTypes.banner'))) {
                        const e = a.mediaTypes.banner,
                          r = function () {
                            let e =
                              arguments.length > 0 && void 0 !== arguments[0]
                                ? arguments[0]
                                : [];
                            const r = { size: e, floor: null },
                              t = a.floors.filter((e) => e.mt === i.D4),
                              s = t.find((a) => a.s === e.join('x'));
                            return (r.floor = t ? (s ? s.f : t[0].f) : null), r;
                          };
                        a.mediaTypes.banner.bannerSizes = (0, s.isArray)(
                          e.sizes[0],
                        )
                          ? e.sizes.map((e) => r(e))
                          : r(e.sizes);
                      }
                      if ((0, n.A)(a, 'mediaTypes.video')) {
                        const e = a.mediaTypes.video,
                          r = a.floors.filter((e) => e.mt === i.G_),
                          t =
                            e.playerSize && (0, s.isArray)(e.playerSize[0])
                              ? e.playerSize[0]
                              : e.playerSize,
                          n = t ? r.find((e) => e.s === t.join('x')) : void 0;
                        a.mediaTypes.video.floor = r
                          ? n
                            ? n.f
                            : r[0].f
                          : null;
                      }
                      if ((0, n.A)(a, 'mediaTypes.native')) {
                        const e = a.floors.filter((e) => e.mt === i.s6);
                        e.length && (a.mediaTypes.native.floor = e[0].f);
                      }
                    }
                    (0, n.A)(a, 'mediaTypes.video') && T(a);
                    const t =
                      (0, n.A)(a, 'ortb2Imp.ext.gpid') ||
                      (0, n.A)(a, 'ortb2Imp.ext.data.pbadslot');
                    t && (a.gpid = t);
                    const d = {
                      ...(0, n.A)(
                        a,
                        'ortb2.site.ext.data.adg_rtd.features',
                        {},
                      ),
                      print_number: (a.bidderRequestsCount || 1).toString(),
                      adunit_position: (0, n.A)(
                        a,
                        'ortb2Imp.ext.data.adg_rtd.adunit_position',
                        null,
                      ),
                    };
                    (a.features = Object.entries(d).reduce((e, a) => {
                      let [r, t] = a;
                      return null == t || (e[r] = t), e;
                    }, {})),
                      delete a.params.siteId;
                    return {
                      adUnitCode: a.adUnitCode,
                      auctionId: a.auctionId,
                      bidder: a.bidder,
                      bidId: a.bidId,
                      params: a.params,
                      features: a.features,
                      gpid: a.gpid,
                      mediaTypes: a.mediaTypes,
                      nativeParams: a.nativeParams,
                      score: a.score,
                      transactionId: a.transactionId,
                    };
                  }),
                  N = U.reduce((e, a) => {
                    const r = a.params.organizationId;
                    return (e[r] = e[r] || []), e[r].push(a), e;
                  }, {});
                e.forEach((e) => {
                  (e.params.adagioAuctionId = S), (e.params.pageviewId = o);
                });
                return Object.keys(N).map((e) => ({
                  method: 'POST',
                  url: 'https://mp.4dex.io/prebid',
                  data: {
                    organizationId: e,
                    hasRtd: w.hasRtd() ? 1 : 0,
                    secure: r,
                    device: t,
                    site: d,
                    pageviewId: o,
                    adUnits: N[e],
                    data: { session: O },
                    regs: {
                      gdpr: p,
                      coppa: g,
                      ccpa: c,
                      gpp: u.gpp,
                      gppSid: u.gppSid,
                      dsa: k,
                    },
                    schain: v,
                    user: { eids: I },
                    prebidVersion: '9.0.0',
                    usIfr: h,
                  },
                  options: { contentType: 'text/plain' },
                }));
              },
              interpretResponse(e, a) {
                let r = [];
                try {
                  const t = e.body;
                  t &&
                    (t.data &&
                      w.hasRtd() &&
                      w.getAdagioNs().queue.push({
                        action: 'ssp-data',
                        ts: Date.now(),
                        data: t.data,
                      }),
                    t.bids &&
                      t.bids.forEach((e) => {
                        const t = (0, c.I6)(
                          a.data.adUnits,
                          (a) => a.bidId === e.requestId,
                        );
                        if (t) {
                          if (
                            ((e.meta = (0, n.A)(e, 'meta', {})),
                            (e.meta.mediaType = e.mediaType),
                            (e.meta.advertiserDomains =
                              Array.isArray(e.aDomain) && e.aDomain.length
                                ? e.aDomain
                                : []),
                            e.mediaType === i.G_)
                          ) {
                            const a = (0, n.A)(t, 'mediaTypes.video.context');
                            if (
                              (!e.vastUrl &&
                                e.vastXml &&
                                (e.vastUrl =
                                  'data:text/xml;charset=utf-8;base64,' +
                                  window.btoa(e.vastXml.replace(/\\"/g, '"'))),
                              a === o.H6)
                            ) {
                              if (
                                ((e.outstreamRendererCode = (0, n.A)(
                                  t,
                                  'params.rendererCode',
                                  'renderer',
                                )),
                                (0, n.A)(t, 'mediaTypes.video.skip'))
                              ) {
                                const a = (0, n.A)(
                                  t,
                                  'mediaTypes.video.skipafter',
                                  5,
                                );
                                e.skipOffset = a;
                              }
                              e.renderer = U.newRenderer(
                                e.adUnitCode,
                                e.outstreamRendererCode,
                              );
                            }
                          }
                          e.mediaType === i.s6 && k(e),
                            (e.site = t.params.site),
                            (e.placement = t.params.placement),
                            (e.pagetype = t.params.pagetype),
                            (e.category = t.params.category);
                        }
                        r.push(e);
                      }));
                } catch (e) {
                  (0, s.logError)(e);
                }
                return r;
              },
              getUserSyncs(e, a) {
                if (!a.length || '' === a[0].body || !a[0].body.userSyncs)
                  return !1;
                return a[0].body.userSyncs.map((e) => ({
                  type: 'p' === e.t ? 'image' : 'iframe',
                  url: e.u,
                }));
              },
            };
          (0, u.a$)(N), (0, t.E)('adagioBidAdapter');
        },
      },
      (e) => {
        e.O(0, [33005, 60802, 51085], () => {
          return (a = 93800), e((e.s = a));
          var a;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [60041],
      {
        63399: (e, t, i) => {
          var n = i(7873),
            a = i(91069),
            d = i(70433),
            o = i(81657),
            r = i(42627),
            u = i(63895),
            c = i(16833),
            l = i(68693),
            s = i(43272),
            g = i(71371),
            f = i(15901),
            h = i(67314),
            p = i(78969);
          const v = 'hb_pb_cat_dur',
            m = 'hb_cache_id';
          let b = 50,
            T = 5,
            C = (function () {
              let e = {};
              function t(t) {
                (e[t] = {}),
                  (e[t].bidStorage = new Set()),
                  (e[t].queueDispatcher = (function (e) {
                    let t,
                      i = 1;
                    return function (n, a, d, o) {
                      const r = this;
                      var u = function () {
                        S.call(r, n, a, d);
                      };
                      clearTimeout(t),
                        o
                          ? (i = 1)
                          : i === T
                            ? ((i = 1), u())
                            : (i++, (t = setTimeout(u, e)));
                    };
                  })(b)),
                  (e[t].initialCacheKey = (0, a.generateUUID)());
              }
              return {
                addBid: function (i) {
                  e[i.auctionId] || t(i.auctionId),
                    e[i.auctionId].bidStorage.add(i);
                },
                removeBid: function (t) {
                  e[t.auctionId].bidStorage.delete(t);
                },
                getBids: function (t) {
                  return e[t.auctionId] && e[t.auctionId].bidStorage.values();
                },
                getQueueDispatcher: function (t) {
                  return e[t.auctionId] && e[t.auctionId].queueDispatcher;
                },
                setupInitialCacheKey: function (t) {
                  e[t.auctionId] ||
                    ((e[t.auctionId] = {}),
                    (e[t.auctionId].initialCacheKey = (0, a.generateUUID)()));
                },
                getInitialCacheKey: function (t) {
                  return e[t.auctionId] && e[t.auctionId].initialCacheKey;
                },
              };
            })();
          function y(e, t) {
            let i = C.getInitialCacheKey(e),
              n = (0, d.A)(e, 'video.durationBucket');
            const a = (function (e) {
              let t;
              if (
                s.$W.getConfig('adpod.prioritizeDeals') &&
                (0, d.A)(e, 'video.dealTier')
              ) {
                const i = s.$W.getConfig(
                  `adpod.dealTier.${e.bidderCode}.prefix`,
                );
                t = i
                  ? i + (0, d.A)(e, 'video.dealTier')
                  : (0, d.A)(e, 'video.dealTier');
              } else {
                const i = (0, o.mO)(e);
                t = (0, o.ZV)(i)(e);
              }
              return t;
            })(e);
            let r;
            if (t) {
              r = `${a}_${(0, d.A)(e, 'meta.adServerCatId')}_${n}s`;
            } else r = `${a}_${n}s`;
            e.adserverTargeting || (e.adserverTargeting = {}),
              (e.adserverTargeting[v] = r),
              (e.adserverTargeting[m] = i),
              (e.videoCacheKey = i),
              (e.customCacheKey = `${r}_${i}`);
          }
          function S(e, t, i) {
            !(function (e) {
              for (let t = 0; t < e.length; t++) C.removeBid(e[t]);
            })(t),
              (0, l.t)(t, function (n, d) {
                if (n)
                  (0, a.logWarn)(
                    `Failed to save to the video cache: ${n}. Video bid(s) must be discarded.`,
                  );
                else
                  for (let n = 0; n < d.length; n++)
                    '' !== d[n].uuid
                      ? (0, o.v8)(e, t[n])
                      : (0, a.logInfo)(
                          `Detected a bid was not cached because the custom key was already registered.  Attempted to use key: ${t[n].customCacheKey}. Bid was: `,
                          t[n],
                        ),
                      i();
              });
          }
          function A(e, t, i, n, r) {
            if (r && r.context === g.LM) {
              let e = s.$W.getConfig('adpod.brandCategoryExclusion');
              !(0, d.A)(i, 'meta.adServerCatId') && e
                ? ((0, a.logWarn)(
                    'Detected a bid without meta.adServerCatId while setConfig({adpod.brandCategoryExclusion}) was enabled.  This bid has been rejected:',
                    i,
                  ),
                  n())
                : !1 === s.$W.getConfig('adpod.deferCaching')
                  ? (C.addBid(i),
                    y(i, e),
                    (function (e, t, i) {
                      let n = C.getBids(t);
                      if (n) {
                        let a = (0, f.A6)(n),
                          d = C.getQueueDispatcher(t),
                          r = !(e.getAuctionStatus() === o.AA);
                        d(e, a, i, r);
                      } else
                        (0, a.logWarn)(
                          'Attempted to cache a bid from an unknown auction. Bid:',
                          t,
                        );
                    })(t, i, n))
                  : (C.setupInitialCacheKey(i), y(i, e), (0, o.v8)(t, i), n());
            } else e.call(this, t, i, n, r);
          }
          function I(e, t) {
            let i = t.filter((e) => {
              let t = (0, d.A)(e, 'mediaTypes'),
                i = (0, d.A)(t, 'video');
              if (i && i.context === g.LM) {
                if (Object.keys(t).length > 1)
                  return (
                    (0, a.logWarn)(
                      `Detected more than one mediaType in adUnitCode: ${e.code} while attempting to define an 'adpod' video adUnit.  'adpod' adUnits cannot be mixed with other mediaTypes.  This adUnit will be removed from the auction.`,
                    ),
                    !1
                  );
                let n = `Detected missing or incorrectly setup fields for an adpod adUnit.  Please review the following fields of adUnitCode: ${e.code}.  This adUnit will be removed from the auction.`,
                  d = !!(
                    (i.playerSize &&
                      ((0, a.isArrayOfNums)(i.playerSize, 2) ||
                        ((0, a.isArray)(i.playerSize) &&
                          i.playerSize.every((e) =>
                            (0, a.isArrayOfNums)(e, 2),
                          )))) ||
                    i.sizeConfig
                  ),
                  o = !!(
                    i.adPodDurationSec &&
                    (0, a.isNumber)(i.adPodDurationSec) &&
                    i.adPodDurationSec > 0
                  ),
                  r = !!(
                    i.durationRangeSec &&
                    (0, a.isArrayOfNums)(i.durationRangeSec) &&
                    i.durationRangeSec.every((e) => e > 0)
                  );
                if (!d || !o || !r)
                  return (
                    (n += d ? '' : '\nmediaTypes.video.playerSize'),
                    (n += o ? '' : '\nmediaTypes.video.adPodDurationSec'),
                    (n += r ? '' : '\nmediaTypes.video.durationRangeSec'),
                    (0, a.logWarn)(n),
                    !1
                  );
              }
              return !0;
            });
            (t = i), e.call(this, t);
          }
          function D(e, t, i, n, o) {
            if (o === g.LM) {
              let i = !0;
              if (
                (s.$W.getConfig('adpod.brandCategoryExclusion') &&
                  !(0, d.A)(t, 'meta.primaryCatId') &&
                  (i = !1),
                (0, d.A)(t, 'video'))
              )
                if (
                  (((0, d.A)(t, 'video.context') && t.video.context === g.LM) ||
                    (i = !1),
                  !(0, d.A)(t, 'video.durationSeconds') ||
                    t.video.durationSeconds <= 0)
                )
                  i = !1;
                else {
                  let e = (function (e, t) {
                    let i = (0, d.A)(t, 'video.durationSeconds'),
                      n = e.durationRangeSec;
                    if ((n.sort((e, t) => e - t), e.requireExactDuration)) {
                      if (!(0, f.I6)(n, (e) => e === i))
                        return (
                          (0, a.logWarn)(
                            'Detected a bid with a duration value not part of the list of accepted ranges specified in adUnit.mediaTypes.video.durationRangeSec.  Exact match durations must be used for this adUnit. Rejecting bid: ',
                            t,
                          ),
                          !1
                        );
                      t.video.durationBucket = i;
                    } else {
                      let e = Math.max(...n);
                      if (!(i <= e + 2))
                        return (
                          (0, a.logWarn)(
                            'Detected a bid with a duration value outside the accepted ranges specified in adUnit.mediaTypes.video.durationRangeSec.  Rejecting bid: ',
                            t,
                          ),
                          !1
                        );
                      {
                        let e = (0, f.I6)(n, (e) => e + 2 >= i);
                        t.video.durationBucket = e;
                      }
                    }
                    return !0;
                  })(n, t);
                  e || (i = !1);
                }
              s.$W.getConfig('cache.url') ||
                !t.vastXml ||
                t.vastUrl ||
                ((0, a.logError)(
                  '\n        This bid contains only vastXml and will not work when a prebid cache url is not specified.\n        Try enabling prebid cache with pbjs.setConfig({ cache: {url: "..."} });\n      ',
                ),
                (i = !1)),
                e.bail(i);
            } else e.call(this, t, i, n, o);
          }
          function E(e, t) {
            return e.adserverTargeting[p.xS.PRICE_BUCKET] /
              e.video.durationBucket <
              t.adserverTargeting[p.xS.PRICE_BUCKET] / t.video.durationBucket
              ? 1
              : e.adserverTargeting[p.xS.PRICE_BUCKET] /
                    e.video.durationBucket >
                  t.adserverTargeting[p.xS.PRICE_BUCKET] /
                    t.video.durationBucket
                ? -1
                : 0;
          }
          s.$W.getConfig('adpod', (e) =>
            (function (e) {
              void 0 !== e.bidQueueTimeDelay &&
                ('number' == typeof e.bidQueueTimeDelay &&
                e.bidQueueTimeDelay > 0
                  ? (b = e.bidQueueTimeDelay)
                  : (0, a.logWarn)(
                      `Detected invalid value for adpod.bidQueueTimeDelay in setConfig; must be a positive number.  Using default: ${b}`,
                    )),
                void 0 !== e.bidQueueSizeLimit &&
                  ('number' == typeof e.bidQueueSizeLimit &&
                  e.bidQueueSizeLimit > 0
                    ? (T = e.bidQueueSizeLimit)
                    : (0, a.logWarn)(
                        `Detected invalid value for adpod.bidQueueSizeLimit in setConfig; must be a positive number.  Using default: ${T}`,
                      ));
            })(e.adpod),
          ),
            (0, c.pT)((0, c.Yn)('callPrebidCache'), A),
            (0, c.pT)(r.Z, I),
            (0, c.pT)(u.E2, D);
          const B = {
            TARGETING_KEY_PB_CAT_DUR: v,
            TARGETING_KEY_CACHE_ID: m,
            getTargeting: function () {
              let { codes: e, callback: t } =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {};
              if (!t)
                return void (0, a.logError)(
                  'No callback function was defined in the getTargeting call.  Aborting getTargeting().',
                );
              e = e || [];
              const i = (function (e) {
                  return h.n
                    .getAdUnits()
                    .filter(
                      (e) => (0, d.A)(e, 'mediaTypes.video.context') === g.LM,
                    )
                    .filter((t) => !(e.length > 0) || -1 != e.indexOf(t.code));
                })(e),
                n = h.n.getBidsReceived(),
                o = s.$W.getConfig('adpod.brandCategoryExclusion'),
                r = s.$W.getConfig('adpod.deferCaching'),
                u = 'boolean' != typeof r || r;
              let c = (function (e, t) {
                let i = t.map((e) => e.code);
                return e.filter(
                  (e) =>
                    -1 != i.indexOf(e.adUnitCode) &&
                    e.video &&
                    e.video.context === g.LM,
                );
              })(n, i);
              if (
                ((c =
                  o || u
                    ? (function (e) {
                        let t = e.map((e) =>
                          Object.assign({}, e, { [v]: e.adserverTargeting[v] }),
                        );
                        t = (0, a.groupBy)(t, v);
                        let i = [];
                        return (
                          Object.keys(t).forEach((e) => {
                            var n;
                            t[e].sort(
                              ((n = 'responseTimestamp'),
                              function (e, t) {
                                return e[n] < t[n] ? 1 : e[n] > t[n] ? -1 : 0;
                              }),
                            ),
                              i.push(t[e][0]);
                          }),
                          i
                        );
                      })(c)
                    : c),
                s.$W.getConfig('adpod.prioritizeDeals'))
              ) {
                let [e, t] = c.reduce(
                  (e, t) => {
                    let i = (0, d.A)(t, 'video.dealTier'),
                      n = s.$W.getConfig(
                        `adpod.dealTier.${t.bidderCode}.minDealTier`,
                      );
                    return (
                      n && i
                        ? i >= n
                          ? e[1].push(t)
                          : e[0].push(t)
                        : i
                          ? e[1].push(t)
                          : e[0].push(t),
                      e
                    );
                  },
                  [[], []],
                );
                t.sort(E), e.sort(E), (c = t.concat(e));
              } else c.sort(E);
              let f = {};
              if (!1 === u)
                i.forEach((e) => {
                  let t = [],
                    i = (0, d.A)(e, 'mediaTypes.video.adPodDurationSec');
                  c
                    .filter((t) => t.adUnitCode === e.code)
                    .forEach((e, n, a) => {
                      e.video.durationBucket <= i &&
                        (t.push({ [v]: e.adserverTargeting[v] }),
                        (i -= e.video.durationBucket)),
                        n === a.length - 1 &&
                          t.length > 0 &&
                          t.push({ [m]: e.adserverTargeting[m] });
                    }),
                    (f[e.code] = t);
                }),
                  t(null, f);
              else {
                let e = [];
                i.forEach((t) => {
                  let i = (0, d.A)(t, 'mediaTypes.video.adPodDurationSec');
                  c.filter((e) => e.adUnitCode === t.code).forEach((t) => {
                    t.video.durationBucket <= i &&
                      (e.push(t), (i -= t.video.durationBucket));
                  });
                }),
                  (function (e, t) {
                    (0, l.t)(e, function (i, n) {
                      if (i) t(i, null);
                      else {
                        let i = [];
                        for (let t = 0; t < n.length; t++)
                          '' !== n[t] && i.push(e[t]);
                        t(null, i);
                      }
                    });
                  })(e, function (e, i) {
                    if (e) t(e, null);
                    else {
                      let e = (0, a.groupBy)(i, 'adUnitCode');
                      Object.keys(e).forEach((t) => {
                        let i = [];
                        e[t].forEach((e, t, n) => {
                          i.push({ [v]: e.adserverTargeting[v] }),
                            t === n.length - 1 &&
                              i.length > 0 &&
                              i.push({ [m]: e.adserverTargeting[m] });
                        }),
                          (f[t] = i);
                      }),
                        t(null, f);
                    }
                  });
              }
              return f;
            },
          };
          Object.freeze(B),
            (0, c.xG)('adpod', function () {
              (0, a.isPlainObject)(
                arguments.length <= 0 ? void 0 : arguments[0],
              )
                ? (function (e, t) {
                    for (let i in t) e[i] = t[i];
                  })(arguments.length <= 0 ? void 0 : arguments[0], B)
                : (0, a.logError)(
                    'Adpod module needs plain object to share methods with submodule',
                  );
            }),
            (0, n.E)('adpod');
        },
      },
      (e) => {
        e.O(0, [60802, 51085], () => {
          return (t = 63399), e((e.s = t));
          var t;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [50678],
      {
        37510: (e, t, n) => {
          var i = n(7873),
            r = n(70433),
            a = n(91069),
            o = n(57377),
            s = n(43272),
            c = n(15901),
            d = n(71371),
            p = n(12449);
          const u = 'USD',
            l = {
              image: { required: !0 },
              title: { required: !0 },
              sponsoredBy: { required: !0 },
              clickUrl: { required: !0 },
              body: { required: !1 },
              icon: { required: !1 },
              cta: { required: !1 },
            },
            m = {
              code: 'adyoulike',
              gvlid: 259,
              supportedMediaTypes: [d.D4, d.s6, d.G_],
              aliases: ['ayl'],
              isBidRequestValid: function (e) {
                const t = b(I(e)),
                  n = t.width > 0 && t.height > 0;
                return (
                  e.params &&
                  e.params.placement &&
                  (n || (e.mediaTypes && e.mediaTypes.native))
                );
              },
              buildRequests: function (e, t) {
                e = (0, p.Xj)(e);
                let n,
                  i = !1;
                const a = {
                  Version: '1.0',
                  Bids: e.reduce((e, t) => {
                    let a = (function (e) {
                        if ((0, r.A)(e, 'mediaTypes.banner')) return d.D4;
                        if ((0, r.A)(e, 'mediaTypes.video')) return d.G_;
                        if ((0, r.A)(e, 'mediaTypes.native')) return d.s6;
                      })(t),
                      o = I(t),
                      s = b(o);
                    if (
                      ((e[t.bidId] = {}),
                      (e[t.bidId].PlacementID = t.params.placement),
                      (e[t.bidId].TransactionID = t.ortb2Imp?.ext?.tid),
                      (e[t.bidId].Width = s.width),
                      (e[t.bidId].Height = s.height),
                      (e[t.bidId].AvailableSizes = o.join(',')),
                      'function' == typeof t.getFloor &&
                        (e[t.bidId].Pricing = (function (e, t, n) {
                          const i = e.getFloor({
                            currency: u,
                            mediaType: n,
                            size: [t.width, t.height],
                          });
                          if (!isNaN(i.floor) && i.currency === u)
                            return i.floor;
                        })(t, s, a)),
                      t.schain && (e[t.bidId].SChain = t.schain),
                      !n &&
                        t.userIdAsEids &&
                        t.userIdAsEids.length &&
                        (n = t.userIdAsEids),
                      a === d.s6)
                    ) {
                      let n = t.mediaTypes.native;
                      'image' === n.type && (n = Object.assign({}, l, n)),
                        (n.clickUrl = { required: !0 }),
                        (e[t.bidId].Native = n);
                    }
                    if (a === d.G_) {
                      (i = !0), (e[t.bidId].Video = t.mediaTypes.video);
                      const n = t.mediaTypes.video.playerSize;
                      Array.isArray(n) &&
                        !Array.isArray(n[0]) &&
                        (e[t.bidId].Video.playerSize = [n]);
                    }
                    return e;
                  }, {}),
                  PageRefreshed: g(),
                };
                t.gdprConsent &&
                  (a.gdprConsent = {
                    consentString: t.gdprConsent.consentString,
                    consentRequired:
                      'boolean' == typeof t.gdprConsent.gdprApplies
                        ? t.gdprConsent.gdprApplies
                        : null,
                  }),
                  t.uspConsent && (a.uspConsent = t.uspConsent),
                  t.ortb2 && (a.ortb2 = t.ortb2),
                  n && (a.eids = n),
                  (a.pbjs_version = '9.0.0');
                const o = JSON.stringify(a);
                return {
                  method: 'POST',
                  url: h(e, t, i),
                  data: o,
                  options: { withCredentials: !0 },
                };
              },
              interpretResponse: function (e, t) {
                const n = [];
                var i = {};
                if (!e || !e.body) return n;
                try {
                  i = JSON.parse(t.data).Bids;
                } catch (e) {}
                return (
                  e.body.forEach((e) => {
                    const t = (function (e, t) {
                      if (!e || (!e.Ad && !e.Native && !e.Vast)) return;
                      const n = t && t[e.BidID];
                      n &&
                        ((e.Width && '0' !== e.Width) || (e.Width = n.Width),
                        (e.Height && '0' !== e.Height) ||
                          (e.Height = n.Height));
                      const i = {
                          requestId: e.BidID,
                          ttl: 3600,
                          creativeId: e.CreativeID,
                          cpm: e.Price,
                          netRevenue: !0,
                          currency: u,
                          meta: e.Meta || { advertiserDomains: [] },
                        },
                        a = e.Vast;
                      a
                        ? ((i.width = e.Width),
                          (i.height = e.Height),
                          (i.vastXml = window.atob(a)),
                          (i.mediaType = 'video'))
                        : n.Native
                          ? ((i.native = (function (e, t) {
                              if ('object' == typeof e.Native) return e.Native;
                              const n = {};
                              var i = {},
                                a = {};
                              if ('string' == typeof e.Ad) {
                                (i = JSON.parse(
                                  e.Ad.match(
                                    /\/\*PREBID\*\/(.*)\/\*PREBID\*\//,
                                  )[1],
                                )),
                                  (a = i.Content.Preview.Text);
                                var o =
                                    i.TrackingPrefix +
                                    '/pixel?event_kind=IMPRESSION&attempt=' +
                                    i.Attempt,
                                  s =
                                    i.TrackingPrefix +
                                    '/pixel?event_kind=INSERTION&attempt=' +
                                    i.Attempt;
                                i.Campaign &&
                                  ((o += '&campaign=' + i.Campaign),
                                  (s += '&campaign=' + i.Campaign)),
                                  (n.clickUrl =
                                    i.TrackingPrefix +
                                    '/ar?event_kind=CLICK&attempt=' +
                                    i.Attempt +
                                    '&campaign=' +
                                    i.Campaign +
                                    '&url=' +
                                    encodeURIComponent(i.Content.Landing.Url)),
                                  i.OnEvents
                                    ? ((n.clickTrackers = C(i.OnEvents.CLICK)),
                                      (n.impressionTrackers = C(
                                        i.OnEvents.IMPRESSION,
                                      )),
                                      (n.javascriptTrackers = C(
                                        i.OnEvents.IMPRESSION,
                                        !0,
                                      )))
                                    : (n.impressionTrackers = []),
                                  n.impressionTrackers.push(o, s);
                              }
                              return (
                                Object.keys(t).map(function (o, s) {
                                  switch (o) {
                                    case 'title':
                                      n[o] = a.TITLE;
                                      break;
                                    case 'body':
                                      n[o] = a.DESCRIPTION;
                                      break;
                                    case 'cta':
                                      n[o] = a.CALLTOACTION;
                                      break;
                                    case 'sponsoredBy':
                                      n[o] = i.Content.Preview.Sponsor.Name;
                                      break;
                                    case 'image':
                                      const s = t.image.sizes || [];
                                      s.length ||
                                        ((s[0] = e.Width || 300),
                                        (s[1] = e.Height || 250));
                                      const c = v(
                                        i,
                                        (0, r.A)(
                                          i,
                                          'Content.Preview.Thumbnail.Image',
                                        ),
                                        s[0],
                                        s[1],
                                      );
                                      c &&
                                        (n[o] = {
                                          url: c,
                                          width: s[0],
                                          height: s[1],
                                        });
                                      break;
                                    case 'icon':
                                      const d = t.icon.sizes || [];
                                      d.length || ((d[0] = 50), (d[1] = 50));
                                      const p = v(
                                        i,
                                        (0, r.A)(
                                          i,
                                          'Content.Preview.Sponsor.Logo.Resource',
                                        ),
                                        d[0],
                                        d[1],
                                      );
                                      p &&
                                        (n[o] = {
                                          url: p,
                                          width: d[0],
                                          height: d[1],
                                        });
                                      break;
                                    case 'privacyIcon':
                                      n[o] = v(
                                        i,
                                        (0, r.A)(
                                          i,
                                          'Content.Preview.Credit.Logo.Resource',
                                        ),
                                        25,
                                        25,
                                      );
                                      break;
                                    case 'privacyLink':
                                      n[o] = (0, r.A)(
                                        i,
                                        'Content.Preview.Credit.Url',
                                      );
                                  }
                                }),
                                n
                              );
                            })(e, n.Native)),
                            (i.mediaType = 'native'))
                          : ((i.width = e.Width),
                            (i.height = e.Height),
                            (i.ad = e.Ad));
                      return i;
                    })(e, i);
                    t && n.push(t);
                  }),
                  n
                );
              },
              getUserSyncs: function (e, t, n, i, r) {
                if (!e.iframeEnabled) return [];
                let a = '';
                return (
                  n &&
                    ((a += '&gdpr=' + (n.gdprApplies ? 1 : 0)),
                    (a +=
                      '&gdpr_consent=' +
                      encodeURIComponent(n.consentString || ''))),
                  !0 === s.$W.getConfig('coppa') && (a += '&coppa=1'),
                  i && (a += '&us_privacy=' + encodeURIComponent(i)),
                  r?.gppString &&
                    r?.applicableSections?.length &&
                    ((a += '&gpp=' + encodeURIComponent(r.gppString)),
                    (a +=
                      '&gpp_sid=' +
                      encodeURIComponent(r?.applicableSections?.join(',')))),
                  [
                    {
                      type: 'iframe',
                      url: `https://visitor.omnitagjs.com/visitor/isync?uid=19340f4f097d16f41f34fc0274981ca4${a}`,
                    },
                  ]
                );
              },
            };
          function g() {
            try {
              if (performance && performance.navigation)
                return (
                  performance.navigation.type ===
                  performance.navigation.TYPE_RELOAD
                );
            } catch (e) {}
            return !1;
          }
          function h(e, t, n) {
            let i = (function (e) {
              let t = (0, c.I6)(e, (e) => e.params.DC);
              return t ? '-' + t.params.DC : '';
            })(e);
            const r = n ? '/hb-api/prebid-video/v1' : '/hb-api/prebid/v1';
            return (0, a.buildUrl)({
              protocol: 'https',
              host: `hb-api${i}.omnitagjs.com`,
              pathname: r,
              search: f(t),
            });
          }
          function f(e) {
            const t = {};
            if (e) {
              const n = e.refererInfo;
              n &&
                (n.location &&
                  ((t.RefererUrl = encodeURIComponent(n.location)),
                  n.reachedTop || (t.SafeFrame = !0)),
                (t.PageUrl = encodeURIComponent(n.topmostLocation)),
                (t.PageReferrer = encodeURIComponent(n.location)));
              const i = e.ortb2?.site;
              i &&
                ((t.PageUrl = encodeURIComponent(i.page || n?.topmostLocation)),
                (t.PageReferrer = encodeURIComponent(i.ref || n?.location)));
            }
            const n = e?.refererInfo?.canonicalUrl;
            return n && (t.CanonicalUrl = encodeURIComponent(n)), t;
          }
          function I(e) {
            let t = e.sizes || [];
            return (
              e.mediaTypes &&
                e.mediaTypes.banner &&
                (t = e.mediaTypes.banner.sizes || []),
              e.params &&
                Array.isArray(e.params.size) &&
                ((t = e.params.size), Array.isArray(t[0]) || (t = [t])),
              (0, a.parseSizesInput)(t)
            );
          }
          function b(e) {
            const t = {},
              n = e[0];
            if ('string' != typeof n) return t;
            const i = n.toUpperCase().split('X'),
              r = parseInt(i[0], 10);
            r && (t.width = r);
            const a = parseInt(i[1], 10);
            return a && (t.height = a), t;
          }
          function y(e) {
            return e
              ? 'https://blobs.omnitagjs.com/blobs/' +
                  e.substr(16, 2) +
                  '/' +
                  e.substr(16) +
                  '/' +
                  e
              : '';
          }
          function v(e, t, n, i) {
            let r = '';
            if (t && t.Kind)
              switch (t.Kind) {
                case 'INTERNAL':
                  r = y(t.Data.Internal.BlobReference.Uid);
                  break;
                case 'EXTERNAL':
                  const a = e.DynamicPrefix;
                  let o = t.Data.External.Url;
                  if (
                    ((o = o.replace(/\[height\]/i, '' + i)),
                    (o = o.replace(/\[width\]/i, '' + n)),
                    o.indexOf(a) >= 0)
                  ) {
                    const e = /.*url=([^&]*)/gm.exec(o);
                    (r = e ? e[1] : ''),
                      r || (r = y(/.*key=([^&]*)/gm.exec(o)[1]));
                  } else r = o;
              }
            return r;
          }
          function C(e, t) {
            const n = [];
            return e
              ? (e.map((e, i) => {
                  ((t && 'JAVASCRIPT_URL' === e.Kind) ||
                    (!t && 'PIXEL_URL' === e.Kind)) &&
                    n.push(e.Url);
                }),
                n)
              : n;
          }
          (0, o.a$)(m), (0, i.E)('adyoulikeBidAdapter');
        },
      },
      (e) => {
        e.O(0, [60802, 51085], () => {
          return (t = 37510), e((e.s = t));
          var t;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [44599],
      {
        50791: (e, r, t) => {
          t.d(r, { I: () => P });
          var a = t(7873),
            s = t(91069),
            i = t(70433),
            n = t(95789),
            o = t(43272),
            d = t(57377),
            p = t(71371),
            c = t(15901),
            l = t(63895),
            m = t(12938),
            u = t(12693),
            _ = t(68229),
            f = t(12449),
            g = t(24673),
            b = t(554),
            y = t(2349),
            h = t(25761),
            v = t(29906);
          const k = 'appnexus',
            x = 'https://ib.adnxs.com/ut/v3/prebid',
            I = 'https://ib.adnxs-simple.com/ut/v3/prebid',
            w = [
              'id',
              'minduration',
              'maxduration',
              'skippable',
              'playback_method',
              'frameworks',
              'context',
              'skipoffset',
            ],
            C = [
              'minduration',
              'maxduration',
              'skip',
              'skipafter',
              'playbackmethod',
              'api',
              'startdelay',
              'placement',
              'plcmt',
            ],
            A = [
              'age',
              'externalUid',
              'external_uid',
              'segments',
              'gender',
              'dnt',
              'language',
            ],
            E = ['geo', 'device_id'],
            O = ['enabled', 'dongle', 'member_id', 'debug_timeout'],
            S = {
              apn_debug_dongle: 'dongle',
              apn_debug_member_id: 'member_id',
              apn_debug_timeout: 'debug_timeout',
            },
            j = {
              playback_method: {
                unknown: 0,
                auto_play_sound_on: 1,
                auto_play_sound_off: 2,
                click_to_play: 3,
                mouse_over: 4,
                auto_play_sound_unknown: 5,
              },
              context: {
                unknown: 0,
                pre_roll: 1,
                mid_roll: 2,
                post_roll: 3,
                outstream: 4,
                'in-banner': 5,
                'in-feed': 6,
                interstitial: 7,
                accompanying_content_pre_roll: 8,
                accompanying_content_mid_roll: 9,
                accompanying_content_post_roll: 10,
              },
            },
            T = {
              body: 'description',
              body2: 'desc2',
              cta: 'ctatext',
              image: {
                serverName: 'main_image',
                requiredParams: { required: !0 },
              },
              icon: { serverName: 'icon', requiredParams: { required: !0 } },
              sponsoredBy: 'sponsored_by',
              privacyLink: 'privacy_link',
              salePrice: 'saleprice',
              displayUrl: 'displayurl',
            },
            N = '<script',
            U = /\/\/cdn\.adnxs\.com\/v|\/\/cdn\.adnxs\-simple\.com\/v/,
            R = 'trk.js',
            q = (0, m.vM)({ bidderCode: k }),
            P = {
              code: k,
              gvlid: 32,
              aliases: y.DX,
              supportedMediaTypes: [p.D4, p.G_, p.s6],
              isBidRequestValid: function (e) {
                return !!(
                  e.params.placementId ||
                  e.params.placement_id ||
                  (e.params.member && (e.params.invCode || e.params.inv_code))
                );
              },
              buildRequests: function (e, r) {
                const t = (e = (0, f.Xj)(e)).map(z),
                  a = (0, c.I6)(e, M);
                let i = {};
                !0 === o.$W.getConfig('coppa') && (i = { coppa: !0 }),
                  a &&
                    Object.keys(a.params.user)
                      .filter((e) => (0, c.mK)(A, e))
                      .forEach((e) => {
                        let r = (0, y.vk)(e);
                        if (
                          'segments' === e &&
                          (0, s.isArray)(a.params.user[e])
                        ) {
                          let t = [];
                          a.params.user[e].forEach((e) => {
                            (0, s.isNumber)(e)
                              ? t.push({ id: e })
                              : (0, s.isPlainObject)(e) && t.push(e);
                          }),
                            (i[r] = t);
                        } else 'segments' !== e && (i[r] = a.params.user[e]);
                      });
                const n = (0, c.I6)(e, B);
                let d;
                n &&
                  n.params &&
                  n.params.app &&
                  ((d = {}),
                  Object.keys(n.params.app)
                    .filter((e) => (0, c.mK)(E, e))
                    .forEach((e) => (d[e] = n.params.app[e])));
                const p = (0, c.I6)(e, K);
                let l;
                p &&
                  p.params &&
                  n.params.app &&
                  n.params.app.id &&
                  (l = { appid: p.params.app.id });
                let m = {},
                  u = {};
                const g = q.getCookie('apn_prebid_debug') || null;
                if (g)
                  try {
                    m = JSON.parse(g);
                  } catch (e) {
                    (0, s.logError)(
                      'AppNexus Debug Auction Cookie Error:\n\n' + e,
                    );
                  }
                else {
                  Object.keys(S).forEach((e) => {
                    let r = (0, s.getParameterByName)(e);
                    (0, s.isStr)(r) &&
                      '' !== r &&
                      ((m[S[e]] = r), (m.enabled = !0));
                  }),
                    (m = (0, h.$)(
                      { member_id: 'number', debug_timeout: 'number' },
                      m,
                    ));
                  const r = (0, c.I6)(e, G);
                  r && r.debug && (m = r.debug);
                }
                m &&
                  m.enabled &&
                  Object.keys(m)
                    .filter((e) => (0, c.mK)(O, e))
                    .forEach((e) => {
                      u[e] = m[e];
                    });
                const k = (0, c.I6)(e, $),
                  w = k ? parseInt(k.params.member, 10) : 0,
                  C = e[0].schain,
                  j = (0, c.I6)(e, W),
                  T = {
                    tags: [...t],
                    user: i,
                    sdk: { source: 'pbjs', version: '9.0.0' },
                    schain: C,
                  };
                j && (T.iab_support = { omidpn: 'Appnexus', omidpv: '9.0.0' }),
                  w > 0 && (T.member_id = w),
                  n && (T.device = d),
                  p && (T.app = l);
                let N = (0, s.deepClone)(r && r.ortb2),
                  U =
                    (0, s.deepClone)(
                      o.$W.getConfig('appnexusAuctionKeywords'),
                    ) || {},
                  R = (0, b.QF)(N, U);
                if (
                  (R.length > 0 && (T.keywords = R),
                  o.$W.getConfig('adpod.brandCategoryExclusion') &&
                    (T.brand_category_uniqueness = !0),
                  u.enabled &&
                    ((T.debug = u),
                    (0, s.logInfo)(
                      'AppNexus Debug Auction Settings:\n\n' +
                        JSON.stringify(u, null, 4),
                    )),
                  r &&
                    r.gdprConsent &&
                    ((T.gdpr_consent = {
                      consent_string: r.gdprConsent.consentString,
                      consent_required: r.gdprConsent.gdprApplies,
                    }),
                    r.gdprConsent.addtlConsent &&
                      -1 !== r.gdprConsent.addtlConsent.indexOf('~')))
                ) {
                  let e = r.gdprConsent.addtlConsent,
                    t = e.substring(e.indexOf('~') + 1);
                  T.gdpr_consent.addtl_consent = t
                    .split('.')
                    .map((e) => parseInt(e, 10));
                }
                if (
                  (r && r.uspConsent && (T.us_privacy = r.uspConsent),
                  r?.gppConsent
                    ? (T.privacy = {
                        gpp: r.gppConsent.gppString,
                        gpp_sid: r.gppConsent.applicableSections,
                      })
                    : r?.ortb2?.regs?.gpp &&
                      (T.privacy = {
                        gpp: r.ortb2.regs.gpp,
                        gpp_sid: r.ortb2.regs.gpp_sid,
                      }),
                  r && r.refererInfo)
                ) {
                  let e = {
                      rd_ref: encodeURIComponent(r.refererInfo.topmostLocation),
                      rd_top: r.refererInfo.reachedTop,
                      rd_ifs: r.refererInfo.numIframes,
                      rd_stk: r.refererInfo.stack
                        .map((e) => encodeURIComponent(e))
                        .join(','),
                    },
                    t = r.refererInfo.canonicalUrl;
                  (0, s.isStr)(t) && '' !== t && (e.rd_can = t),
                    (T.referrer_detection = e);
                }
                (0, c.I6)(e, L) &&
                  e.filter(L).forEach((e) => {
                    const r = (function (e, r) {
                        const { durationRangeSec: t, requireExactDuration: a } =
                            r.mediaTypes.video,
                          s = (function (e) {
                            const {
                                adPodDurationSec: r,
                                durationRangeSec: t,
                                requireExactDuration: a,
                              } = e,
                              s = Math.min(...t),
                              i = Math.floor(r / s);
                            return a ? Math.max(i, t.length) : i;
                          })(r.mediaTypes.video),
                          i = Math.max(...t),
                          n = e.filter((e) => e.uuid === r.bidId);
                        let o = (0, y.GS)(...n, s);
                        if (a) {
                          const e = Math.ceil(s / t.length),
                            r = (0, v.i)(o, e);
                          t.forEach((e, t) => {
                            r[t].map((r) => {
                              F(r, 'minduration', e), F(r, 'maxduration', e);
                            });
                          });
                        } else o.map((e) => F(e, 'maxduration', i));
                        return o;
                      })(t, e),
                      a = T.tags.filter((r) => r.uuid !== e.bidId);
                    T.tags = [...a, ...r];
                  });
                if (e[0].userId) {
                  let r = [];
                  e[0].userIdAsEids.forEach((e) => {
                    !e ||
                      !e.uids ||
                      e.uids.length < 1 ||
                      e.uids.forEach((t) => {
                        let a = { source: e.source, id: t.id };
                        'adserver.org' == e.source
                          ? (a.rti_partner = 'TDID')
                          : 'uidapi.com' == e.source &&
                            (a.rti_partner = 'UID2'),
                          r.push(a);
                      });
                  }),
                    r.length && (T.eids = r);
                }
                if (r?.ortb2?.regs?.ext?.dsa) {
                  const e = r.ortb2.regs.ext.dsa,
                    t = {};
                  if (
                    (['dsarequired', 'pubrender', 'datatopub'].forEach((r) => {
                      (0, s.isNumber)(e[r]) && (t[r] = e[r]);
                    }),
                    (0, s.isArray)(e.transparency) &&
                      e.transparency.every((e) => (0, s.isPlainObject)(e)))
                  ) {
                    const r = [];
                    e.transparency.forEach((e) => {
                      (0, s.isStr)(e.domain) &&
                        '' != e.domain &&
                        (0, s.isArray)(e.dsaparams) &&
                        e.dsaparams.every((e) => (0, s.isNumber)(e)) &&
                        r.push(e);
                    }),
                      r.length > 0 && (t.transparency = r);
                  }
                  (0, s.isEmpty)(t) || (T.dsa = t);
                }
                t[0].publisher_id && (T.publisher_id = t[0].publisher_id);
                const P = (function (e, r) {
                  let t = [],
                    a = { withCredentials: !0 },
                    i = x;
                  (0, _.C)(r?.gdprConsent) || (i = I);
                  ('TRUE' !==
                    (0, s.getParameterByName)('apn_test').toUpperCase() &&
                    !0 !== o.$W.getConfig('apn_test')) ||
                    (a.customHeaders = { 'X-Is-Test': 1 });
                  if (e.tags.length > 15) {
                    const n = (0, s.deepClone)(e);
                    (0, v.i)(e.tags, 15).forEach((e) => {
                      n.tags = e;
                      const s = JSON.stringify(n);
                      t.push({
                        method: 'POST',
                        url: i,
                        data: s,
                        bidderRequest: r,
                        options: a,
                      });
                    });
                  } else {
                    const s = JSON.stringify(e);
                    t = {
                      method: 'POST',
                      url: i,
                      data: s,
                      bidderRequest: r,
                      options: a,
                    };
                  }
                  return t;
                })(T, r);
                return P;
              },
              interpretResponse: function (e, r) {
                let { bidderRequest: t } = r;
                e = e.body;
                const a = [];
                if (!e || e.error) {
                  let r = `in response for ${t.bidderCode} adapter`;
                  return (
                    e && e.error && (r += `: ${e.error}`), (0, s.logError)(r), a
                  );
                }
                if (
                  (e.tags &&
                    e.tags.forEach((e) => {
                      const r =
                        (o = e) &&
                        o.ads &&
                        o.ads.length &&
                        (0, c.I6)(o.ads, (e) => e.rtb);
                      var o;
                      if (r) {
                        if (
                          (!0 === u.u.get(t.bidderCode, 'allowZeroCpmBids')
                            ? r.cpm >= 0
                            : r.cpm > 0) &&
                          (0, c.mK)(this.supportedMediaTypes, r.ad_type)
                        ) {
                          const o = (function (e, r, t) {
                            const a = (0, s.getBidRequest)(e.uuid, [t]),
                              o = (0, s.getUniqueIdentifierStr)(),
                              d = {
                                adId: o,
                                requestId: e.uuid,
                                cpm: r.cpm,
                                creativeId: r.creative_id,
                                dealId: r.deal_id,
                                currency:
                                  r.publisher_currency_codename || 'USD',
                                netRevenue: !0,
                                ttl: 300,
                                adUnitCode: a.adUnitCode,
                                appnexus: {
                                  buyerMemberId: r.buyer_member_id,
                                  dealPriority: r.deal_priority,
                                  dealCode: r.deal_code,
                                },
                              };
                            r.adomain &&
                              (d.meta = Object.assign({}, d.meta, {
                                advertiserDomains: [r.adomain],
                              }));
                            r.advertiser_id &&
                              (d.meta = Object.assign({}, d.meta, {
                                advertiserId: r.advertiser_id,
                              }));
                            r.dsa &&
                              (d.meta = Object.assign({}, d.meta, {
                                dsa: r.dsa,
                              }));
                            function m(e) {
                              return {
                                ver: '1.0',
                                complete: 0,
                                nodes: [{ bsid: e.buyer_member_id.toString() }],
                              };
                            }
                            r.buyer_member_id &&
                              (d.meta = Object.assign({}, d.meta, {
                                dchain: m(r),
                              }));
                            r.brand_id &&
                              (d.meta = Object.assign({}, d.meta, {
                                brandId: r.brand_id,
                              }));
                            if (r.rtb.video) {
                              Object.assign(d, {
                                width: r.rtb.video.player_width,
                                height: r.rtb.video.player_height,
                                vastImpUrl: r.notify_url,
                                ttl: 3600,
                              });
                              switch ((0, i.A)(a, 'mediaTypes.video.context')) {
                                case p.LM:
                                  const a = g.n[r.brand_category_id]
                                    ? g.n[r.brand_category_id]
                                    : null;
                                  d.meta = Object.assign({}, d.meta, {
                                    primaryCatId: a,
                                  });
                                  const o = r.deal_priority;
                                  (d.video = {
                                    context: p.LM,
                                    durationSeconds: Math.floor(
                                      r.rtb.video.duration_ms / 1e3,
                                    ),
                                    dealTier: o,
                                  }),
                                    (d.vastUrl = r.rtb.video.asset_url);
                                  break;
                                case l.H6:
                                  if (
                                    ((d.adResponse = e),
                                    (d.adResponse.ad = d.adResponse.ads[0]),
                                    (d.adResponse.ad.video =
                                      d.adResponse.ad.rtb.video),
                                    (d.vastXml = r.rtb.video.content),
                                    r.renderer_url)
                                  ) {
                                    const a = (0, c.I6)(
                                      t.bids,
                                      (r) => r.bidId === e.uuid,
                                    );
                                    let o = (0, i.A)(
                                      a,
                                      'mediaTypes.video.renderer.options',
                                    );
                                    o || (o = (0, i.A)(a, 'renderer.options')),
                                      (d.renderer = (function (e, r) {
                                        let t =
                                          arguments.length > 2 &&
                                          void 0 !== arguments[2]
                                            ? arguments[2]
                                            : {};
                                        const a = n.A4.install({
                                          id: r.renderer_id,
                                          url: r.renderer_url,
                                          config: t,
                                          loaded: !1,
                                          adUnitCode: e,
                                        });
                                        try {
                                          a.setRender(H);
                                        } catch (e) {
                                          (0, s.logWarn)(
                                            'Prebid Error calling setRender on renderer',
                                            e,
                                          );
                                        }
                                        return (
                                          a.setEventHandlers({
                                            impression: () =>
                                              (0, s.logMessage)(
                                                'AppNexus outstream video impression event',
                                              ),
                                            loaded: () =>
                                              (0, s.logMessage)(
                                                'AppNexus outstream video loaded event',
                                              ),
                                            ended: () => {
                                              (0, s.logMessage)(
                                                'AppNexus outstream renderer video event',
                                              ),
                                                (document.querySelector(
                                                  `#${e}`,
                                                ).style.display = 'none');
                                            },
                                          }),
                                          a
                                        );
                                      })(d.adUnitCode, r, o));
                                  }
                                  break;
                                case l.mn:
                                  d.vastUrl =
                                    r.notify_url +
                                    '&redir=' +
                                    encodeURIComponent(r.rtb.video.asset_url);
                              }
                            } else if (r.rtb[p.s6]) {
                              const e = r.rtb[p.s6];
                              let t;
                              if (
                                (function (e) {
                                  if (!e || '' === e) return !1;
                                  let r = e.match(U),
                                    t = null != r && r.length >= 1,
                                    a = e.match(R),
                                    s = null != a && a.length >= 1;
                                  return e.startsWith(N) && s && t;
                                })(r.viewability.config)
                              ) {
                                let e =
                                  'pbjs_adid=' +
                                  o +
                                  ';pbjs_auc=' +
                                  a.adUnitCode;
                                t = r.viewability.config.replace(
                                  'dom_id=%native_dom_id%',
                                  e,
                                );
                              }
                              let i = e.javascript_trackers;
                              null == i
                                ? (i = t)
                                : (0, s.isStr)(i)
                                  ? (i = [i, t])
                                  : i.push(t),
                                (d[p.s6] = {
                                  title: e.title,
                                  body: e.desc,
                                  body2: e.desc2,
                                  cta: e.ctatext,
                                  rating: e.rating,
                                  sponsoredBy: e.sponsored,
                                  privacyLink: e.privacy_link,
                                  address: e.address,
                                  downloads: e.downloads,
                                  likes: e.likes,
                                  phone: e.phone,
                                  price: e.price,
                                  salePrice: e.saleprice,
                                  clickUrl: e.link.url,
                                  displayUrl: e.displayurl,
                                  clickTrackers: e.link.click_trackers,
                                  impressionTrackers: e.impression_trackers,
                                  video: e.video,
                                  javascriptTrackers: i,
                                }),
                                e.main_img &&
                                  (d.native.image = {
                                    url: e.main_img.url,
                                    height: e.main_img.height,
                                    width: e.main_img.width,
                                  }),
                                e.icon &&
                                  (d.native.icon = {
                                    url: e.icon.url,
                                    height: e.icon.height,
                                    width: e.icon.width,
                                  });
                            } else {
                              Object.assign(d, {
                                width: r.rtb.banner.width,
                                height: r.rtb.banner.height,
                                ad: r.rtb.banner.content,
                              });
                              try {
                                if (r.rtb.trackers)
                                  for (
                                    let e = 0;
                                    e <
                                    r.rtb.trackers[0].impression_urls.length;
                                    e++
                                  ) {
                                    const t =
                                        r.rtb.trackers[0].impression_urls[e],
                                      a = (0, s.createTrackPixelHtml)(t);
                                    d.ad += a;
                                  }
                              } catch (e) {
                                (0, s.logError)(
                                  'Error appending tracking pixel',
                                  e,
                                );
                              }
                            }
                            return d;
                          })(e, r, t);
                          (o.mediaType = (function (e) {
                            const r = e.ad_type;
                            return r === p.G_ ? p.G_ : r === p.s6 ? p.s6 : p.D4;
                          })(r)),
                            a.push(o);
                        }
                      }
                    }),
                  e.debug && e.debug.debug_info)
                ) {
                  let r =
                    'AppNexus Debug Auction for Prebid\n\n' +
                    e.debug.debug_info;
                  (r = r
                    .replace(/(<td>|<th>)/gm, '\t')
                    .replace(/(<\/td>|<\/th>)/gm, '\n')
                    .replace(/^<br>/gm, '')
                    .replace(/(<br>\n|<br>)/gm, '\n')
                    .replace(/<h1>(.*)<\/h1>/gm, '\n\n===== $1 =====\n\n')
                    .replace(/<h[2-6]>(.*)<\/h[2-6]>/gm, '\n\n*** $1 ***\n\n')
                    .replace(/(<([^>]+)>)/gim, '')),
                    (0, s.logMessage)(
                      'https://console.appnexus.com/docs/understanding-the-debug-auction',
                    ),
                    (0, s.logMessage)(r);
                }
                return a;
              },
              getUserSyncs: function (e, r, t, a, s) {
                if (e.iframeEnabled && (0, _.C)(t))
                  return [
                    {
                      type: 'iframe',
                      url: 'https://acdn.adnxs.com/dmp/async_usersync.html',
                    },
                  ];
              },
            };
          function z(e) {
            const r = {};
            Object.keys(e.params).forEach((r) => {
              let t = (0, y.vk)(r);
              t !== r && ((e.params[t] = e.params[r]), delete e.params[r]);
            }),
              (r.sizes = D(e.sizes)),
              (r.primary_size = r.sizes[0]),
              (r.ad_types = []),
              (r.uuid = e.bidId),
              e.params.placement_id
                ? (r.id = parseInt(e.params.placement_id, 10))
                : (r.code = e.params.inv_code);
            const t = (0, s.getParameterByName)('ast_override_div');
            if ((0, s.isStr)(t) && '' !== t) {
              const a = t
                .split(',')
                .find((r) => r.startsWith(`${e.adUnitCode}:`));
              if (a) {
                const e = a.split(':')[1];
                e && (r.force_creative_id = parseInt(e, 10));
              }
            }
            (r.allow_smaller_sizes = e.params.allow_smaller_sizes || !1),
              (r.use_pmt_rule =
                'boolean' == typeof e.params.use_payment_rule
                  ? e.params.use_payment_rule
                  : 'boolean' == typeof e.params.use_pmt_rule &&
                    e.params.use_pmt_rule),
              (r.prebid = !0),
              (r.disable_psa = !0);
            let a = (function (e) {
              if (!(0, s.isFn)(e.getFloor))
                return e.params.reserve ? e.params.reserve : null;
              let r = e.getFloor({
                currency: 'USD',
                mediaType: '*',
                size: '*',
              });
              if (
                (0, s.isPlainObject)(r) &&
                !isNaN(r.floor) &&
                'USD' === r.currency
              )
                return r.floor;
              return null;
            })(e);
            if ((a && (r.reserve = a), e.params.position))
              r.position = { above: 1, below: 2 }[e.params.position] || 0;
            else {
              let t =
                (0, i.A)(e, 'mediaTypes.banner.pos') ||
                (0, i.A)(e, 'mediaTypes.video.pos');
              (0 !== t && 1 !== t && 3 !== t) || (r.position = 3 === t ? 2 : t);
            }
            e.params.traffic_source_code &&
              (r.traffic_source_code = e.params.traffic_source_code),
              e.params.private_sizes &&
                (r.private_sizes = D(e.params.private_sizes)),
              e.params.supply_type && (r.supply_type = e.params.supply_type),
              e.params.pub_click && (r.pubclick = e.params.pub_click),
              e.params.ext_inv_code && (r.ext_inv_code = e.params.ext_inv_code),
              e.params.publisher_id &&
                (r.publisher_id = parseInt(e.params.publisher_id, 10)),
              e.params.external_imp_id &&
                (r.external_imp_id = e.params.external_imp_id);
            const n = (0, b.T_)(
              (0, b.gg)((0, i.A)(e, 'ortb2Imp.ext.data.keywords')),
              e.params?.keywords,
            );
            n.length > 0 && (r.keywords = n);
            let o =
              (0, i.A)(e, 'ortb2Imp.ext.gpid') ||
              (0, i.A)(e, 'ortb2Imp.ext.data.pbadslot');
            if (
              (o && (r.gpid = o),
              (e.mediaType === p.s6 || (0, i.A)(e, `mediaTypes.${p.s6}`)) &&
                (r.ad_types.push(p.s6),
                0 === r.sizes.length && (r.sizes = D([1, 1])),
                e.nativeParams))
            ) {
              const t = (function (e) {
                const r = {};
                return (
                  Object.keys(e).forEach((t) => {
                    const a = (T[t] && T[t].serverName) || T[t] || t,
                      i = T[t] && T[t].requiredParams;
                    r[a] = Object.assign({}, i, e[t]);
                    if (
                      !(a !== T.image.serverName && a !== T.icon.serverName) &&
                      r[a].sizes
                    ) {
                      let e = r[a].sizes;
                      ((0, s.isArrayOfNums)(e) ||
                        ((0, s.isArray)(e) &&
                          e.length > 0 &&
                          e.every((e) => (0, s.isArrayOfNums)(e)))) &&
                        (r[a].sizes = D(r[a].sizes));
                    }
                    a === T.privacyLink && (r.privacy_supported = !0);
                  }),
                  r
                );
              })(e.nativeParams);
              r[p.s6] = { layouts: [t] };
            }
            {
              const t = (0, i.A)(e, `mediaTypes.${p.G_}`),
                a = (0, i.A)(e, 'mediaTypes.video.context');
              (r.hb_source = t && 'adpod' === a ? 7 : 1),
                (e.mediaType === p.G_ || t) && r.ad_types.push(p.G_),
                (e.mediaType === p.G_ || (t && 'outstream' !== a)) &&
                  (r.require_asset_url = !0),
                e.params.video &&
                  ((r.video = {}),
                  Object.keys(e.params.video)
                    .filter((e) => (0, c.mK)(w, e))
                    .forEach((t) => {
                      switch (t) {
                        case 'context':
                        case 'playback_method':
                          let a = e.params.video[t];
                          (a = (0, s.isArray)(a) ? a[0] : a),
                            (r.video[t] = j[t][a]);
                          break;
                        case 'frameworks':
                          break;
                        default:
                          r.video[t] = e.params.video[t];
                      }
                    }),
                  e.params.video.frameworks &&
                    (0, s.isArray)(e.params.video.frameworks) &&
                    (r.video_frameworks = e.params.video.frameworks)),
                t &&
                  ((r.video = r.video || {}),
                  Object.keys(t)
                    .filter((e) => (0, c.mK)(C, e))
                    .forEach((e) => {
                      switch (e) {
                        case 'minduration':
                        case 'maxduration':
                          'number' != typeof r.video[e] && (r.video[e] = t[e]);
                          break;
                        case 'skip':
                          'boolean' != typeof r.video.skippable &&
                            (r.video.skippable = 1 === t[e]);
                          break;
                        case 'skipafter':
                          'number' != typeof r.video.skipoffset &&
                            (r.video.skippoffset = t[e]);
                          break;
                        case 'playbackmethod':
                          if ('number' != typeof r.video.playback_method) {
                            let a = t[e];
                            (a = (0, s.isArray)(a) ? a[0] : a),
                              a >= 1 && a <= 4 && (r.video.playback_method = a);
                          }
                          break;
                        case 'api':
                          if (!r.video_frameworks && (0, s.isArray)(t[e])) {
                            let a = t[e]
                              .map((e) => {
                                let r = 4 === e ? 5 : 5 === e ? 4 : e;
                                if (r >= 1 && r <= 5) return r;
                              })
                              .filter((e) => e);
                            r.video_frameworks = a;
                          }
                          break;
                        case 'startdelay':
                        case 'plcmt':
                        case 'placement':
                          if ('number' != typeof r.video.context) {
                            const e = t.plcmt,
                              a = t.placement,
                              s = t.startdelay,
                              i =
                                (function (e, r) {
                                  if (!e) return;
                                  if (2 === e) {
                                    if (void 0 === r) return;
                                    if (0 === r)
                                      return 'accompanying_content_pre_roll';
                                    if (-1 === r)
                                      return 'accompanying_content_mid_roll';
                                    if (-2 === r)
                                      return 'accompanying_content_post_roll';
                                  } else {
                                    if (3 === e) return 'interstitial';
                                    if (4 === e) return 'outstream';
                                  }
                                })(e, s) ||
                                (function (e) {
                                  if (!e) return;
                                  if (2 === e) return 'in-banner';
                                  if (3 === e) return 'outstream';
                                  if (4 === e) return 'in-feed';
                                  if (5 === e) return 'intersitial';
                                })(a) ||
                                (function (e) {
                                  if (!e) return;
                                  if (0 === e) return 'pre_roll';
                                  if (-1 === e) return 'mid_roll';
                                  if (-2 === e) return 'post_roll';
                                })(s);
                            r.video.context = j.context[i];
                          }
                      }
                    })),
                e.renderer &&
                  (r.video = Object.assign({}, r.video, {
                    custom_renderer_present: !0,
                  }));
            }
            return (
              e.params.frameworks &&
                (0, s.isArray)(e.params.frameworks) &&
                (r.banner_frameworks = e.params.frameworks),
              (0, i.A)(e, `mediaTypes.${p.D4}`) && r.ad_types.push(p.D4),
              0 === r.ad_types.length && delete r.ad_types,
              r
            );
          }
          function D(e) {
            let r = [],
              t = {};
            if ((0, s.isArray)(e) && 2 === e.length && !(0, s.isArray)(e[0]))
              (t.width = parseInt(e[0], 10)),
                (t.height = parseInt(e[1], 10)),
                r.push(t);
            else if ('object' == typeof e)
              for (let a = 0; a < e.length; a++) {
                let s = e[a];
                (t = {}),
                  (t.width = parseInt(s[0], 10)),
                  (t.height = parseInt(s[1], 10)),
                  r.push(t);
              }
            return r;
          }
          function M(e) {
            return !!e.params.user;
          }
          function $(e) {
            return !!parseInt(e.params.member, 10);
          }
          function B(e) {
            if (e.params) return !!e.params.app;
          }
          function K(e) {
            return e.params && e.params.app
              ? !!e.params.app.id
              : !!e.params.app;
          }
          function G(e) {
            return !!e.debug;
          }
          function L(e) {
            return (
              e.mediaTypes &&
              e.mediaTypes.video &&
              e.mediaTypes.video.context === p.LM
            );
          }
          function W(e) {
            let r = !1;
            const t = e.params,
              a = e.params.video;
            return (
              t.frameworks &&
                (0, s.isArray)(t.frameworks) &&
                (r = (0, c.mK)(e.params.frameworks, 6)),
              !r &&
                a &&
                a.frameworks &&
                (0, s.isArray)(a.frameworks) &&
                (r = (0, c.mK)(e.params.video.frameworks, 6)),
              r
            );
          }
          function F(e, r, t) {
            (0, s.isEmpty)(e.video) && (e.video = {}), (e.video[r] = t);
          }
          function H(e, r) {
            !(function (e) {
              try {
                const r = document
                  .getElementById(e)
                  .querySelectorAll("div[id^='google_ads']");
                r[0] && r[0].style.setProperty('display', 'none');
              } catch (e) {}
            })(e.adUnitCode),
              (function (e) {
                try {
                  const r = document
                    .getElementById(e)
                    .querySelectorAll("script[id^='sas_script']");
                  r[0].nextSibling &&
                    'iframe' === r[0].nextSibling.localName &&
                    r[0].nextSibling.style.setProperty('display', 'none');
                } catch (e) {}
              })(e.adUnitCode),
              e.renderer.push(() => {
                (r?.defaultView || window).ANOutstreamVideo.renderAd(
                  {
                    tagId: e.adResponse.tag_id,
                    sizes: [e.getSize().split('x')],
                    targetId: e.adUnitCode,
                    uuid: e.adResponse.uuid,
                    adResponse: e.adResponse,
                    rendererOptions: e.renderer.getConfig(),
                  },
                  J.bind(null, e),
                );
              });
          }
          function J(e, r, t) {
            e.renderer.handleVideoEvent({ id: r, eventName: t });
          }
          (0, d.a$)(P), (0, a.E)('appnexusBidAdapter');
        },
      },
      (e) => {
        e.O(0, [60802, 97247, 95444, 44982, 42698, 12126, 51085], () => {
          return (r = 50791), e((e.s = r));
          var r;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [38793],
      {
        96345: (n, e, t) => {
          var i = t(7873),
            s = t(91069),
            o = t(63172),
            a = t(43272),
            r = t(16916),
            c = t(16894),
            p = t(20687),
            l = t(20965),
            g = t(25555),
            u = t(2604);
          let d,
            f,
            m,
            h,
            P = !1;
          function S(n, e) {
            let { onSuccess: t, onError: i } = e;
            new g.k((e) => e(n())).then(t, (n) => {
              n instanceof b ? i(n.message, ...n.args) : i('GPP error:', n);
            });
          }
          class b {
            constructor(n, e) {
              (this.message = n), (this.args = null == e ? [] : [e]);
            }
          }
          class y {
            apiVersion = '1.1';
            static INST;
            static get() {
              let n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : l.c5;
              if (null == this.INST) {
                const e = n({
                  apiName: '__gpp',
                  apiArgs: ['command', 'callback', 'parameter'],
                  mode: l.q4,
                });
                if (null == e) throw new b('GPP CMP not found');
                this.INST = new this(e);
              }
              return this.INST;
            }
            #n;
            #e;
            #t = [];
            initialized = !1;
            constructor(n) {
              (this.cmp = n),
                ([this.#n, this.#e] = [0, 1].map((n) => (e) => {
                  for (; this.#t.length; ) this.#t.pop()[n](e);
                }));
            }
            init(n) {
              const e = this.updateWhenReady(n);
              return (
                this.initialized ||
                  (n.gppVersion !== this.apiVersion &&
                    (0, s.logWarn)(
                      `Unrecognized GPP CMP version: ${n.apiVersion}. Continuing using GPP API version ${this.apiVersion}...`,
                    ),
                  (this.initialized = !0),
                  this.cmp({
                    command: 'addEventListener',
                    callback: (n, e) => {
                      null == e || e
                        ? 'error' === n?.pingData?.cmpStatus
                          ? this.#e(
                              new b(
                                'CMP status is "error"; please check CMP setup',
                                n,
                              ),
                            )
                          : this.isCMPReady(n?.pingData || {}) &&
                            ['sectionChange', 'signalStatus'].includes(
                              n?.eventName,
                            ) &&
                            this.#n(this.updateConsent(n.pingData))
                        : this.#e(new b('Received error response from CMP', n));
                    },
                  })),
                e
              );
            }
            refresh() {
              return this.cmp({ command: 'ping' }).then(this.init.bind(this));
            }
            updateConsent(n) {
              return new g.k((e) => {
                if (null == n || (0, s.isEmpty)(n))
                  throw new b('Received empty response from CMP', n);
                const t = M(n);
                (0, s.logInfo)('Retrieved GPP consent from CMP:', t), e(t);
              });
            }
            nextUpdate() {
              return new g.k((n, e) => {
                this.#t.push([n, e]);
              });
            }
            updateWhenReady(n) {
              return this.isCMPReady(n)
                ? this.updateConsent(n)
                : this.nextUpdate();
            }
            isCMPReady(n) {
              return 'ready' === n.signalStatus;
            }
          }
          const v = {
            iab: function (n) {
              let { onSuccess: e, onError: t } = n,
                i =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : l.c5;
              S(() => y.get(i).refresh(), { onSuccess: e, onError: t });
            },
            static: function (n) {
              return S(() => M(m), n);
            },
          };
          function C(n) {
            let e = !1,
              t = null;
            function i(i, s, o) {
              if (
                (null != t && clearTimeout(t),
                (e = !0),
                r.ad.setConsentData(i),
                'function' == typeof n)
              ) {
                for (
                  var a = arguments.length,
                    c = new Array(a > 3 ? a - 3 : 0),
                    p = 3;
                  p < a;
                  p++
                )
                  c[p - 3] = arguments[p];
                n(s, o, ...c);
              }
            }
            if (!v.hasOwnProperty(d))
              return void i(
                null,
                !1,
                `GPP CMP framework (${d}) is not a supported framework.  Aborting consentManagement module and resuming auction.`,
              );
            const s = {
              onSuccess: (n) => i(n, !1),
              onError: function (n) {
                for (
                  var e = arguments.length,
                    t = new Array(e > 1 ? e - 1 : 0),
                    s = 1;
                  s < e;
                  s++
                )
                  t[s - 1] = arguments[s];
                i(null, !0, n, ...t);
              },
            };
            if ((v[d](s), !e)) {
              const n = () => {
                const n = (n) => {
                  i(n, !1, 'GPP CMP did not load, continuing auction...');
                };
                S(() => M(h), { onSuccess: n, onError: () => n(k()) });
              };
              0 === f ? n() : (t = setTimeout(n, f));
            }
          }
          const w = (0, c.Ak)('gpp', function (n, e) {
            var t;
            (t = function (t, i) {
              if (i) {
                let n = s.logWarn;
                t &&
                  ((n = s.logError),
                  (i = `${i} Canceling auction as per consentManagement config.`));
                for (
                  var o = arguments.length,
                    a = new Array(o > 2 ? o - 2 : 0),
                    r = 2;
                  r < o;
                  r++
                )
                  a[r - 2] = arguments[r];
                n(i, ...a);
              }
              t
                ? (n.stopTiming(),
                  'function' == typeof e.bidsBackHandler
                    ? e.bidsBackHandler()
                    : (0, s.logError)('Error executing bidsBackHandler'))
                : n.call(this, e);
            }),
              h
                ? ((0, s.logInfo)(
                    'User consent information already known.  Pulling internally stored information...',
                  ),
                  t(!1))
                : C(t);
          });
          function M(n) {
            if (
              (null != n?.applicableSections &&
                !Array.isArray(n.applicableSections)) ||
              (null != n?.gppString && !(0, s.isStr)(n.gppString)) ||
              (null != n?.parsedSections &&
                !(0, s.isPlainObject)(n.parsedSections))
            )
              throw new b(
                'CMP returned unexpected value during lookup process.',
                n,
              );
            return (
              ['usnatv1', 'uscav1'].forEach((e) => {
                n?.parsedSections?.[e] &&
                  (0, s.logWarn)(
                    `Received invalid section from cmp: '${e}'. Some functionality may not work as expected`,
                    n,
                  );
              }),
              k(n)
            );
          }
          function k() {
            let n =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {};
            return (
              (h = {
                gppString: n?.gppString,
                applicableSections: n?.applicableSections || [],
                parsedSections: n?.parsedSections || {},
                gppData: n,
              }),
              r.ad.setConsentData(n),
              h
            );
          }
          a.$W.getConfig('consentManagement', (n) =>
            (function (n) {
              (n = n && n.gpp) && 'object' == typeof n
                ? ((0, s.isStr)(n.cmpApi)
                    ? (d = n.cmpApi)
                    : ((d = 'iab'),
                      (0, s.logInfo)(
                        'consentManagement.gpp config did not specify cmp.  Using system default setting (iab).',
                      )),
                  (0, s.isNumber)(n.timeout)
                    ? (f = n.timeout)
                    : ((f = 1e4),
                      (0, s.logInfo)(
                        'consentManagement.gpp config did not specify timeout.  Using system default setting (10000).',
                      )),
                  'static' === d &&
                    ((0, s.isPlainObject)(n.consentData)
                      ? ((m = n.consentData), (f = 0))
                      : (0, s.logError)(
                          "consentManagement.gpp config with cmpApi: 'static' did not specify consentData. No consents will be available to adapters.",
                        )),
                  (0, s.logInfo)(
                    'consentManagement.gpp module has been activated...',
                  ),
                  P ||
                    ((0, i.m)().requestBids.before(w, 50),
                    u.U3.before((n, e) =>
                      n(
                        Object.assign({ gppConsent: r.ad.getConsentData() }, e),
                      ),
                    )),
                  (P = !0),
                  r.ad.enable(),
                  C())
                : (0, s.logWarn)(
                    'consentManagement.gpp config not defined, exiting consent manager module',
                  );
            })(n.consentManagement),
          ),
            p.w.before(function (n, e) {
              return n(
                e.then((n) => {
                  const e = r.ad.getConsentData();
                  return (
                    e &&
                      (Array.isArray(e.applicableSections) &&
                        (0, o.J)(n, 'regs.gpp_sid', e.applicableSections),
                      (0, o.J)(n, 'regs.gpp', e.gppString)),
                    n
                  );
                }),
              );
            }),
            (0, i.E)('consentManagementGpp');
        },
      },
      (n) => {
        n.O(0, [57109, 60802, 51085], () => {
          return (e = 96345), n((n.s = e));
          var e;
        });
        n.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [15081],
      {
        66117: (n, e, t) => {
          var o = t(7873),
            i = t(91069),
            r = t(63172),
            s = t(43272),
            a = t(16916),
            c = t(15901),
            l = t(16894),
            u = t(1e3),
            d = t(20687),
            g = t(20965);
          const p = 2;
          let f,
            m,
            b,
            C,
            v,
            y,
            M = !1;
          const S = {
            iab: function (n) {
              let { onSuccess: e, onError: t, onEvent: o } = n;
              const r = (0, g.c5)({
                apiName: '__tcfapi',
                apiVersion: p,
                apiArgs: ['command', 'version', 'callback', 'parameter'],
              });
              if (!r) return t('TCF2 CMP not found.');
              r.isDirect
                ? (0, i.logInfo)(
                    'Detected CMP API is directly accessible, calling it now...',
                  )
                : (0, i.logInfo)(
                    'Detected CMP is outside the current iframe where Prebid.js is located, calling it now...',
                  );
              r({
                command: 'addEventListener',
                callback: function (n, r) {
                  (0, i.logInfo)('Received a response from CMP', n),
                    r
                      ? (o(n),
                        (!1 !== n.gdprApplies &&
                          'tcloaded' !== n.eventStatus &&
                          'useractioncomplete' !== n.eventStatus) ||
                          k(n, { onSuccess: e, onError: t }))
                      : t(
                          'CMP unable to register callback function.  Please check CMP setup.',
                        );
                },
              });
            },
            static: function (n) {
              let { onSuccess: e, onError: t } = n;
              k(C, { onSuccess: e, onError: t });
            },
          };
          function A(n) {
            let e,
              t,
              o = !1,
              i = null,
              r = !1;
            function s(n) {
              null != i && clearTimeout(i),
                o || null == n || (0 === n ? e() : (i = setTimeout(e, n)));
            }
            function l(e, t, i) {
              if (
                (s(null),
                (o = !0),
                a.mW.setConsentData(e),
                'function' == typeof n)
              ) {
                for (
                  var r = arguments.length,
                    c = new Array(r > 3 ? r - 3 : 0),
                    l = 3;
                  l < r;
                  l++
                )
                  c[l - 3] = arguments[l];
                n(t, i, ...c);
              }
            }
            if (!(0, c.mK)(Object.keys(S), f))
              return void l(
                null,
                !1,
                `CMP framework (${f}) is not a supported framework.  Aborting consentManagement module and resuming auction.`,
              );
            const u = {
              onSuccess: (n) => l(n, !1),
              onError: function (n) {
                for (
                  var e = arguments.length,
                    t = new Array(e > 1 ? e - 1 : 0),
                    o = 1;
                  o < e;
                  o++
                )
                  t[o - 1] = arguments[o];
                l(null, !0, n, ...t);
              },
              onEvent: function (n) {
                (t = n), r || ((r = !0), null != v && s(v));
              },
            };
            (e = () => {
              const n = (n) => {
                l(
                  n,
                  !1,
                  (r
                    ? 'Timeout waiting for user action on CMP'
                    : 'CMP did not load') + ', continuing auction...',
                );
              };
              k(t, { onSuccess: n, onError: () => n(E(void 0)) });
            }),
              S[f](u),
              (null != v && r) || s(m);
          }
          const P = (0, l.Ak)('gdpr', function (n, e) {
            var t;
            (t = function (t, o) {
              if (o) {
                let n = i.logWarn;
                t &&
                  ((n = i.logError),
                  (o = `${o} Canceling auction as per consentManagement config.`));
                for (
                  var r = arguments.length,
                    s = new Array(r > 2 ? r - 2 : 0),
                    a = 2;
                  a < r;
                  a++
                )
                  s[a - 2] = arguments[a];
                n(o, ...s);
              }
              t
                ? (n.stopTiming(),
                  'function' == typeof e.bidsBackHandler
                    ? e.bidsBackHandler()
                    : (0, i.logError)('Error executing bidsBackHandler'))
                : n.call(this, e);
            }),
              y
                ? ((0, i.logInfo)(
                    'User consent information already known.  Pulling internally stored information...',
                  ),
                  t(!1))
                : A(t);
          });
          function k(n, e) {
            let { onSuccess: t, onError: o } = e;
            !(function () {
              const e =
                  n && 'boolean' == typeof n.gdprApplies ? n.gdprApplies : b,
                t = n && n.tcString;
              return !(
                'boolean' == typeof e &&
                (!0 !== e || (t && (0, i.isStr)(t)))
              );
            })()
              ? t(E(n))
              : o('CMP returned unexpected value during lookup process.', n);
          }
          function E(n) {
            return (
              (y = {
                consentString: n ? n.tcString : void 0,
                vendorData: n || void 0,
                gdprApplies:
                  n && 'boolean' == typeof n.gdprApplies ? n.gdprApplies : b,
              }),
              n &&
                n.addtlConsent &&
                (0, i.isStr)(n.addtlConsent) &&
                (y.addtlConsent = n.addtlConsent),
              (y.apiVersion = p),
              y
            );
          }
          s.$W.getConfig('consentManagement', (n) =>
            (function (n) {
              (n = n && (n.gdpr || n.usp || n.gpp ? n.gdpr : n)) &&
              'object' == typeof n
                ? ((0, i.isStr)(n.cmpApi)
                    ? (f = n.cmpApi)
                    : ((f = 'iab'),
                      (0, i.logInfo)(
                        'consentManagement config did not specify cmp.  Using system default setting (iab).',
                      )),
                  (0, i.isNumber)(n.timeout)
                    ? (m = n.timeout)
                    : ((m = 1e4),
                      (0, i.logInfo)(
                        'consentManagement config did not specify timeout.  Using system default setting (10000).',
                      )),
                  (v = (0, i.isNumber)(n.actionTimeout)
                    ? n.actionTimeout
                    : null),
                  (b = !0 === n.defaultGdprScope),
                  (0, i.logInfo)(
                    'consentManagement module has been activated...',
                  ),
                  'static' === f &&
                    ((0, i.isPlainObject)(n.consentData)
                      ? ((C = n.consentData),
                        null != C?.getTCData && (C = C.getTCData),
                        (m = 0))
                      : (0, i.logError)(
                          "consentManagement config with cmpApi: 'static' did not specify consentData. No consents will be available to adapters.",
                        )),
                  M || (0, o.m)().requestBids.before(P, 50),
                  (M = !0),
                  a.mW.enable(),
                  A())
                : (0, i.logWarn)(
                    'consentManagement (gdpr) config not defined, exiting consent manager',
                  );
            })(n.consentManagement),
          ),
            d.w.before(function (n, e) {
              return n(
                e.then((n) => {
                  const e = a.mW.getConsentData();
                  return (
                    e &&
                      ('boolean' == typeof e.gdprApplies &&
                        (0, r.J)(n, 'regs.ext.gdpr', e.gdprApplies ? 1 : 0),
                      (0, r.J)(n, 'user.ext.consent', e.consentString)),
                    n
                  );
                }),
              );
            }),
            (0, u.pS)({
              type: u.S3,
              name: 'gdprAddtlConsent',
              fn: function (n, e) {
                const t = e.gdprConsent?.addtlConsent;
                t &&
                  'string' == typeof t &&
                  (0, r.J)(
                    n,
                    'user.ext.ConsentedProvidersSettings.consented_providers',
                    t,
                  );
              },
            }),
            (0, o.E)('consentManagementTcf');
        },
      },
      (n) => {
        n.O(0, [60802, 57109, 51085], () => {
          return (e = 66117), n((n.s = e));
          var e;
        });
        n.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [98662],
      {
        86056: (n, t, e) => {
          var o = e(7873),
            a = e(91069),
            s = e(63172),
            i = e(43272),
            c = e(11445),
            r = e(16916),
            u = e(16894),
            l = e(16833),
            g = e(20687),
            f = e(20965);
          const d = 'iab';
          let m,
            p,
            P = d,
            b = 50,
            S = !1;
          const v = {
            iab: function (n) {
              let { onSuccess: t, onError: e } = n;
              let o = (function () {
                const n = {};
                return {
                  consentDataCallback: (o, a) => {
                    a && o.uspString && (n.usPrivacy = o.uspString),
                      n.usPrivacy
                        ? h(n, { onSuccess: t, onError: e })
                        : e('Unable to get USP consent string.');
                  },
                };
              })();
              const s = (0, f.c5)({
                apiName: '__uspapi',
                apiVersion: 1,
                apiArgs: ['command', 'version', 'callback'],
              });
              if (!s) return e('USP CMP not found.');
              s.isDirect
                ? (0, a.logInfo)(
                    'Detected USP CMP is directly accessible, calling it now...',
                  )
                : (0, a.logInfo)(
                    'Detected USP CMP is outside the current iframe where Prebid.js is located, calling it now...',
                  );
              s({ command: 'getUSPData', callback: o.consentDataCallback }),
                s({
                  command: 'registerDeletion',
                  callback: (n, t) =>
                    (null == t || t) && c.Ay.callDataDeletionRequest(n),
                }).catch((n) => {
                  (0, a.logError)('Error invoking CMP `registerDeletion`:', n);
                });
            },
            static: function (n) {
              let { onSuccess: t, onError: e } = n;
              h(m, { onSuccess: t, onError: e });
            },
          };
          function D(n) {
            let t = null,
              e = !1;
            function o(o, a) {
              if (
                (null != t && clearTimeout(t),
                (e = !0),
                r.t6.setConsentData(o),
                null != n)
              ) {
                for (
                  var s = arguments.length,
                    i = new Array(s > 2 ? s - 2 : 0),
                    c = 2;
                  c < s;
                  c++
                )
                  i[c - 2] = arguments[c];
                n(a, ...i);
              }
            }
            if (!v[P])
              return void o(
                null,
                `USP framework (${P}) is not a supported framework. Aborting consentManagement module and resuming auction.`,
              );
            const a = {
              onSuccess: o,
              onError: function (n) {
                for (
                  var t = arguments.length,
                    e = new Array(t > 1 ? t - 1 : 0),
                    a = 1;
                  a < t;
                  a++
                )
                  e[a - 1] = arguments[a];
                o(
                  null,
                  `${n} Resuming auction without consent data as per consentManagement config.`,
                  ...e,
                );
              },
            };
            v[P](a),
              e ||
                (0 === b
                  ? h(void 0, a)
                  : (t = setTimeout(
                      a.onError.bind(
                        null,
                        'USPAPI workflow exceeded timeout threshold.',
                      ),
                      b,
                    )));
          }
          const y = (0, u.Ak)('usp', function (n, t) {
            var e = this;
            S || U(),
              D(function (o) {
                if (null != o) {
                  for (
                    var s = arguments.length,
                      i = new Array(s > 1 ? s - 1 : 0),
                      c = 1;
                    c < s;
                    c++
                  )
                    i[c - 1] = arguments[c];
                  (0, a.logWarn)(o, ...i);
                }
                n.call(e, t);
              });
          });
          function h(n, t) {
            let { onSuccess: e, onError: o } = t;
            !n || !n.usPrivacy
              ? o('USPAPI returned unexpected value during lookup process.', n)
              : (!(function (n) {
                  n && n.usPrivacy && (p = n.usPrivacy);
                })(n),
                e(p));
          }
          function U() {
            let n =
              arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
            S ||
              ((0, a.logInfo)(
                'USPAPI consentManagement module has been activated' +
                  (n
                    ? ''
                    : ` using default values (api: '${P}', timeout: ${b}ms)`),
              ),
              (S = !0),
              r.t6.enable()),
              D();
          }
          i.$W.getConfig('consentManagement', (n) =>
            (function (n) {
              ((n = n && n.usp) && 'object' == typeof n) ||
                (0, a.logWarn)(
                  'consentManagement.usp config not defined, using defaults',
                ),
                n && (0, a.isStr)(n.cmpApi)
                  ? (P = n.cmpApi)
                  : ((P = d),
                    (0, a.logInfo)(
                      `consentManagement.usp config did not specify cmpApi. Using system default setting (${d}).`,
                    )),
                n && (0, a.isNumber)(n.timeout)
                  ? (b = n.timeout)
                  : ((b = 50),
                    (0, a.logInfo)(
                      'consentManagement.usp config did not specify timeout. Using system default setting (50).',
                    )),
                'static' === P &&
                  ((0, a.isPlainObject)(n.consentData) &&
                  (0, a.isPlainObject)(n.consentData.getUSPData)
                    ? (n.consentData.getUSPData.uspString &&
                        (m = { usPrivacy: n.consentData.getUSPData.uspString }),
                      (b = 0))
                    : (0, a.logError)(
                        "consentManagement config with cmpApi: 'static' did not specify consentData. No consents will be available to adapters.",
                      )),
                U(!0);
            })(n.consentManagement),
          ),
            (0, l.Yn)('requestBids').before(y, 50),
            g.w.before(function (n, t) {
              return n(
                t.then((n) => {
                  const t = r.t6.getConsentData();
                  return t && (0, s.J)(n, 'regs.ext.us_privacy', t), n;
                }),
              );
            }),
            (0, o.E)('consentManagementUsp');
        },
      },
      (n) => {
        n.O(0, [57109, 60802, 51085], () => {
          return (t = 86056), n((n.s = t));
          var t;
        });
        n.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [21829],
      {
        91493: (e, t, i) => {
          var a = i(7873),
            r = i(63172),
            n = i(70433),
            o = i(91069),
            s = i(57377),
            d = i(71371),
            p = i(12938),
            l = i(27934),
            c = i(68229),
            u = i(95789),
            m = i(63895),
            v = i(68044),
            g = i(89766),
            y = i(54406);
          const f = 'criteo',
            b =
              'https://grid-bidder.criteo.com/openrtb_2_5/pbjs/auction/request',
            h = (0, p.vM)({ bidderCode: f }),
            T = 'Criteo: ',
            I = (0, y.FE)(),
            A = 'https://static.criteo.net/js/ld/publishertag.renderer.js',
            k = 'cto_optout',
            x = 'cto_bundle',
            S = (0, g.A)({
              context: { netRevenue: !0, ttl: 60 },
              imp: function (e, t, i) {
                let a = e(t, i);
                const o = t.params;
                (a.tagid = t.adUnitCode),
                  (0, r.J)(a, 'ext', {
                    ...t.params.ext,
                    ...a.ext,
                    rwdd: a.rwdd,
                    floors: U(t),
                    bidder: {
                      publishersubid: o?.publisherSubId,
                      zoneid: o?.zoneId,
                      uid: o?.uid,
                    },
                  }),
                  delete a.rwdd,
                  !i.fledgeEnabled && a.ext.igs?.ae && delete a.ext.igs.ae;
                if (E(t)) {
                  const e = t.params.video;
                  void 0 !== e &&
                    (0, r.J)(a, 'video', {
                      ...a.video,
                      skip: a.video.skip || e.skip || 0,
                      placement: a.video.placement || e.placement,
                      minduration: a.video.minduration || e.minduration,
                      playbackmethod:
                        a.video.playbackmethod || e.playbackmethod,
                      startdelay: a.video.startdelay || e.startdelay || 0,
                    }),
                    (0, r.J)(a, 'video.ext', {
                      context: t.mediaTypes.video.context,
                      playersizes: R(
                        (0, n.A)(t, 'mediaTypes.video.playerSize'),
                        w,
                      ),
                      plcmt: t.mediaTypes.video.plcmt,
                      poddur: t.mediaTypes.video.adPodDurationSec,
                      rqddurs: t.mediaTypes.video.durationRangeSec,
                    });
                }
                if (a.native && void 0 !== a.native.request) {
                  let e = JSON.parse(a.native.request);
                  (e.assets &&
                    (1 !== e.assets.length ||
                      Object.keys(e.assets[0]).length)) ||
                    delete e.assets,
                    (0, r.J)(a, 'native.request_native', e),
                    delete a.native.request;
                }
                return a;
              },
              request: function (e, t, i, a) {
                let n = e(t, i, a);
                void 0 !== a.publisherId &&
                  (void 0 !== n.app
                    ? (0, r.J)(n, 'app.publisher.id', a.publisherId)
                    : (0, r.J)(n, 'site.publisher.id', a.publisherId));
                i &&
                  i.gdprConsent &&
                  (0, r.J)(n, 'regs.ext.gdprversion', i.gdprConsent.apiVersion);
                return (n = I(n)), n;
              },
              bidResponse: function (e, t, i) {
                (i.mediaType = (0, n.A)(t, 'ext.mediatype')),
                  i.mediaType === d.s6 &&
                    void 0 !== t.adm_native &&
                    ((t.adm = t.adm_native), delete t.adm_native);
                let a = e(t, i);
                const { bidRequest: o } = i;
                (a.currency = (0, n.A)(t, 'ext.cur')),
                  void 0 !== (0, n.A)(t, 'ext.meta') &&
                    (0, r.J)(a, 'meta', { ...a.meta, ...t.ext.meta });
                void 0 !== (0, n.A)(t, 'ext.paf.content_id') &&
                  (0, r.J)(a, 'meta.paf.content_id', t.ext.paf.content_id);
                a.mediaType === d.G_ &&
                  ((a.vastUrl = t.ext?.displayurl),
                  (0, n.A)(o, 'mediaTypes.video.context') === m.H6 &&
                    (a.renderer = (function (e) {
                      if (
                        void 0 === e.ext?.videoPlayerConfig ||
                        void 0 === e.ext?.videoPlayerType
                      )
                        return;
                      const t = { documentResolver: (e, t, i) => i ?? t },
                        i = (t, i) => {
                          let a = {
                              slotid: e.id,
                              vastUrl: e.ext?.displayurl,
                              vastXml: e.adm,
                              documentContext: i,
                            },
                            r = e.ext.videoPlayerConfig;
                          window.CriteoOutStream[e.ext.videoPlayerType].play(
                            a,
                            r,
                          );
                        },
                        a = u.A4.install({ url: A, config: t });
                      return a.setRender(i), a;
                    })(t)));
                return a;
              },
              response: function (e, t, i, a) {
                let o = e(t, i, a);
                const s = (0, n.A)(i, 'ext.paf.transmission');
                return (
                  o.bids.forEach((e) => {
                    void 0 !== s &&
                    void 0 !== (0, n.A)(e, 'meta.paf.content_id')
                      ? (0, r.J)(e, 'meta.paf.transmission', s)
                      : delete e.meta.paf;
                  }),
                  o
                );
              },
            });
          const P = {
            code: f,
            gvlid: 91,
            supportedMediaTypes: [d.D4, d.G_, d.s6],
            getUserSyncs: function (e, t, i, a) {
              let r =
                  arguments.length > 4 && void 0 !== arguments[4]
                    ? arguments[4]
                    : {},
                { gppString: n = '', applicableSections: o = [] } = r;
              const s = (0, l.EN)(),
                d = 'criteoPrebidAdapter';
              if (e.iframeEnabled && (0, c.C)(i)) {
                const e = [];
                if (
                  (e.push(`origin=${d}`),
                  e.push(`topUrl=${s.domain}`),
                  i &&
                    (i.gdprApplies &&
                      e.push('gdpr=' + (1 == i.gdprApplies ? 1 : 0)),
                    i.consentString &&
                      e.push(`gdpr_consent=${i.consentString}`)),
                  a && e.push(`us_privacy=${a}`),
                  e.push(`gpp=${n}`),
                  Array.isArray(o))
                )
                  for (const t of o) e.push(`gpp_sid=${t}`);
                const t = Math.random().toString(),
                  r = {
                    bundle: C(x),
                    cw: h.cookiesAreEnabled(),
                    lsw: h.localStorageIsEnabled(),
                    optoutCookie: C(k),
                    origin: d,
                    requestId: t,
                    tld: s.domain,
                    topUrl: s.domain,
                    version: '9.0.0'.replace(/\./g, '_'),
                  };
                window.addEventListener(
                  'message',
                  function e(i) {
                    if (!i.data || 'https://gum.criteo.com' != i.origin) return;
                    if (i.data.requestId !== t) return;
                    this.removeEventListener('message', e),
                      i.stopImmediatePropagation();
                    const a = i.data;
                    a.optout
                      ? (_(x), q(k, !0, 43200))
                      : a.bundle && q(x, a.bundle, 9360);
                  },
                  !0,
                );
                const p = JSON.stringify(r).replace(/"/g, '%22');
                return [
                  {
                    type: 'iframe',
                    url: `https://gum.criteo.com/syncframe?${e.join('&')}#${p}`,
                  },
                ];
              }
              if (e.pixelEnabled && (0, c.C)(i)) {
                const e = [];
                if (
                  (e.push('profile=207'),
                  i &&
                    (!0 === i.gdprApplies && e.push('gdprapplies=true'),
                    i.consentString && e.push(`gdpr=${i.consentString}`)),
                  a && e.push(`ccpa=${a}`),
                  e.push(`gpp=${n}`),
                  Array.isArray(o))
                )
                  for (const t of o) e.push(`gpp_sid=${t}`);
                return [
                  {
                    type: 'image',
                    url: `https://ssp-sync.criteo.com/user-sync/redirect?${e.join(
                      '&',
                    )}`,
                  },
                ];
              }
              return [];
            },
            isBidRequestValid: (e) =>
              !(!e || !e.params || (!e.params.zoneId && !e.params.networkId)) &&
              !(
                E(e) &&
                !(function (e) {
                  let t = !0;
                  return (
                    [
                      'mimes',
                      'playerSize',
                      'maxduration',
                      'protocols',
                      'api',
                      'skip',
                      'placement',
                      'playbackmethod',
                    ].forEach(function (i) {
                      void 0 === (0, n.A)(e, 'mediaTypes.video.' + i) &&
                        void 0 === (0, n.A)(e, 'params.video.' + i) &&
                        ((t = !1),
                        (0, o.logError)(
                          'Criteo Bid Adapter: mediaTypes.video.' +
                            i +
                            ' is required',
                        ));
                    }),
                    t
                  );
                })(e)
              ),
            buildRequests: (e, t) => {
              e.forEach((e) => {
                (function (e) {
                  return void 0 !== (0, n.A)(e, 'mediaTypes.native');
                })(e) &&
                  ((function (e) {
                    return !(
                      e.nativeParams &&
                      ((e.nativeParams.image &&
                        (!0 !== e.nativeParams.image.sendId ||
                          !0 === e.nativeParams.image.sendTargetingKeys)) ||
                        (e.nativeParams.icon &&
                          (!0 !== e.nativeParams.icon.sendId ||
                            !0 === e.nativeParams.icon.sendTargetingKeys)) ||
                        (e.nativeParams.clickUrl &&
                          (!0 !== e.nativeParams.clickUrl.sendId ||
                            !0 ===
                              e.nativeParams.clickUrl.sendTargetingKeys)) ||
                        (e.nativeParams.displayUrl &&
                          (!0 !== e.nativeParams.displayUrl.sendId ||
                            !0 ===
                              e.nativeParams.displayUrl.sendTargetingKeys)) ||
                        (e.nativeParams.privacyLink &&
                          (!0 !== e.nativeParams.privacyLink.sendId ||
                            !0 ===
                              e.nativeParams.privacyLink.sendTargetingKeys)) ||
                        (e.nativeParams.privacyIcon &&
                          (!0 !== e.nativeParams.privacyIcon.sendId ||
                            !0 ===
                              e.nativeParams.privacyIcon.sendTargetingKeys)))
                    );
                  })(e) ||
                    (0, o.logWarn)(
                      T +
                        'all native assets containing URL should be sent as placeholders with sendId(icon, image, clickUrl, displayUrl, privacyLink, privacyIcon)',
                    ),
                  null == (0, n.A)(e, 'nativeOrtbRequest.assets') &&
                    ((0, o.logWarn)(
                      T + 'native asset requirements are missing',
                    ),
                    (0, r.J)(e, 'nativeOrtbRequest.assets', [{}])));
              });
              const i = (function (e, t) {
                  const i = (0, o.parseUrl)(
                    t?.refererInfo?.topmostLocation,
                  ).search;
                  return {
                    url: t?.refererInfo?.page || '',
                    debug: '1' === i.pbt_debug,
                    noLog: '1' === i.pbt_nolog,
                    fledgeEnabled: t.paapi?.enabled,
                    amp: e.some((e) => 'amp' === e.params.integrationMode),
                    networkId: e.find((e) => e.params?.networkId)?.params
                      .networkId,
                    publisherId: e.find((e) => e.params?.pubid)?.params.pubid,
                  };
                })(e, t),
                a = (function (e) {
                  let t = b;
                  (t += '?profileId=207'),
                    (t += '&av=' + String(37)),
                    (t += '&wv=' + encodeURIComponent('9.0.0')),
                    (t +=
                      '&cb=' + String(Math.floor(99999999999 * Math.random()))),
                    h.localStorageIsEnabled()
                      ? (t += '&lsavail=1')
                      : (t += '&lsavail=0');
                  e.amp && (t += '&im=1');
                  e.debug && (t += '&debug=1');
                  e.noLog && (t += '&nolog=1');
                  const i = C(x);
                  i && (t += `&bundle=${i}`);
                  C(k) && (t += '&optout=1');
                  e.networkId && (t += '&networkId=' + e.networkId);
                  return t;
                })(i),
                s = S.toORTB({ bidderRequest: t, bidRequests: e, context: i });
              if (s) return { method: 'POST', url: a, data: s, bidRequests: e };
            },
            interpretResponse: (e, t) => {
              if (void 0 === e?.body) return [];
              const i =
                  S.fromORTB({ response: e.body, request: t.data }).bids || [],
                a = (0, n.A)(e.body, 'ext.igi')
                  ?.filter((e) => (0, o.isArray)(e?.igs))
                  .flatMap((e) => e.igs);
              return a?.length ? { bids: i, paapi: a } : i;
            },
            onDataDeletionRequest: (e) => {
              const t = C(x);
              t &&
                (_(x),
                (0, v.RD)(
                  'https://privacy.criteo.com/api/privacy/datadeletionrequest',
                  null,
                  JSON.stringify({ publisherUserId: t }),
                  { contentType: 'application/json', method: 'POST' },
                ));
            },
          };
          function C(e) {
            const t = h.getCookie(e),
              i = h.getDataFromLocalStorage(e);
            return t || i || void 0;
          }
          function q(e, t, i) {
            const a = new Date();
            a.setTime(a.getTime() + 60 * i * 60 * 1e3);
            const r = `expires=${a.toUTCString()}`;
            h.setCookie(e, t, r), h.setDataInLocalStorage(e, t);
          }
          function _(e) {
            h.setCookie(e, '', 0), h.removeDataFromLocalStorage(e);
          }
          function R(e) {
            let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : (e) => e;
            return null == e
              ? []
              : Array.isArray(e[0])
                ? e.map((e) => t(e))
                : [t(e)];
          }
          function w(e) {
            return e[0] + 'x' + e[1];
          }
          function E(e) {
            return void 0 !== (0, n.A)(e, 'mediaTypes.video');
          }
          function U(e) {
            try {
              const t = {},
                i = (function (e) {
                  if (e.getFloor) return e.getFloor;
                  if (e.params.bidFloor && e.params.bidFloorCur)
                    try {
                      const t = parseFloat(e.params.bidFloor);
                      return () => ({
                        currency: e.params.bidFloorCur,
                        floor: t,
                      });
                    } catch {}
                })(e);
              if (i) {
                if (e.mediaTypes?.banner) {
                  t.banner = {};
                  R((0, n.A)(e, 'mediaTypes.banner.sizes')).forEach(
                    (a) =>
                      (t.banner[w(a).toString()] = i.call(e, {
                        size: a,
                        mediaType: d.D4,
                      })),
                  );
                }
                if (e.mediaTypes?.video) {
                  t.video = {};
                  R((0, n.A)(e, 'mediaTypes.video.playerSize')).forEach(
                    (a) =>
                      (t.video[w(a).toString()] = i.call(e, {
                        size: a,
                        mediaType: d.G_,
                      })),
                  );
                }
                return (
                  e.mediaTypes?.native &&
                    ((t.native = {}),
                    (t.native['*'] = i.call(e, {
                      size: '*',
                      mediaType: d.s6,
                    }))),
                  t
                );
              }
            } catch (e) {
              (0, o.logError)('Could not parse floors from Prebid: ' + e);
            }
          }
          (0, s.a$)(P), (0, a.E)('criteoBidAdapter');
        },
      },
      (e) => {
        e.O(0, [60802, 58498, 15889, 51085], () => {
          return (t = 91493), e((e.s = t));
          var t;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [56466],
      {
        19236: (e, r, n) => {
          var o = n(7873),
            t = n(91069),
            c = n(78969),
            i = n(68044),
            s = n(43272),
            u = n(16833),
            f = n(25555),
            a = n(1e3),
            l = n(16894),
            d = n(75023);
          const y = 4;
          let g,
            v = [],
            p = {},
            C = !1,
            h = !0,
            $ = 'USD';
          var R = !1,
            b = {};
          let I,
            N = {},
            O = (0, f.v)();
          function S(e) {
            if (
              ((g =
                'https://cdn.jsdelivr.net/gh/prebid/currency-file@1/latest.json?date=$$TODAY$$'),
              'object' == typeof e.rates &&
                ((b.conversions = e.rates), (C = !0), (h = !1)),
              'object' == typeof e.defaultRates &&
                ((I = e.defaultRates), (b.conversions = I), (C = !0)),
              'string' == typeof e.adServerCurrency)
            ) {
              (0, t.logInfo)('enabling currency support', arguments),
                ($ = e.adServerCurrency),
                e.conversionRateFile &&
                  ((0, t.logInfo)(
                    'currency using override conversionRateFile:',
                    e.conversionRateFile,
                  ),
                  (g = e.conversionRateFile));
              const r = g.indexOf('$$TODAY$$');
              if (-1 !== r) {
                const e = new Date();
                let n = `${e.getMonth() + 1}`,
                  o = `${e.getDate()}`;
                n.length < 2 && (n = `0${n}`), o.length < 2 && (o = `0${o}`);
                const t = `${e.getFullYear()}${n}${o}`;
                g = `${g.substring(0, r)}${t}${g.substring(r + 9, g.length)}`;
              }
              (p = {}),
                R ||
                  ((R = !0),
                  ((0, o.m)().convertCurrency = (e, r, n) =>
                    parseFloat(e) * Y(r, n)),
                  (0, u.Yn)('addBidResponse').before(D, 100),
                  (0, u.Yn)('responsesReady').before(U),
                  (0, d.on)(c.qY.AUCTION_TIMEOUT, w),
                  (0, d.on)(c.qY.AUCTION_INIT, m),
                  m());
            } else
              (0, t.logInfo)('disabling currency support'),
                R &&
                  ((0, u.Yn)('addBidResponse').getHooks({ hook: D }).remove(),
                  (0, u.Yn)('responsesReady').getHooks({ hook: U }).remove(),
                  (0, d.off)(c.qY.AUCTION_TIMEOUT, w),
                  (0, d.off)(c.qY.AUCTION_INIT, m),
                  delete (0, o.m)().convertCurrency,
                  ($ = 'USD'),
                  (p = {}),
                  (R = !1),
                  (C = !1),
                  (h = !0),
                  (b = {}),
                  (N = {}),
                  (O = (0, f.v)()));
            'object' == typeof e.bidderCurrencyDefault &&
              (N = e.bidderCurrencyDefault);
          }
          function T(e) {
            I
              ? ((0, t.logWarn)(e),
                (0, t.logWarn)(
                  'Currency failed loading rates, falling back to currency.defaultRates',
                ))
              : (0, t.logError)(e);
          }
          function m() {
            h
              ? ((h = !1),
                (C = !1),
                (0, i.RD)(g, {
                  success: function (e) {
                    try {
                      (b = JSON.parse(e)),
                        (0, t.logInfo)(
                          'currencyRates set to ' + JSON.stringify(b),
                        ),
                        (p = {}),
                        (C = !0),
                        E();
                    } catch (r) {
                      T('Failed to parse currencyRates response: ' + e);
                    }
                  },
                  error: function () {
                    T(...arguments), (C = !0), E(), (h = !0);
                  },
                }))
              : E();
          }
          function U(e, r) {
            e(r.then(() => O.promise));
          }
          s.$W.getConfig('currency', (e) => S(e.currency));
          const D = (0, l.NL)('currency', function (e, r, n, o) {
            if (!n) return e.call(this, r, n, o);
            let c = n.bidderCode || n.bidder;
            if (N[c]) {
              let e = N[c];
              n.currency && e !== n.currency
                ? (0, t.logWarn)(
                    `Currency default '${c}: ${e}' ignored. adapter specified '${n.currency}'`,
                  )
                : (n.currency = e);
            }
            if (
              (n.currency ||
                ((0, t.logWarn)(
                  'Currency not specified on bid.  Defaulted to "USD"',
                ),
                (n.currency = 'USD')),
              (n.getCpmInNewCurrency = function (e) {
                return (parseFloat(this.cpm) * Y(this.currency, e)).toFixed(3);
              }),
              n.currency === $)
            )
              return e.call(this, r, n, o);
            v.push([e, this, r, n, o]), (R && !C) || E();
          });
          function w(e) {
            let { auctionId: r } = e;
            v = v.filter((e) => {
              let [n, o, t, i, s] = e;
              if (i.auctionId !== r) return !0;
              s(c.Tf.CANNOT_CONVERT_CURRENCY);
            });
          }
          function E() {
            for (; v.length > 0; ) {
              const [e, r, n, o, i] = v.shift();
              if (void 0 !== o && 'currency' in o && 'cpm' in o) {
                let e = o.currency;
                try {
                  let r = Y(e);
                  1 !== r &&
                    ((o.cpm = (parseFloat(o.cpm) * r).toFixed(4)),
                    (o.currency = $));
                } catch (e) {
                  (0, t.logWarn)('getCurrencyConversion threw error: ', e),
                    i(c.Tf.CANNOT_CONVERT_CURRENCY);
                  continue;
                }
              }
              e.call(r, n, o, i);
            }
            O.resolve();
          }
          function Y(e) {
            let r =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : $;
            var n,
              o = null;
            let c = `${e}->${r}`;
            if (c in p)
              (o = p[c]),
                (0, t.logMessage)(
                  'Using conversionCache value ' + o + ' for ' + c,
                );
            else if (!1 === R) {
              if ('USD' !== e)
                throw new Error(
                  'Prebid currency support has not been enabled and fromCurrency is not USD',
                );
              o = 1;
            } else if (e === r) o = 1;
            else if (e in b.conversions) {
              if (!(r in (n = b.conversions[e])))
                throw new Error(
                  "Specified adServerCurrency in config '" +
                    r +
                    "' not found in the currency rates file",
                );
              (o = n[r]),
                (0, t.logInfo)(
                  'getCurrencyConversion using direct ' +
                    e +
                    ' to ' +
                    r +
                    ' conversionRate ' +
                    o,
                );
            } else if (r in b.conversions) {
              if (!(e in (n = b.conversions[r])))
                throw new Error(
                  "Specified fromCurrency '" +
                    e +
                    "' not found in the currency rates file",
                );
              (o = F(1 / n[e], y)),
                (0, t.logInfo)(
                  'getCurrencyConversion using reciprocal ' +
                    e +
                    ' to ' +
                    r +
                    ' conversionRate ' +
                    o,
                );
            } else {
              var i = Object.keys(b.conversions)[0];
              if (!(e in b.conversions[i]))
                throw new Error(
                  "Specified fromCurrency '" +
                    e +
                    "' not found in the currency rates file",
                );
              var s = 1 / b.conversions[i][e];
              if (!(r in b.conversions[i]))
                throw new Error(
                  "Specified adServerCurrency in config '" +
                    r +
                    "' not found in the currency rates file",
                );
              (o = F(s * b.conversions[i][r], y)),
                (0, t.logInfo)(
                  'getCurrencyConversion using intermediate ' +
                    e +
                    ' thru ' +
                    i +
                    ' to ' +
                    r +
                    ' conversionRate ' +
                    o,
                );
            }
            return (
              c in p ||
                ((0, t.logMessage)(
                  'Adding conversionCache value ' + o + ' for ' + c,
                ),
                (p[c] = o)),
              o
            );
          }
          function F(e, r) {
            var n = 1;
            for (let e = 0; e < r; e++) n += '0';
            return Math.round(e * n) / n;
          }
          (0, a.pS)({
            type: a.S3,
            name: 'currency',
            fn: function (e, r, n) {
              R && (e.cur = e.cur || [n.currency || $]);
            },
          }),
            (0, o.E)('currency');
        },
      },
      (e) => {
        e.O(0, [60802, 51085], () => {
          return (r = 19236), e((e.s = r));
          var r;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [36050],
      {
        96480: (e, t, r) => {
          var n = r(7873),
            a = r(10201),
            i = r(97779),
            s = r(91069),
            o = r(70433),
            l = r(43272),
            d = r(16833),
            c = r(67314),
            u = r(16916),
            p = r(75023),
            m = r(78969),
            b = r(51692),
            f = r(27934),
            g = r(73858),
            h = r(25246);
          const y = { ri: f.EN };
          function _(e, t, r) {
            return (
              (0, o.A)(t, `${r}.description_url`) ||
              encodeURIComponent(y.ri().page)
            );
          }
          function A(e, t, r) {
            const n = (e && e.adserverTargeting) || {};
            let a = {};
            const l = t && t.adUnit;
            if (l) {
              let e = i.iS.getAllTargeting(l.code);
              a = e ? e[l.code] : {};
            }
            const d = Object.assign(
              {},
              { hb_uuid: e && e.videoCacheKey },
              { hb_cache_id: e && e.videoCacheKey },
              a,
              n,
            );
            p.emit(m.qY.SET_TARGETING, { [l.code]: d });
            const c = (0, o.A)(t, 'params.cust_params'),
              u = Object.assign({}, d, c);
            let b = encodeURIComponent((0, s.formatQS)(u));
            return r && (b = r + '%26' + b), b;
          }
          l.$W.getConfig('brandCategoryTranslation.translationFile') &&
            (0, d.Yn)('registerAdserver').before(function (e) {
              e.call(this, 'dfp');
            }),
            (0, a.U)('dfp', {
              buildVideoUrl: function (e) {
                if (!e.params && !e.url)
                  return void (0, s.logError)(
                    'A params object or a url is required to use pbjs.adServers.dfp.buildVideoUrl',
                  );
                const t = e.adUnit,
                  r = e.bid || i.iS.getWinningBids(t.code)[0];
                let n = {};
                if (
                  e.url &&
                  ((n = (0, s.parseUrl)(e.url, { noDecodeWholeURL: !0 })),
                  (0, s.isEmpty)(e.params))
                )
                  return (function (e, t, r) {
                    const n = _(t, e, 'search');
                    n && (e.search.description_url = n);
                    return (
                      (e.search.cust_params = A(t, r, e.search.cust_params)),
                      (0, s.buildUrl)(e)
                    );
                  })(n, r, e);
                const a = {
                    correlator: Date.now(),
                    sz: (0, s.parseSizesInput)(
                      (0, o.A)(t, 'mediaTypes.video.playerSize'),
                    ).join('|'),
                    url: encodeURIComponent(location.href),
                  },
                  l = n.search,
                  d = l && l.sz;
                d && (a.sz = d + '|' + a.sz);
                let p = A(r, e, l && l.cust_params);
                const m = Object.assign({}, h.M, n.search, a, e.params, {
                    cust_params: p,
                  }),
                  f = _(r, e, 'params');
                f && (m.description_url = f);
                const y = u.mW.getConsentData();
                if (
                  (y &&
                    ('boolean' == typeof y.gdprApplies &&
                      (m.gdpr = Number(y.gdprApplies)),
                    y.consentString && (m.gdpr_consent = y.consentString),
                    y.addtlConsent && (m.addtl_consent = y.addtlConsent)),
                  !m.ppid)
                ) {
                  const e = (0, b.Q)();
                  null != e && (m.ppid = e);
                }
                const v = e.adUnit?.mediaTypes?.video;
                Object.entries({
                  plcmt: () => v?.plcmt,
                  min_ad_duration: () =>
                    (0, s.isNumber)(v?.minduration)
                      ? 1e3 * v.minduration
                      : null,
                  max_ad_duration: () =>
                    (0, s.isNumber)(v?.maxduration)
                      ? 1e3 * v.maxduration
                      : null,
                  vpos() {
                    const e = v?.startdelay;
                    if ((0, s.isNumber)(e))
                      return -2 === e
                        ? 'postroll'
                        : -1 === e || e > 0
                          ? 'midroll'
                          : 'preroll';
                  },
                  vconp: () =>
                    Array.isArray(v?.playbackmethod) &&
                    v.playbackmethod.every((e) => 7 === e)
                      ? '2'
                      : void 0,
                  vpa() {
                    if (Array.isArray(v?.playbackmethod)) {
                      const e = v.playbackmethod.some((e) => 3 === e),
                        t = v.playbackmethod.some((e) =>
                          [1, 2, 4, 5, 6].includes(e),
                        );
                      if (e && !t) return 'click';
                      if (t && !e) return 'auto';
                    }
                  },
                  vpmute() {
                    if (Array.isArray(v?.playbackmethod)) {
                      const e = v.playbackmethod.some((e) =>
                          [2, 6].includes(e),
                        ),
                        t = v.playbackmethod.some((e) =>
                          [1, 3, 4, 5].includes(e),
                        );
                      if (e && !t) return '1';
                      if (t && !e) return '0';
                    }
                  },
                }).forEach((e) => {
                  let [t, r] = e;
                  if (!m.hasOwnProperty(t)) {
                    const e = r();
                    null != e && (m[t] = e);
                  }
                });
                const C =
                  c.n.index.getBidRequest(e.bid || {})?.ortb2 ??
                  c.n.index.getAuction(e.bid || {})?.getFPD()?.global;
                function U(e, t) {
                  return e
                    .flatMap((e) => (0, o.A)(C, e) || [])
                    .filter((e) => e.ext?.segtax === t)
                    .flatMap((e) => e.segment?.map((e) => e.id))
                    .filter((e) => e)
                    .filter(s.uniques);
                }
                const j = Object.entries({
                  IAB_AUDIENCE_1_1: U(['user.data'], 4),
                  IAB_CONTENT_2_2: U(
                    g.Dy.map((e) => `${e}.content.data`),
                    6,
                  ),
                })
                  .map((e) => {
                    let [t, r] = e;
                    return r.length ? { taxonomy: t, values: r } : null;
                  })
                  .filter((e) => e);
                return (
                  j.length &&
                    (m.ppsj = btoa(
                      JSON.stringify({ PublisherProvidedTaxonomySignals: j }),
                    )),
                  (0, s.buildUrl)(Object.assign({}, h.P, n, { search: m }))
                );
              },
            }),
            (0, n.E)('dfpAdServerVideo');
        },
      },
      (e) => {
        e.O(0, [60802, 47650, 51085], () => {
          return (t = 96480), e((e.s = t));
          var t;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [99301],
      {
        11057: (n, e, s) => {
          var t = s(7873),
            a = s(43272),
            l = s(77274);
          let p = !1;
          a.$W.getConfig('consentManagement', (n) => {
            null == n?.consentManagement?.gpp ||
              p ||
              ((0, l.l)('usnat', [7]), (p = !0));
          }),
            (0, t.E)('gppControl_usnat');
        },
      },
      (n) => {
        n.O(0, [40082, 60802, 51085], () => {
          return (e = 11057), n((n.s = e));
          var e;
        });
        n.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [4584],
      {
        84232: (t, e, o) => {
          var a = o(7873),
            d = o(91069),
            s = o(63172),
            n = o(70433),
            r = o(43272),
            c = o(16833),
            i = o(15901);
          let l = {},
            u = !1;
          const p = (t) =>
            (r.$W.getConfig('gptPreAuction') || {}).mcmEnabled
              ? t.replace(/(^\/\d*),\d*\//, '$1/')
              : t;
          function b(t) {
            (0, d.logWarn)(
              'pbadslot is deprecated and will soon be removed, use gpid instead',
              t,
            );
          }
          const f = function (t, e) {
              ((t) => {
                const { customGptSlotMatching: e } = l;
                if (!(0, d.isGptPubadsDefined)()) return;
                const o = t.reduce(
                  (t, e) => (
                    (t[e.code] = t[e.code] || []), t[e.code].push(e), t
                  ),
                  {},
                );
                window.googletag
                  .pubads()
                  .getSlots()
                  .forEach((t) => {
                    const a = (0, i.I6)(
                      Object.keys(o),
                      e ? e(t) : (0, d.isAdUnitCodeMatchingSlot)(t),
                    );
                    if (a) {
                      const e = { name: 'gam', adslot: p(t.getAdUnitPath()) };
                      o[a].forEach((t) => {
                        (0, s.J)(
                          t,
                          'ortb2Imp.ext.data.adserver',
                          Object.assign({}, t.ortb2Imp?.ext?.data?.adserver, e),
                        );
                      });
                    }
                  });
              })(e);
              const { useDefaultPreAuction: o, customPreAuction: a } = l;
              e.forEach((t) => {
                (t.ortb2Imp = t.ortb2Imp || {}),
                  (t.ortb2Imp.ext = t.ortb2Imp.ext || {}),
                  (t.ortb2Imp.ext.data = t.ortb2Imp.ext.data || {});
                const e = t.ortb2Imp.ext;
                if (a || o) {
                  e.data?.pbadslot && b(t);
                  let s,
                    r = (0, n.A)(e, 'data.adserver.adslot');
                  a
                    ? (s = a(t, r))
                    : o &&
                      (s = ((t, e) => {
                        const o = t.ortb2Imp.ext.data;
                        if (o.pbadslot) return o.pbadslot;
                        if ((0, d.isGptPubadsDefined)()) {
                          var a = window.googletag
                            .pubads()
                            .getSlots()
                            .filter((t) => t.getAdUnitPath() === e);
                          if (0 !== a.length)
                            return 1 === a.length ? e : `${e}#${t.code}`;
                        }
                      })(t, r)),
                    s && (e.gpid = e.data.pbadslot = s);
                } else {
                  b(t);
                  const o = ((t) => {
                    const e = t.ortb2Imp.ext.data,
                      { customPbAdSlot: o } = l;
                    if (!e.pbadslot)
                      if (o)
                        e.pbadslot = o(t.code, (0, n.A)(e, 'adserver.adslot'));
                      else {
                        try {
                          const o = document.getElementById(t.code);
                          if (o.dataset.adslotid)
                            return void (e.pbadslot = o.dataset.adslotid);
                        } catch (t) {}
                        if (!(0, n.A)(e, 'adserver.adslot'))
                          return (e.pbadslot = t.code), !0;
                        e.pbadslot = e.adserver.adslot;
                      }
                  })(t);
                  e.gpid || o || (e.gpid = e.data.pbadslot);
                }
              });
              for (
                var r = arguments.length,
                  c = new Array(r > 2 ? r - 2 : 0),
                  u = 2;
                u < r;
                u++
              )
                c[u - 2] = arguments[u];
              return t.call(undefined, e, ...c);
            },
            g = (t) => {
              (l = (0, d.pick)(t, [
                'enabled',
                (t) => !1 !== t,
                'customGptSlotMatching',
                (t) => 'function' == typeof t && t,
                'customPbAdSlot',
                (t) => 'function' == typeof t && t,
                'customPreAuction',
                (t) => 'function' == typeof t && t,
                'useDefaultPreAuction',
                (t) => t ?? !0,
              ])),
                l.enabled
                  ? u || ((0, c.Yn)('makeBidRequests').before(f), (u = !0))
                  : ((0, d.logInfo)('GPT Pre-Auction: Turning off module'),
                    (l = {}),
                    (0, c.Yn)('makeBidRequests').getHooks({ hook: f }).remove(),
                    (u = !1));
            };
          r.$W.getConfig('gptPreAuction', (t) => g(t.gptPreAuction)),
            g({}),
            (0, a.E)('gptPreAuction');
        },
      },
      (t) => {
        t.O(0, [60802, 51085], () => {
          return (e = 84232), t((t.s = e));
          var e;
        });
        t.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [45401],
      {
        15449: (e, t, r) => {
          var n = r(7873),
            s = r(91069),
            i = r(70433),
            o = r(68044),
            d = r(57377),
            a = r(95789),
            p = r(71371),
            c = r(43272),
            l = r(12938);
          const u = 'grid',
            g = 'https://grid.bidswitch.net/hbjson',
            m = 'https://x.bidswitch.net/sync?ssp=themediagrid',
            b = 'tmguid',
            f = 'https://acdn.adnxs.com/video/outstream/ANOutstreamVideo.js',
            h = (0, l.vM)({ bidderCode: u }),
            y = 'Bid from response has no adid parameter - ',
            x = 'Bid from response has no adm parameter - ',
            S = 'Array of bid objects is empty',
            v = 'Seatbid array from response has empty item',
            w = 'Response is empty',
            A = 'Response has empty seatbid array',
            R = 'Seatbid from response has no array of bid objects - ',
            I = {
              trustx: {
                endpoint: 'https://grid.bidswitch.net/hbjson?sp=trustx',
                syncurl: 'https://x.bidswitch.net/sync?ssp=themediagrid',
                bidResponseExternal: { netRevenue: !1 },
              },
              gridNM: { defaultParams: { multiRequest: !0 } },
            };
          let j = !1;
          const E = {
            code: u,
            gvlid: 686,
            aliases: [
              'playwire',
              'adlivetech',
              'gridNM',
              { code: 'trustx', skipPbsAliasing: !0 },
            ],
            supportedMediaTypes: [p.D4, p.G_],
            isBidRequestValid: function (e) {
              return e && Boolean(e.params.uid || e.params.secid);
            },
            buildRequests: function (e, t) {
              if (!e.length) return null;
              let r = null,
                n = null,
                o = null,
                d = null,
                a = null,
                l = null,
                u = null,
                m = !1,
                {
                  bidderRequestId: f,
                  gdprConsent: y,
                  uspConsent: x,
                  timeout: S,
                  refererInfo: v,
                  gppConsent: w,
                } = t || {};
              const A = v ? encodeURIComponent(v.page) : '',
                R = parseInt(S) || null,
                j = [],
                E = {},
                O = [],
                T = [],
                _ = [];
              e.forEach((e) => {
                const i = { bid: e, savedPrebidBid: null };
                if (!e.params.uid && !e.params.secid) return;
                f || (f = e.bidderRequestId),
                  o || (o = e.schain),
                  d || (d = e.userIdAsEids),
                  u || (u = I[e.bidder] && I[e.bidder].endpoint);
                const {
                    params: a,
                    mediaTypes: c,
                    bidId: l,
                    adUnitCode: g,
                    rtd: b,
                    ortb2Imp: h,
                  } = e,
                  { defaultParams: y } = I[e.bidder] || {},
                  {
                    secid: x,
                    pubid: S,
                    source: v,
                    uid: w,
                    keywords: k,
                    forceBidder: D,
                    multiRequest: N,
                    content: C,
                    video: P,
                  } = { ...y, ...a },
                  z = (function (e, t) {
                    const r = e.video ? 'video' : 'banner';
                    let n =
                      parseFloat(t.params.bidFloor || t.params.floorcpm || 0) ||
                      null;
                    if ('function' == typeof t.getFloor) {
                      const e = t.getFloor({
                        currency: 'USD',
                        mediaType: r,
                        size: t.sizes.map((e) => {
                          let [t, r] = e;
                          return { w: t, h: r };
                        }),
                      });
                      'object' != typeof e ||
                        'USD' !== e.currency ||
                        isNaN(parseFloat(e.floor)) ||
                        (n = Math.max(n, parseFloat(e.floor)));
                    }
                    return n;
                  })(c || {}, e),
                  B = b && b.jwplayer && b.jwplayer.targeting;
                B && !n && B.content && (n = B.content);
                let q = {
                  id: l.toString(),
                  tagid: (x || w).toString(),
                  ext: { divid: g.toString() },
                };
                if (
                  (h &&
                    (h.instl && (q.instl = parseInt(h.instl) || null),
                    h.ext &&
                      ((q.ext.gpid =
                        h.ext.gpid?.toString() ||
                        h.ext.data?.pbadslot?.toString() ||
                        h.ext.data?.adserver?.adslot?.toString()),
                      h.ext.data && (q.ext.data = h.ext.data))),
                  (0, s.isEmpty)(k) ||
                    (r || (r = k), (q.ext.bidder = { keywords: k })),
                  z && (q.bidfloor = z),
                  !c || c[p.D4])
                ) {
                  const t = (function (e, t) {
                    const r = t.sizes || e.sizes;
                    if (!r || !r.length) return;
                    let n = r.map((e) =>
                        (0, s.parseGPTSingleSizeArrayToRtbSize)(e),
                      ),
                      i = (0, s.parseGPTSingleSizeArrayToRtbSize)(r[0]);
                    n.length && (i.format = n);
                    return i;
                  })(e, c ? c[p.D4] : {});
                  t && (q.banner = t);
                }
                if (c && c[p.G_]) {
                  const t = (function (e, t, r) {
                    const {
                      mind: n,
                      maxd: i,
                      size: o,
                      playerSize: d,
                      protocols: a,
                      durationRangeSec: p = [],
                      ...c
                    } = { ...t, ...e };
                    if (o && (0, s.isStr)(o)) {
                      const e = o.split('x');
                      2 === e.length &&
                        parseInt(e[0]) &&
                        parseInt(e[1]) &&
                        ((c.w = parseInt(e[0])), (c.h = parseInt(e[1])));
                    }
                    if (!c.w || !c.h) {
                      const e = ((d || r || []).toString().match(/^\d+,\d+/) ||
                          [])[0],
                        t = e && e.split(',').map((e) => parseInt(e));
                      t &&
                        2 === t.length &&
                        Object.assign(
                          c,
                          (0, s.parseGPTSingleSizeArrayToRtbSize)(t),
                        );
                    }
                    if (!c.w || !c.h) return;
                    const l = n || p[0] || parseInt(c.minduration) || null,
                      u = i || p[1] || parseInt(c.maxduration) || null;
                    l && (c.minduration = l);
                    u && (c.maxduration = u);
                    a && a.length && (c.protocols = a);
                    return c;
                  })(P, c[p.G_], e.sizes);
                  t && (q.video = t);
                }
                if (q.banner || q.video)
                  if (N) {
                    const r = {
                      tid: t?.ortb2?.source?.tid?.toString?.(),
                      ext: { wrapper: 'Prebid_js', wrapper_version: '9.0.0' },
                    };
                    e.schain && (r.ext.schain = e.schain);
                    const n = {
                      id: e.bidderRequestId && e.bidderRequestId.toString(),
                      site: { page: A },
                      tmax: R,
                      source: r,
                      imp: [q],
                    };
                    S && (n.site.publisher = { id: S });
                    const s = C || (B && B.content);
                    s && (n.site.content = s), O.push(n), T.push(v), _.push(i);
                  } else (E[l] = i), j.push(q);
                !m && D && I[D] && (m = D);
              }),
                (m = c.$W.getConfig('forceBidderName') || m),
                m && I[m] && ((u = I[m].endpoint), (this.forceBidderName = m));
              const k = {
                tid: t?.ortb2?.source?.tid?.toString?.(),
                ext: { wrapper: 'Prebid_js', wrapper_version: '9.0.0' },
              };
              o && (k.ext.schain = o);
              const D =
                j.length || !O.length
                  ? {
                      id: f && f.toString(),
                      site: { page: A },
                      tmax: R,
                      source: k,
                      imp: j,
                    }
                  : null;
              return (
                n && (D.site.content = n),
                [...O, D].forEach((e) => {
                  if (!e) return;
                  a = null;
                  const n = (0, i.A)(t, 'ortb2.user.data');
                  n && n.length && (a = { data: [...n] }),
                    y && y.consentString && (l = { consent: y.consentString });
                  const o = (0, i.A)(t, 'ortb2.user.ext.device');
                  o && ((l = l || {}), (l.device = { ...o })),
                    d && d.length && ((l = l || {}), (l.eids = [...d])),
                    l && Object.keys(l).length && ((a = a || {}), (a.ext = l));
                  const p =
                    h.getDataFromLocalStorage(b) ||
                    (function () {
                      if (c.$W.getConfig('localStorageWriteAllowed')) {
                        const e = (0, s.generateUUID)().replace(/-/g, '');
                        return h.setDataInLocalStorage(b, e), e;
                      }
                      return null;
                    })();
                  p && ((a = a || {}), (a.id = p.toString())),
                    a && (e.user = a);
                  const u = (0, i.A)(t, 'ortb2.user.keywords') || null,
                    g = (0, i.A)(t, 'ortb2.site.keywords') || null;
                  u &&
                    ((r = r || {}),
                    (r.user = r.user || {}),
                    (r.user.ortb2 = [
                      { name: 'keywords', keywords: u.split(',') },
                    ])),
                    g &&
                      ((r = r || {}),
                      (r.site = r.site || {}),
                      (r.site.ortb2 = [
                        { name: 'keywords', keywords: g.split(',') },
                      ])),
                    r &&
                      ((r = (function (e) {
                        const t = {};
                        return (
                          Object.keys(e).forEach((r) => {
                            const n = e[r];
                            if (n)
                              if ('site' === r || 'user' === r) {
                                const e = {};
                                Object.keys(n).forEach((t) => {
                                  if (Array.isArray(n[t])) {
                                    const r = [];
                                    n[t].forEach((e) => {
                                      if ('object' == typeof e && e.name) {
                                        const t = {
                                          name: e.name,
                                          segments: [],
                                        };
                                        Object.keys(e).forEach((r) => {
                                          Array.isArray(e[r]) &&
                                            e[r].forEach((e) => {
                                              e &&
                                                ('string' == typeof e
                                                  ? t.segments.push({
                                                      name: r,
                                                      value: e,
                                                    })
                                                  : 'segments' === r &&
                                                    'string' == typeof e.name &&
                                                    'string' ==
                                                      typeof e.value &&
                                                    t.segments.push(e));
                                            });
                                        }),
                                          t.segments.length && r.push(t);
                                      }
                                    }),
                                      r.length && (e[t] = r);
                                  }
                                }),
                                  (t[r] = e);
                              } else t[r] = n;
                          }),
                          Object.keys(t).length && t
                        );
                      })(r)),
                      r && (e.ext = { keywords: r })),
                    y &&
                      y.gdprApplies &&
                      (e.regs = { ext: { gdpr: y.gdprApplies ? 1 : 0 } });
                  const m = (0, i.A)(t, 'ortb2.regs') || {};
                  if (w || m?.gpp) {
                    const t = {
                      gpp: w?.gppString ?? m?.gpp,
                      gpp_sid: w?.applicableSections ?? m?.gpp_sid,
                    };
                    e.regs = (0, s.mergeDeep)(e?.regs ?? {}, t);
                  }
                  x &&
                    (e.regs || (e.regs = { ext: {} }),
                    e.regs.ext || (e.regs.ext = {}),
                    (e.regs.ext.us_privacy = x)),
                    !0 === c.$W.getConfig('coppa') &&
                      (e.regs || (e.regs = {}), (e.regs.coppa = 1)),
                    m?.ext?.dsa &&
                      (e.regs || (e.regs = { ext: {} }),
                      e.regs.ext || (e.regs.ext = {}),
                      (e.regs.ext.dsa = m.ext.dsa));
                  const f = (0, i.A)(t, 'ortb2.site');
                  if (f) {
                    const t = [...(f.cat || []), ...(f.pagecat || [])].filter(
                      (e) => e && 'string' == typeof e,
                    );
                    t.length && (e.site.cat = t);
                    const r = (0, i.A)(f, 'content.genre');
                    r &&
                      'string' == typeof r &&
                      (e.site.content = { ...e.site.content, genre: r });
                    const n = (0, i.A)(f, 'content.data');
                    if (n && n.length) {
                      const t = e.site.content || {};
                      e.site.content = (0, s.mergeDeep)(t, { data: n });
                    }
                    const o = (0, i.A)(f, 'content.id');
                    o && (e.site.content = { ...e.site.content, id: o });
                  }
                }),
                [
                  ...O.map((e, t) => {
                    let r;
                    const n = (u || g).replace(
                      /[?&]sp=([^?&=]+)/,
                      (e, t) => (t && (r = t), ''),
                    );
                    let s = T[t] || r;
                    return {
                      method: 'POST',
                      url:
                        n +
                        (n.indexOf('?') > -1 ? '&' : '?') +
                        'no_mapping=1' +
                        (s ? `&sp=${s}` : ''),
                      data: JSON.stringify(e),
                      bidObject: _[t],
                    };
                  }),
                  ...(D
                    ? [
                        {
                          method: 'POST',
                          url: u || g,
                          data: JSON.stringify(D),
                          bidsMap: E,
                        },
                      ]
                    : []),
                ]
              );
            },
            interpretResponse: function (e, t) {
              let r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : a.A4;
              e = e && e.body;
              const n = [];
              let i;
              e ? e.seatbid && !e.seatbid.length && (i = A) : (i = w);
              const o = this.forceBidderName || this.code;
              return (
                !i &&
                  e.seatbid &&
                  e.seatbid.forEach((e) => {
                    !(function (e, t, r, n, i) {
                      if (!e) return;
                      let o;
                      e.adid || (o = y + JSON.stringify(e));
                      if (o || e.adm || e.nurl) {
                        const o = t.bidsMap ? t.bidsMap[e.impid] : t.bidObject,
                          { bid: d, savedPrebidBid: a } = o || {};
                        if (
                          d &&
                          (function (e, t) {
                            if ((0, s.isNumber)(t))
                              return e > t || (e === t && Math.random() > 0.5);
                            return !0;
                          })(e.price, a && a.cpm)
                        ) {
                          const t = {
                            requestId: d.bidId,
                            cpm: e.price,
                            width: e.w,
                            height: e.h,
                            creativeId: e.adid,
                            currency: 'USD',
                            netRevenue: !0,
                            ttl: 360,
                            meta: {
                              advertiserDomains: e.adomain ? e.adomain : [],
                            },
                            dealId: e.dealid,
                          };
                          (o.savedPrebidBid = t),
                            e.ext &&
                              e.ext.bidder &&
                              e.ext.bidder.grid &&
                              e.ext.bidder.grid.demandSource &&
                              ((t.adserverTargeting = {
                                hb_ds: e.ext.bidder.grid.demandSource,
                              }),
                              (t.meta.demandSource =
                                e.ext.bidder.grid.demandSource)),
                            e.ext && e.ext.dsa && (t.meta.dsa = e.ext.dsa),
                            'video' === e.content_type
                              ? (e.adm
                                  ? ((t.vastXml = e.adm),
                                    (t.adResponse = { content: t.vastXml }))
                                  : e.nurl && (t.vastUrl = e.nurl),
                                (t.mediaType = p.G_),
                                d.renderer ||
                                  (d.mediaTypes &&
                                    d.mediaTypes.video &&
                                    'outstream' !==
                                      d.mediaTypes.video.context) ||
                                  (t.renderer = (function (e, t, r) {
                                    const n = r.install({
                                      id: t.id,
                                      url: t.url,
                                      loaded: !1,
                                    });
                                    try {
                                      n.setRender(O);
                                    } catch (e) {
                                      (0, s.logWarn)(
                                        'Prebid Error calling setRender on renderer',
                                        e,
                                      );
                                    }
                                    return n;
                                  })(0, { id: d.bidId, url: f }, n)))
                              : ((t.ad = e.adm), (t.mediaType = p.D4));
                          const a = (I[i] && I[i].bidResponseExternal) || {};
                          r.push((0, s.mergeDeep)(t, a));
                        }
                      } else o = x + JSON.stringify(e);
                      o && (0, s.logError)(o);
                    })(
                      (function (e) {
                        e
                          ? e.bid
                            ? e.bid[0] || (0, s.logError)(S)
                            : (0, s.logError)(R + JSON.stringify(e))
                          : (0, s.logError)(v);
                        return e && e.bid && e.bid[0];
                      })(e),
                      t,
                      n,
                      r,
                      o,
                    );
                  }),
                i && (0, s.logError)(i),
                n
              );
            },
            getUserSyncs: function () {
              for (
                var e = arguments.length, t = new Array(e), r = 0;
                r < e;
                r++
              )
                t[r] = arguments[r];
              const [n, , s, i] = t;
              if (!j && n.pixelEnabled) {
                let e = '';
                s &&
                  ('boolean' == typeof s.gdprApplies &&
                    (e += `&gdpr=${Number(s.gdprApplies)}`),
                  'string' == typeof s.consentString &&
                    (e += `&gdpr_consent=${s.consentString}`)),
                  i && (e += `&us_privacy=${i}`);
                const t = this.forceBidderName || this.code,
                  r = (I[t] && I[t].syncurl) || m;
                return (j = !0), { type: 'image', url: r + e };
              }
            },
            ajaxCall: function (e, t, r, n) {
              return (n.browsingTopics = !1), (0, o.RD)(e, t, r, n);
            },
            onDataDeletionRequest: function (e) {
              E.ajaxCall(
                'https://media.grid.bidswitch.net/uspapi_delete_c2s',
                null,
                null,
                { method: 'GET' },
              );
            },
          };
          function O(e) {
            e.renderer.push(() => {
              window.ANOutstreamVideo.renderAd({
                targetId: e.adUnitCode,
                adResponse: e.adResponse,
              });
            });
          }
          (0, d.a$)(E), (0, n.E)('gridBidAdapter');
        },
      },
      (e) => {
        e.O(0, [60802, 51085], () => {
          return (t = 15449), e((e.s = t));
          var t;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [43863],
      {
        11875: (e, i, t) => {
          var n = t(7873),
            o = t(71371),
            r = t(91069),
            s = t(70433),
            d = t(43272),
            a = t(12938),
            c = t(15901),
            p = t(57377);
          const u = 'gumgum',
            l = (0, a.vM)({ bidderCode: u }),
            m = { t: 0, rq: 8, pbv: '9.0.0' },
            g = [o.D4, o.G_],
            f = [
              'dac.co.jp',
              'audigent.com',
              'id5-sync.com',
              'liveramp.com',
              'intentiq.com',
              'liveintent.com',
              'crwdcntrl.net',
              'quantcast.com',
              'adserver.org',
              'yahoo.com',
            ];
          let b = {},
            h = null;
          function y(e) {
            const i = (e) => new RegExp(`[?#&](${e}=(.*?))($|&)`, 'i');
            let n,
              o,
              s,
              d,
              a,
              c,
              p = {};
            try {
              (n = t.g.top), (o = n.screen), (s = e || '');
            } catch (e) {
              return (0, r.logError)(e), p;
            }
            var u;
            return (
              (p = {
                vw: n.innerWidth,
                vh: n.innerHeight,
                sw: o.width,
                sh: o.height,
                pu:
                  ((u = s),
                  ['ggad', 'ggdeal'].reduce((e, t) => {
                    const n = u.match(i(t));
                    return n
                      ? (n[1] && (e = e.replace(n[1], '')),
                        n[3] && (e = e.replace(n[3], '')),
                        e)
                      : e;
                  }, u)),
                ce: l.cookiesAreEnabled(),
                dpr: n.devicePixelRatio || 1,
                jcsi: JSON.stringify(m),
                ogu: (function () {
                  let e = '';
                  const i = (
                    document && document.getElementsByTagName('head')[0]
                  ).querySelector("meta[property='og:url']");
                  return (e = i ? i.content : null), e;
                })(),
              }),
              (c = (function () {
                const e =
                    window.navigator &&
                    (window.navigator.connection ||
                      window.navigator.mozConnection ||
                      window.navigator.webkitConnection),
                  i = e && (e.downlink || e.bandwidth);
                return i ? Math.round(1024 * i) : null;
              })()),
              c && (p.ns = c),
              (d = (s.match(i('ggad')) || [0, 0, 0])[2]),
              d && (p[isNaN(d) ? 'eAdBuyId' : 'adBuyId'] = d),
              (a = (s.match(i('ggdeal')) || [0, 0, 0])[2]),
              a && (p.ggdeal = a),
              p
            );
          }
          function v(e, i) {
            return e.replace('AD_JSON', window.btoa(JSON.stringify(i)));
          }
          function I(e) {
            let i = 0,
              t = 0,
              n = 0;
            return (
              e.forEach((e) => {
                let [o, r] = e,
                  s = o > r ? o : r;
                (s > n || (s === n && o >= i && r >= t)) &&
                  ((n = s), (i = o), (t = r));
              }),
              [i, t]
            );
          }
          function S(e, i) {
            const t = {};
            if (
              (e.inScreenPubID && ((t.pubId = e.inScreenPubID), (t.pi = 2)),
              e.inScreen && ((t.t = e.inScreen), (t.pi = 2)),
              e.inSlot)
            ) {
              const [n, o] = I(i);
              (t.maxw = n),
                (t.maxh = o),
                (t.si = e.inSlot),
                (t.pi = 3),
                (t.bf = i.reduce(
                  (e, i) => `${e}${e && ','}${i[0]}x${i[1]}`,
                  '',
                ));
            }
            return (
              e.ICV && ((t.ni = e.ICV), (t.pi = 5)),
              e.videoPubID && ((t.pubId = e.videoPubID), (t.pi = 7)),
              e.video && ((t.t = e.video), (t.pi = 7)),
              e.inVideo && ((t.t = e.inVideo), (t.pi = 6)),
              t
            );
          }
          const w = {
            code: u,
            gvlid: 61,
            aliases: ['gg'],
            isBidRequestValid: function (e) {
              const { params: i, adUnitCode: t } = e,
                n =
                  i.inScreen ||
                  i.inScreenPubID ||
                  i.inSlot ||
                  i.ICV ||
                  i.video ||
                  i.inVideo ||
                  i.slot ||
                  i.native ||
                  i.zone ||
                  i.pubID;
              if (b[n])
                return (
                  (0, r.logWarn)(
                    `[GumGum] Please check the implementation for ${n} for the placement ${t}`,
                  ),
                  !1
                );
              switch (!0) {
                case !!i.zone:
                case !!i.pubId:
                case !!i.inScreen:
                case !!i.inScreenPubID:
                case !!i.inSlot:
                case !!i.ICV:
                case !!i.video:
                case !!i.inVideo:
                case !!i.videoPubID:
                  break;
                default:
                  return (
                    (0, r.logWarn)(
                      `[GumGum] No product selected for the placement ${t}, please check your implementation.`,
                    ),
                    !1
                  );
              }
              return (
                !(
                  i.bidfloor &&
                  ('number' != typeof i.bidfloor || !isFinite(i.bidfloor))
                ) || ((0, r.logWarn)('[GumGum] bidfloor must be a Number'), !1)
              );
            },
            buildRequests: function (e, i) {
              const t = [],
                n = i && i.gdprConsent,
                o = i && i.uspConsent,
                a = i && i.gppConsent,
                c = i && i.timeout,
                p = !0 === d.$W.getConfig('coppa') ? 1 : 0,
                u = i && i.refererInfo && i.refererInfo.page;
              return (
                (0, r._each)(e, (e) => {
                  const {
                      bidId: d,
                      mediaTypes: l = {},
                      params: m = {},
                      schain: g,
                      userId: b = {},
                      ortb2Imp: v,
                      adUnitCode: w = '',
                    } = e,
                    { currency: x, floor: C } = (function (e, i, t) {
                      const n = Object.keys(e)[0] || 'banner',
                        o = { floor: 0, currency: 'USD' };
                      if ('function' == typeof t.getFloor) {
                        const { currency: e, floor: r } = t.getFloor({
                          mediaType: n,
                          size: '*',
                        });
                        r && (o.floor = r),
                          e && (o.currency = e),
                          i &&
                            r &&
                            'USD' === e &&
                            (o.floor = Math.max(i, parseFloat(r)));
                      } else i && (o.floor = i);
                      return o;
                    })(l, m.bidfloor, e),
                    $ = (function (e) {
                      const i = ['uid', 'eid', 'lipbid', 'envelope'];
                      return Object.keys(e).reduce(function (t, n) {
                        const o = e[n];
                        switch (typeof o) {
                          case 'string':
                            t[n] = o;
                            break;
                          case 'object':
                            const e = i.filter((e) => o.hasOwnProperty(e));
                            e.length && (t[n] = o[e[0]]);
                        }
                        return t;
                      }, {});
                    })(b),
                    z =
                      (0, s.A)(v, 'ext.gpid') ||
                      (0, s.A)(v, 'ext.data.pbadslot');
                  let j = [1, 1],
                    k = {
                      displaymanager: 'Prebid.js - gumgum',
                      displaymanagerver: '9.0.0',
                    };
                  const D = new Date(),
                    A = D.getTime(),
                    O = D.getTimezoneOffset();
                  if (((k.lt = A), (k.to = O), b && b.pubProvidedId)) {
                    let e = (function (e, i) {
                      let t = JSON.stringify(e);
                      if (t.length <= i) return t;
                      {
                        const n = e.slice(
                          0,
                          Math.floor(e.length * (i / t.length)),
                        );
                        return (t = JSON.stringify(n)), t;
                      }
                    })(
                      b.pubProvidedId.filter((e) => f.includes(e.source)),
                      1800,
                    );
                    k.pubProvidedId = e;
                  }
                  b &&
                    b.id5id &&
                    b.id5id.uid &&
                    b.id5id.ext &&
                    ((k.id5Id = b.id5id.uid || null),
                    (k.id5IdLinkType = b.id5id.ext.linkType || null)),
                    w && (k.aun = w);
                  for (const e in $) k[e] = $[e];
                  if (
                    (l.banner
                      ? (j = l.banner.sizes)
                      : l.video &&
                        ((j = l.video.playerSize),
                        (k = (function (e) {
                          const {
                              minduration: i,
                              maxduration: t,
                              linearity: n,
                              startdelay: o,
                              placement: s,
                              plcmt: d,
                              protocols: a = [],
                              playerSize: c = [],
                            } = e,
                            p = (0, r.parseSizesInput)(c),
                            [u, l] = p[0] && p[0].split('x');
                          let m = '';
                          a.length && (m = a.join(','));
                          const g = {
                            mind: i,
                            maxd: t,
                            li: n,
                            sd: o,
                            pt: s,
                            pr: m,
                            viw: u,
                            vih: l,
                          };
                          return null != d && (g.vplcmt = d), g;
                        })(l.video))),
                    z && (k.gpid = z),
                    h && (k.pv = h),
                    C && ((k.fp = C), (k.fpc = x)),
                    i &&
                      i.ortb2 &&
                      i.ortb2.site &&
                      (function (e, i, t) {
                        let n = (function (e) {
                          if (e.content && Array.isArray(e.content.data))
                            for (const i of e.content.data)
                              if (
                                i.name.includes('iris.com') ||
                                i.name.includes('iris.tv')
                              )
                                return i.ext.cids.join(',');
                          return null;
                        })(i);
                        n
                          ? (e.irisid = n)
                          : t.irisid &&
                            'string' == typeof t.irisid &&
                            (e.irisid = t.irisid);
                      })(k, i.ortb2.site, m),
                    m.iriscat &&
                      'string' == typeof m.iriscat &&
                      (k.iriscat = m.iriscat),
                    m.zone || m.pubId)
                  )
                    if (
                      (m.zone ? (k.t = m.zone) : (k.pubId = m.pubId),
                      (k.pi = 2),
                      m.slot)
                    ) {
                      const [e, i] = I(j);
                      (k.maxw = e),
                        (k.maxh = i),
                        (k.si = m.slot),
                        (k.pi = 3),
                        (k.bf = j.reduce(
                          (e, i) => `${e}${e && ','}${i[0]}x${i[1]}`,
                          '',
                        ));
                    } else
                      m.native
                        ? ((k.ni = m.native), (k.pi = 5))
                        : l.video
                          ? (k.pi = 2 === l.video.linearity ? 6 : 7)
                          : m.product &&
                            'skins' === m.product.toLowerCase() &&
                            (k.pi = 8);
                  else k = { ...k, ...S(m, j) };
                  n && (k.gdprApplies = n.gdprApplies ? 1 : 0),
                    k.gdprApplies && (k.gdprConsent = n.consentString),
                    o && (k.uspConsent = o),
                    a
                      ? ((k.gppString = i.gppConsent.gppString
                          ? i.gppConsent.gppString
                          : ''),
                        (k.gppSid = Array.isArray(
                          i.gppConsent.applicableSections,
                        )
                          ? i.gppConsent.applicableSections.join(',')
                          : ''))
                      : !a &&
                        i?.ortb2?.regs?.gpp &&
                        ((k.gppString = i.ortb2.regs.gpp),
                        (k.gppSid = Array.isArray(i.ortb2.regs.gpp_sid)
                          ? i.ortb2.regs.gpp_sid.join(',')
                          : ''));
                  const P = (0, s.A)(i, 'ortb2.regs.ext.dsa');
                  P && (k.dsa = JSON.stringify(P)),
                    p && (k.coppa = p),
                    g &&
                      g.nodes &&
                      (k.schain = (function (e) {
                        let i = `${e.ver},${e.complete}`;
                        return (
                          e.nodes.map((e) => {
                            (i += `!${encodeURIComponent(e.asi || '')},`),
                              (i += `${encodeURIComponent(e.sid || '')},`),
                              (i += `${encodeURIComponent(e.hp || '')},`),
                              (i += `${encodeURIComponent(e.rid || '')},`),
                              (i += `${encodeURIComponent(e.name || '')},`),
                              (i += `${encodeURIComponent(e.domain || '')}`);
                          }),
                          i
                        );
                      })(g)),
                    t.push({
                      id: d,
                      tmax: c,
                      tId: v?.ext?.tid,
                      pi: k.pi,
                      selector: m.selector,
                      sizes: j,
                      url: 'https://g2.gumgum.com/hbid/imp',
                      method: 'GET',
                      data: Object.assign(k, y(u)),
                    });
                }),
                t
              );
            },
            interpretResponse: function (e, i) {
              const t = [],
                n = e.body;
              if (!n || n.err) {
                const e = i.data || {},
                  t = e.si || e.ni || e.t || e.pubId,
                  o = n ? n.err.drt : 18e5;
                (b[t] = { productId: e.pi, timestamp: new Date().getTime() }),
                  setTimeout(() => {
                    b[t] && delete b[t];
                  }, o),
                  (0, r.logWarn)(
                    `[GumGum] Please check the implementation for ${t}`,
                  );
              }
              const {
                ad: {
                  price: s,
                  id: d,
                  markup: a,
                  cur: p,
                  width: u,
                  height: l,
                  maxw: g,
                  maxh: f,
                },
                cw: y,
                pag: { pvid: I },
                jcsi: S,
                meta: { adomain: w, mediaType: x },
              } = Object.assign(
                {
                  ad: { price: 0, id: 0, markup: '', width: 0, height: 0 },
                  pag: { pvid: 0 },
                  meta: { adomain: [], mediaType: '' },
                },
                n,
              );
              let C = i.data || {},
                $ = C.pi,
                z = 6 === $ || 7 === $ ? o.G_ : o.D4,
                j = 3 === $ && 9 === C.si,
                k = { advertiserDomains: w || [], mediaType: x || z },
                D = (0, r.parseSizesInput)(i.sizes);
              if (g && f) D = [`${g}x${f}`];
              else if (5 === $ && (0, c.mK)(D, '1x1')) D = ['1x1'];
              else if ((2 === $ && (0, c.mK)(D, '1x1')) || 3 === $) {
                const e =
                  (i.sizes &&
                    i.sizes.reduce((e, i) => {
                      const [t, n] = i;
                      return u === t && l === n && e.push(i.join('x')), e;
                    }, [])) ||
                  [];
                D = e.length ? e : (0, r.parseSizesInput)(i.sizes);
              }
              let [A, O] = D[0].split('x');
              return (
                S && (n.jcsi = m),
                (h = I),
                d &&
                  t.push({
                    ad: y ? v(y, Object.assign({}, n, { bidRequest: i })) : a,
                    ...(z === o.G_ && { ad: a, vastXml: a }),
                    mediaType: z,
                    cpm: j ? 0.1 : s,
                    creativeId: d,
                    currency: p || 'USD',
                    height: O,
                    netRevenue: !0,
                    requestId: i.id,
                    ttl: 60,
                    width: A,
                    meta: k,
                  }),
                t
              );
            },
            getUserSyncs: function (e, i) {
              return i
                .map((e) => (e.body && e.body.pxs && e.body.pxs.scr) || [])
                .reduce(function (e, i) {
                  return e.concat(i);
                }, [])
                .map((e) => ({
                  type: 'f' === e.t ? 'iframe' : 'image',
                  url: e.u,
                }));
            },
            supportedMediaTypes: g,
          };
          (0, p.a$)(w), (0, n.E)('gumgumBidAdapter');
        },
      },
      (e) => {
        e.O(0, [60802, 51085], () => {
          return (i = 11875), e((e.s = i));
          var i;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [24775],
      {
        71185: (e, t, n) => {
          var r = n(7873),
            i = n(91069),
            o = n(57377),
            s = n(12938);
          const l = {
              BIDDER_CODE: 'invibes',
              BID_ENDPOINT: '.videostep.com/Bid/VideoAdContent',
              BID_SUBDOMAIN: 'https://bid',
              SYNC_ENDPOINT: 'https://k.r66net.com/GetUserSync',
              TIME_TO_LIVE: 300,
              DEFAULT_CURRENCY: 'EUR',
              PREBID_VERSION: 12,
              METHOD: 'GET',
              INVIBES_VENDOR_ID: 436,
              USERID_PROVIDERS: [
                'pubcid',
                'pubProvidedId',
                'uid2',
                'zeotapIdPlus',
                'id5id',
              ],
              META_TAXONOMY: [
                'networkId',
                'networkName',
                'agencyId',
                'agencyName',
                'advertiserId',
                'advertiserName',
                'advertiserDomains',
                'brandId',
                'brandName',
                'primaryCatId',
                'secondaryCatIds',
                'mediaType',
              ],
              DISABLE_USER_SYNC: !0,
            },
            a = (0, s.vM)({ bidderCode: l.BIDDER_CODE }),
            d = {
              code: l.BIDDER_CODE,
              gvlid: l.INVIBES_VENDOR_ID,
              isBidRequestValid: function (e) {
                if ('object' != typeof e.params) return !1;
                if (null == e.params.placementId) return !1;
                return !0;
              },
              buildRequests: function (e, t) {
                t = t || {};
                const n = [],
                  r = [];
                let i,
                  o,
                  s,
                  d = Date.now();
                (window.invibes = window.invibes || {}),
                  (window.invibes.placementIds =
                    window.invibes.placementIds || []),
                  0 == g &&
                    (function () {
                      const { scrollHeight: e } = document.documentElement;
                      if (void 0 === c.originalURL)
                        return void (c.originalURL = window.location.href);
                      if (void 0 === c.originalScrollHeight)
                        return void (c.originalScrollHeight = e);
                      const t = window.location.href;
                      e > c.originalScrollHeight &&
                        c.originalURL !== t &&
                        (g = !0);
                    })();
                e.forEach(function (e) {
                  (e.startTime = new Date().getTime()),
                    window.invibes.placementIds.includes(
                      e.params.placementId,
                    ) && (m = !0),
                    window.invibes.placementIds.push(e.params.placementId),
                    n.push(e.params.placementId),
                    r.push(e.adUnitCode),
                    (s = s || e.params.domainId),
                    (i = i || e.params.customEndpoint),
                    (p = p || e.params.customUserSync),
                    (f = e?.params?.disableUserSyncs),
                    (o = o || e.userId);
                }),
                  (c.optIn =
                    c.optIn ||
                    (function (e) {
                      if (e && e.vendorData) {
                        if (
                          ((c.GdprModuleInstalled = !0),
                          (c.gdpr_consent = (function (e) {
                            if (
                              e.purpose &&
                              e.purpose.consents &&
                              null != e.tcString
                            )
                              return e.tcString;
                            return e.consentData;
                          })(e.vendorData)),
                          !e.vendorData.gdprApplies ||
                            e.vendorData.hasGlobalConsent)
                        ) {
                          var t;
                          for (t = 0; t < c.purposes.length; ++t)
                            c.purposes[t] = !0;
                          for (t = 0; t < c.legitimateInterests.length; ++t)
                            c.legitimateInterests[t] = !0;
                          return 2;
                        }
                        let n = (function (e) {
                          if (e.purpose && e.purpose.consents)
                            return e.purpose.consents;
                          if (e.purposeConsents) return e.purposeConsents;
                          return null;
                        })(e.vendorData);
                        if (null == n) return 0;
                        let r = (function (e) {
                          if (e.purpose && e.purpose.consents)
                            return e.tcfPolicyVersion >= 4 ? 11 : 10;
                          return 5;
                        })(e.vendorData);
                        if (!A(n, c.purposes, r)) return 0;
                        A(
                          (function (e) {
                            if (e.purpose && e.purpose.legitimateInterests)
                              return e.purpose.legitimateInterests;
                            return null;
                          })(e.vendorData),
                          c.legitimateInterests,
                          r,
                        );
                        let i = l.INVIBES_VENDOR_ID.toString(10),
                          o = (function (e) {
                            if (e.vendor && e.vendor.consents)
                              return e.vendor.consents;
                            if (e.vendorConsents) return e.vendorConsents;
                            return null;
                          })(e.vendorData),
                          s =
                            !0 ===
                            (function (e) {
                              if (e.vendor && e.vendor.legitimateInterests)
                                return e.vendor.legitimateInterests;
                              return {};
                            })(e.vendorData)[i];
                        return null == o || null == o[i]
                          ? 4
                          : !1 === o[i] && !1 === s
                            ? 0
                            : 2;
                      }
                      return (c.GdprModuleInstalled = !1), 0;
                    })(t.gdprConsent)),
                  (c.visitId = c.visitId || D());
                const v = (function () {
                  let e = {};
                  try {
                    let t = a.getDataFromLocalStorage('ivbs');
                    null != t && (e = JSON.parse(t));
                  } catch (e) {}
                  let t,
                    n = /[\\?&]([^=]+)=([^\\?&#]+)/g;
                  for (; null != (t = n.exec(window.location.href)); )
                    t.index === n.lastIndex && n.lastIndex++,
                      (e[t[1].toLowerCase()] = t[2]);
                  return e;
                })();
                let E = (function (e) {
                    let t;
                    e &&
                      l.USERID_PROVIDERS.forEach((n) => {
                        e[n] && ((t = t || {}), (t[n] = e[n]));
                      });
                    return t;
                  })(o),
                  C = {
                    placementIds: n,
                    adUnitCodes: r,
                    auctionStartTime: d,
                    bidVersion: l.PREBID_VERSION,
                  };
                E && (C.userId = E);
                let w = {
                  location: y(t),
                  videoAdHtmlId: D(),
                  showFallback: '0' === v.advs,
                  ivbsCampIdsLocal: O('IvbsCampIdsLocal'),
                  bidParamsJson: JSON.stringify(C),
                  capCounts: S(),
                  pcids: Object.keys(c.pushedCids).join(','),
                  vId: c.visitId,
                  width: u.innerWidth,
                  height: u.innerHeight,
                  oi: c.optIn,
                  kw: N,
                  purposes: c.purposes.toString(),
                  li: c.legitimateInterests.toString(),
                  tc: c.gdpr_consent,
                  isLocalStorageEnabled: a.hasLocalStorage(),
                  preventPageViewEvent: I,
                  isPlacementRefresh: m,
                  isInfiniteScrollPage: g,
                };
                t.refererInfo &&
                  t.refererInfo.ref &&
                  (w.pageReferrer = t.refererInfo.ref.substring(0, 300));
                let R = c.getCookie('handIid');
                R && (w.handIid = R);
                let B = O('ivbsdid');
                if (!B) {
                  let e = c.getCookie('ivbsdid');
                  if (e)
                    try {
                      let t = JSON.parse(e);
                      B = t.id ? t.id : t;
                    } catch (e) {}
                }
                B && (w.lId = B);
                const _ =
                  'videoaddebug,advs,bvci,bvid,istop,trybvid,trybvci'.split(
                    ',',
                  );
                for (let e in v)
                  if (v.hasOwnProperty(e)) {
                    let t = v[e];
                    (_.indexOf(e) > -1 || /^vs|^invib/i.test(e)) && (w[e] = t);
                  }
                let T = (function (e, t, n) {
                  if (null != e) return e;
                  if (null != t) return b(t - 1e3);
                  if (n.length > 0)
                    for (var r = 0; r < n.length; r++) {
                      const e = h(n[r]);
                      if (null != e) return b(e);
                    }
                  return b(1);
                })(i, s, n);
                return (
                  (I = !0),
                  {
                    method: l.METHOD,
                    url: T,
                    data: w,
                    options: { withCredentials: !0 },
                    bidRequests: e,
                  }
                );
              },
              interpretResponse: function (e, t) {
                return (function (e, t) {
                  if (null == t || 0 === t.length)
                    return (
                      (0, i.logInfo)(
                        'Invibes Adapter - No bids have been requested',
                      ),
                      []
                    );
                  if (!e)
                    return (
                      (0, i.logInfo)('Invibes Adapter - Bid response is empty'),
                      []
                    );
                  (e = e.body || e),
                    (e = e.videoAdContentResult || e),
                    e.ShouldSetLId &&
                      e.LId &&
                      ((c.optIn && c.purposes[0]) ||
                        !e.PrivacyPolicyRule ||
                        !e.TcModel ||
                        !e.TcModel.PurposeConsents ||
                        ((c.optIn = e.PrivacyPolicyRule),
                        (c.purposes = e.TcModel.PurposeConsents)),
                      (function (e, t) {
                        if (!c.optIn || !c.purposes[0]) return;
                        a.setDataInLocalStorage(e, t);
                      })('ivbsdid', e.LId));
                  if ('object' == typeof c.bidResponse) {
                    if (!0 !== e.MultipositionEnabled)
                      return (
                        (0, i.logInfo)(
                          'Invibes Adapter - Bid response already received. Invibes only responds to one bid request per user visit',
                        ),
                        []
                      );
                    c.bidResponse.AdPlacements =
                      c.bidResponse.AdPlacements.concat(e.AdPlacements);
                  } else c.bidResponse = e;
                  const n = [];
                  for (let r = 0; r < t.length; r++) {
                    let o = t[r],
                      s =
                        !0 === e.UseAdUnitCode
                          ? o.params.placementId + '_' + o.adUnitCode
                          : o.params.placementId;
                    if (c.placementBids.indexOf(s) > -1) {
                      (0, i.logInfo)(
                        'Invibes Adapter - Placement was previously bid on ' +
                          s,
                      );
                      continue;
                    }
                    let l = null;
                    if (null != e.AdPlacements)
                      for (let t = 0; t < e.AdPlacements.length; t++) {
                        let n = e.AdPlacements[t].BidModel;
                        if (null != n && n.PlacementId == s) {
                          l = e.AdPlacements[t];
                          break;
                        }
                      }
                    else {
                      let t = e.BidModel;
                      null != t && t.PlacementId == s && (l = e);
                    }
                    let a = v(o, l, e.MultipositionEnabled, s);
                    null !== a && (c.placementBids.push(s), n.push(a));
                  }
                  return n;
                })(e, null != t ? t.bidRequests : null);
              },
              getUserSyncs: function (e) {
                if (
                  e.iframeEnabled &&
                  !(null == f || null == f ? l.DISABLE_USER_SYNC : f)
                ) {
                  return {
                    type: 'iframe',
                    url: (function () {
                      let e = p || l.SYNC_ENDPOINT;
                      (e += '?visitId=' + c.visitId),
                        (e += '&optIn=' + c.optIn);
                      let t = O('ivbsdid');
                      if (!t) {
                        let e = c.getCookie('ivbsdid');
                        if (e)
                          try {
                            let n = JSON.parse(e);
                            t = n.id ? n.id : n;
                          } catch (e) {}
                      }
                      t && (e += '&ivbsdid=' + encodeURIComponent(t));
                      return e;
                    })(),
                  };
                }
              },
            };
          (0, o.a$)(d);
          const u = (function () {
            let e = window;
            try {
              for (; top !== e; )
                e.parent.location.href.length && (e = e.parent);
            } catch (e) {}
            return e;
          })();
          let c = (u.invibes = u.invibes || {});
          (c.purposes = c.purposes || [
            !1,
            !1,
            !1,
            !1,
            !1,
            !1,
            !1,
            !1,
            !1,
            !1,
            !1,
          ]),
            (c.legitimateInterests = c.legitimateInterests || [
              !1,
              !1,
              !1,
              !1,
              !1,
              !1,
              !1,
              !1,
              !1,
              !1,
              !1,
            ]),
            (c.placementBids = c.placementBids || []),
            (c.pushedCids = c.pushedCids || {});
          let p,
            f,
            I = !1,
            g = !1,
            m = !1;
          function v(e, t, n, r) {
            if (null === t || null === t.BidModel)
              return (
                (0, i.logInfo)(
                  'Invibes Adapter - Placement not configured for bidding ' + r,
                ),
                null
              );
            let o = t.BidModel,
              s = t.Ads;
            if (!Array.isArray(s) || s.length < 1)
              return (
                null != t.AdReason &&
                  (0, i.logInfo)('Invibes Adapter - No ads ' + t.AdReason),
                (0, i.logInfo)('Invibes Adapter - No ads available'),
                null
              );
            let a = s[0],
              d = (function (e) {
                let t = [0, 0];
                for (let n = 0; n < e.length; n++)
                  e[n][0] * e[n][1] > t[0] * t[1] && (t = e[n]);
                return t;
              })(e.sizes);
            if (!0 === n && Object.keys(c.pushedCids).length > 0) {
              if (null != a.Blcids && a.Blcids.length > 0) {
                if (
                  Object.keys(c.pushedCids).some(function (e) {
                    return a.Blcids.indexOf(parseInt(e)) > -1;
                  })
                )
                  return (
                    (0, i.logInfo)(
                      'Invibes Adapter - Ad blacklists pushed ids',
                    ),
                    null
                  );
              }
              if (
                Object.keys(c.pushedCids).some(function (e) {
                  return c.pushedCids[e].indexOf(a.Cid) > -1;
                })
              )
                return (
                  (0, i.logInfo)('Invibes Adapter - Ad is blacklisted'), null
                );
            }
            c.pushedCids[a.Cid] = a.Blcids || [];
            const u = Date.now();
            return (
              (0, i.logInfo)(
                'Bid auction started at ' +
                  o.AuctionStartTime +
                  ' . Invibes registered the bid at ' +
                  u +
                  ' ; bid request took a total of ' +
                  (u - o.AuctionStartTime) +
                  ' ms.',
              ),
              {
                requestId: e.bidId,
                cpm: a.BidPrice,
                width: o.Width || d[0],
                height: o.Height || d[1],
                creativeId: a.VideoExposedId,
                currency: o.Currency || l.DEFAULT_CURRENCY,
                netRevenue: !0,
                ttl: l.TIME_TO_LIVE,
                ad: C(o),
                meta: E(o.Meta),
              }
            );
          }
          function b(e) {
            return e < 2
              ? l.BID_SUBDOMAIN + l.BID_ENDPOINT
              : l.BID_SUBDOMAIN + e + l.BID_ENDPOINT;
          }
          function h(e) {
            if (null == e) return null;
            var t = /_ivbs([0-9]+)/g.exec(e);
            return null != t && null != t[1] ? parseInt(t[1]) : null;
          }
          function E(e) {
            var t = {};
            if (null != e)
              for (let n = 0; n < l.META_TAXONOMY.length; n++)
                e.hasOwnProperty(l.META_TAXONOMY[n]) &&
                  (t[l.META_TAXONOMY[n]] = e[l.META_TAXONOMY[n]]);
            return t;
          }
          function D() {
            return '10000000100040008000100000000000'.replace(/[018]/g, (e) =>
              (
                e ^
                (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (e / 4)))
              ).toString(16),
            );
          }
          function y(e) {
            return e.refererInfo.page.substring(0, 300);
          }
          function C(e) {
            return "<html>\n        <head><script type='text/javascript'>inDapIF=true;</script></head>\n          <body style='margin : 0; padding: 0;'>\n          creativeHtml\n          </body>\n        </html>".replace(
              'creativeHtml',
              e.CreativeHtml,
            );
          }
          function O(e) {
            if (!c.GdprModuleInstalled || (c.optIn && c.purposes[0]))
              return a.getDataFromLocalStorage(e) || '';
          }
          function S() {
            const e = 'ivvcap';
            if (!c.optIn || !c.purposes[0]) return '';
            let t = function () {
                try {
                  return JSON.parse(a.getDataFromLocalStorage(e)) || {};
                } catch (e) {
                  return {};
                }
              },
              n = function () {
                let n = new Date().getTime(),
                  r = t(),
                  i = !1;
                Object.keys(r).forEach(function (e) {
                  r[e][1] <= n && (delete r[e], (i = !0));
                }),
                  i &&
                    (function (t) {
                      a.setDataInLocalStorage(e, JSON.stringify(t));
                    })(r);
              };
            return (function () {
              n();
              let e = t();
              return Object.keys(e)
                .filter(function (t) {
                  return e.hasOwnProperty(t);
                })
                .sort()
                .map(function (t) {
                  return [t, e[t][0]];
                });
            })()
              .map(function (e) {
                return e.join('=');
              })
              .join(',');
          }
          function A(e, t, n) {
            if (e instanceof Array) {
              for (let r = 0; r < n && r < e.length; r++)
                t[r] = !(!1 === e[r] || 'false' === e[r] || null == e[r]);
              return !0;
            }
            if ('object' == typeof e && null !== e) {
              let r = 0;
              for (let i in e) {
                if (r === n) break;
                if (e.hasOwnProperty(i)) {
                  let n = parseInt(i);
                  isNaN(n)
                    ? (t[r] = !(
                        !1 === e[i] ||
                        'false' === e[i] ||
                        null == e[i]
                      ))
                    : (t[n - 1] = !(
                        !1 === e[i] ||
                        'false' === e[i] ||
                        null == e[i]
                      )),
                    r++;
                }
              }
              return !0;
            }
            return !1;
          }
          (c.Uid = {
            generate: function () {
              let e = parseInt('zzzzzz', 36),
                t = function () {
                  return Math.floor(Math.random() * e).toString(36);
                };
              return t() + t();
            },
          }),
            (c.getCookie = function (e) {
              if (
                a.cookiesAreEnabled() &&
                (!c.GdprModuleInstalled || (c.optIn && c.purposes[0]))
              )
                return a.getCookie(e);
            });
          let N = (function () {
            const e = 300;
            let t = document.getElementsByTagName('head')[0],
              n = t ? t.getElementsByTagName('meta') : [];
            function r(e, t) {
              let n = e.replace(/[<>~|\\"`!@#$%^&*()=+?]/g, '');
              let r = n.split(/[\s,;.:]+/).filter(function (e, t, n) {
                return '' !== e && n.indexOf(e) === t;
              });
              n = '';
              for (let e = 0; e < r.length; e++) {
                if (((n += r[e]), n.length >= t)) return n;
                e < r.length - 1 && (n += ',');
              }
              return n;
            }
            function i(e, t, i) {
              (e = e || 'keywords'), (t = t || 100);
              let o = (i = i || '');
              for (let s = 0; s < n.length; s++) {
                if (n[s].name && n[s].name.toLowerCase() === e.toLowerCase()) {
                  return r(i + ',' + n[s].content || '', t);
                }
                n[s].name &&
                  n[s].name.toLowerCase().indexOf(e.toLowerCase()) > -1 &&
                  (o = i + ',' + n[s].content || '');
              }
              return r(o, t);
            }
            let o = i('keywords', e);
            return (
              (!o || o.length < 292) &&
                ((o = i('description', e, o)),
                (!o || o.length < 292) &&
                  (o = (function (e, n) {
                    return (
                      (e = e || 300),
                      r(
                        (n = n || '') +
                          ',' +
                          ((document.title || t) &&
                          t.getElementsByTagName('title')[0]
                            ? t.getElementsByTagName('title')[0].innerHTML
                            : ''),
                        e,
                      )
                    );
                  })(e, o))),
              o
            );
          })();
          (0, r.E)('invibesBidAdapter');
        },
      },
      (e) => {
        e.O(0, [60802, 51085], () => {
          return (t = 71185), e((e.s = t));
          var t;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [53170],
      {
        77764: (e, t, i) => {
          var r = i(7873),
            n = i(70433),
            o = i(91069),
            a = i(63172),
            s = i(71371),
            d = i(43272),
            p = i(12938),
            l = i(15901),
            c = i(57377),
            u = i(63895),
            m = i(95789),
            f = i(51252);
          const g = 'ix',
            b = [s.D4, s.G_, s.s6],
            x = 50,
            y = [144, 144],
            h = { JPY: 1 },
            I = { PBJS: 'p', IX: 'x' },
            v = {
              SITE: [
                'id',
                'name',
                'domain',
                'cat',
                'sectioncat',
                'pagecat',
                'page',
                'ref',
                'search',
                'mobile',
                'privacypolicy',
                'publisher',
                'content',
                'keywords',
                'ext',
              ],
              USER: [
                'id',
                'buyeruid',
                'yob',
                'gender',
                'keywords',
                'customdata',
                'geo',
                'data',
                'ext',
              ],
            },
            A = {
              'liveramp.com': 'idl',
              'netid.de': 'NETID',
              'neustar.biz': 'fabrickId',
              'zeotap.com': 'zeotapIdPlus',
              'uidapi.com': 'UID2',
              'adserver.org': 'TDID',
              'id5-sync.com': '',
              'crwdcntrl.net': '',
              'epsilon.com': '',
              'audigent.com': '',
              'pubcid.org': '',
              'utiq.com': '',
              'criteo.com': '',
              'euid.eu': '',
              'intimatemerger.com': '',
              '33across.com': '',
              'liveintent.indexexchange.com': '',
              'google.com': '',
            },
            C = [
              'lipbid',
              'criteoId',
              'merkleId',
              'parrableId',
              'connectid',
              'tapadId',
              'quantcastId',
              'pubProvidedId',
              'pairId',
            ],
            w = ['mimes', 'minduration', 'maxduration'],
            O = [
              'mimes',
              'minduration',
              'maxduration',
              'protocols',
              'protocol',
              'startdelay',
              'placement',
              'linearity',
              'skip',
              'skipmin',
              'skipafter',
              'sequence',
              'battr',
              'maxextended',
              'minbitrate',
              'maxbitrate',
              'boxingallowed',
              'playbackmethod',
              'playbackend',
              'delivery',
              'pos',
              'companionad',
              'api',
              'companiontype',
              'ext',
              'playerSize',
              'w',
              'h',
              'plcmt',
            ],
            U = `${g}_features`,
            S = (0, p.vM)({ bidderCode: g }),
            E = {
              REQUESTED_FEATURE_TOGGLES: [
                'pbjs_enable_multiformat',
                'pbjs_allow_all_eids',
              ],
              featureToggles: {},
              isFeatureEnabled: function (e) {
                return (0, n.A)(
                  this.featureToggles,
                  `features.${e}.activated`,
                  !1,
                );
              },
              getFeatureToggles: function () {
                if (S.localStorageIsEnabled()) {
                  const e = (0, o.safeJSONParse)(S.getDataFromLocalStorage(U));
                  (0, n.A)(e, 'expiry') && e.expiry >= new Date().getTime()
                    ? (this.featureToggles = e)
                    : this.clearFeatureToggles();
                }
              },
              setFeatureToggles: function (e) {
                const t = e.body,
                  i = new Date(),
                  r = (0, n.A)(t, 'ext.features');
                r &&
                  ((this.featureToggles = {
                    expiry: i.setHours(i.getHours() + 1),
                    features: r,
                  }),
                  S.localStorageIsEnabled() &&
                    S.setDataInLocalStorage(
                      U,
                      JSON.stringify(this.featureToggles),
                    ));
              },
              clearFeatureToggles: function () {
                (this.featureToggles = {}),
                  S.localStorageIsEnabled() && S.removeDataFromLocalStorage(U);
              },
            };
          let P = 0,
            T = '',
            D = '',
            _ = !1;
          const k = 2;
          function J(e) {
            const t = j(e, s.G_),
              i = (0, n.A)(e, 'mediaTypes.video'),
              r = (0, n.A)(e, 'params.video');
            if ($(i, r).length) return {};
            t.video = r ? (0, o.deepClone)(e.params.video) : {};
            let d = (0, n.A)(e, 'ortb2Imp.ext.tid');
            d && (0, a.J)(t, 'ext.tid', d),
              (function (e, t) {
                if ((0, n.A)(t, 'mediaTypes.video.context') === u.H6) {
                  let i = (0, n.A)(t, 'mediaTypes.video.renderer');
                  if (
                    (i || (i = (0, n.A)(t, 'renderer')),
                    (0, n.A)(t, 'schain', !1))
                  )
                    e.displaymanager = 'pbjs_wrapper';
                  else if (i && 'object' == typeof i) {
                    if (void 0 !== i.url) {
                      let t = '';
                      try {
                        t = new URL(i.url).hostname;
                      } catch {
                        return;
                      }
                      t.includes('js-sec.indexww')
                        ? (e.displaymanager = 'ix')
                        : (e.displaymanager = i.url);
                    }
                  } else e.displaymanager = 'ix';
                }
              })(t, e),
              H(t, e);
            for (const e in i)
              -1 === O.indexOf(e) ||
                t.video.hasOwnProperty(e) ||
                (t.video[e] = i[e]);
            if (t.video.minduration > t.video.maxduration)
              return (
                (0, o.logError)(
                  `IX Bid Adapter: video minduration [${t.video.minduration}] cannot be greater than video maxduration [${t.video.maxduration}]`,
                ),
                {}
              );
            const p = (r && r.context) || (i && i.context);
            if (
              ((function (e) {
                e.video.hasOwnProperty('plcmt') &&
                  (!(0, o.isInteger)(e.video.plcmt) ||
                    e.video.plcmt < 1 ||
                    e.video.plcmt > 4) &&
                  ((0, o.logWarn)(
                    `IX Bid Adapter: video.plcmt [${e.video.plcmt}] must be an integer between 1-4 inclusive`,
                  ),
                  delete e.video.plcmt);
              })(t),
              p &&
                !t.video.hasOwnProperty('placement') &&
                (p === u.mn
                  ? (t.video.placement = 1)
                  : p === u.H6
                    ? (0, n.A)(r, 'playerConfig.floatOnScroll')
                      ? (t.video.placement = 5)
                      : ((t.video.placement = 3), (_ = !0))
                    : (0, o.logWarn)(
                        `IX Bid Adapter: Video context '${p}' is not supported`,
                      )),
              !t.video.w || !t.video.h)
            ) {
              const i =
                W((0, n.A)(t, 'video.playerSize')) ||
                W((0, n.A)(e, 'params.size'));
              if (!i)
                return (
                  (0, o.logWarn)(
                    'IX Bid Adapter: Video size is missing in [mediaTypes.video]',
                  ),
                  {}
                );
              (t.video.w = i[0]), (t.video.h = i[1]);
            }
            return F(e, t, s.G_), t;
          }
          function j(e, t) {
            const i = {};
            if (
              ((i.id = e.bidId),
              ne() &&
                (0, n.A)(e, 'params.externalId') &&
                (0, a.J)(i, 'ext.externalID', e.params.externalId),
              (0, n.A)(e, `params.${t}.siteId`) &&
                !isNaN(Number(e.params[t].siteId)))
            )
              switch (t) {
                case s.D4:
                  (0, a.J)(i, 'ext.siteID', e.params.banner.siteId.toString());
                  break;
                case s.G_:
                  (0, a.J)(i, 'ext.siteID', e.params.video.siteId.toString());
                  break;
                case s.s6:
                  (0, a.J)(i, 'ext.siteID', e.params.native.siteId.toString());
              }
            else
              e.params.siteId &&
                (0, a.J)(i, 'ext.siteID', e.params.siteId.toString());
            return (
              !e.params.hasOwnProperty('id') ||
                ('string' != typeof e.params.id &&
                  'number' != typeof e.params.id) ||
                (0, a.J)(i, 'ext.sid', String(e.params.id)),
              i
            );
          }
          function F(e, t, i) {
            let r = null,
              n = null;
            if (
              (e.params.bidFloor &&
                e.params.bidFloorCur &&
                (r = {
                  floor: e.params.bidFloor,
                  currency: e.params.bidFloorCur,
                }),
              (0, o.isFn)(e.getFloor))
            ) {
              let r = '*',
                a = '*';
              if (i && (0, o.contains)(b, i)) {
                const { w: e, h: n } = t[i];
                (r = i), (a = [e, n]);
              }
              try {
                n = e.getFloor({ mediaType: r, size: a });
              } catch (e) {
                (0, o.logWarn)(
                  'priceFloors module call getFloor failed, error : ',
                  e,
                );
              }
            }
            let d = !1;
            n
              ? ((t.bidfloor = n.floor),
                (t.bidfloorcur = n.currency),
                (0, a.J)(t, 'ext.fl', I.PBJS),
                (d = !0))
              : r &&
                ((t.bidfloor = r.floor),
                (t.bidfloorcur = r.currency),
                (0, a.J)(t, 'ext.fl', I.IX),
                (d = !0)),
              d &&
                (i == s.D4
                  ? ((0, a.J)(t, 'banner.ext.bidfloor', t.bidfloor),
                    (0, a.J)(t, 'banner.ext.fl', t.ext.fl))
                  : i == s.G_
                    ? ((0, a.J)(t, 'video.ext.bidfloor', t.bidfloor),
                      (0, a.J)(t, 'video.ext.fl', t.ext.fl))
                    : ((0, a.J)(t, 'native.ext.bidfloor', t.bidfloor),
                      (0, a.J)(t, 'native.ext.fl', t.ext.fl)));
          }
          function B(e, t, i) {
            const r = {},
              a = !(!(0, n.A)(e, 'exp') || !(0, o.isInteger)(e.exp)),
              d = (0, n.A)(e, 'dealid') || (0, n.A)(e, 'ext.dealid');
            h.hasOwnProperty(t)
              ? (r.cpm = e.price / h[t])
              : (r.cpm = e.price / 100),
              (r.requestId = e.impid),
              d && (r.dealId = d),
              (r.netRevenue = true),
              (r.currency = t),
              (r.creativeId = e.hasOwnProperty('crid') ? e.crid : '-'),
              e.mtype != k || ((!e.ext || e.ext.vasturl) && e.ext)
                ? e.ext && e.ext.vasturl && (r.vastUrl = e.ext.vasturl)
                : (r.vastXml = e.adm);
            let p = null;
            if (
              'string' == typeof e.adm &&
              '{' === e.adm[0] &&
              '}' === e.adm[e.adm.length - 1]
            )
              try {
                p = JSON.parse(e.adm);
              } catch (e) {
                (0, o.logWarn)('adm looks like JSON but failed to parse: ', e);
              }
            return (
              (e.ext && e.ext.vasturl) || e.mtype == k
                ? ((r.width = i.video.w),
                  (r.height = i.video.h),
                  (r.mediaType = s.G_),
                  (r.mediaTypes = i.mediaTypes),
                  (r.ttl = a ? e.exp : 3600))
                : p && p.native
                  ? ((r.native = { ortb: p.native }),
                    (r.width = e.w ? e.w : 1),
                    (r.height = e.h ? e.h : 1),
                    (r.mediaType = s.s6),
                    (r.ttl = a ? e.exp : 3600))
                  : ((r.ad = e.adm),
                    (r.width = e.w),
                    (r.height = e.h),
                    (r.mediaType = s.D4),
                    (r.ttl = a ? e.exp : 300)),
              (r.meta = {}),
              (r.meta.networkId = (0, n.A)(e, 'ext.dspid')),
              (r.meta.brandId = (0, n.A)(e, 'ext.advbrandid')),
              (r.meta.brandName = (0, n.A)(e, 'ext.advbrand')),
              e.adomain &&
                e.adomain.length > 0 &&
                (r.meta.advertiserDomains = e.adomain),
              e.ext?.dsa && (r.meta.dsa = e.ext.dsa),
              r
            );
          }
          function z(e) {
            return (
              Array.isArray(e) &&
              2 === e.length &&
              (0, o.isInteger)(e[0]) &&
              (0, o.isInteger)(e[1])
            );
          }
          function R() {
            let e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : [],
              t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : [];
            if (z(e)) return e[0] === t[0] && e[1] === t[1];
            for (let i = 0; i < e.length; i++)
              if (e[i][0] === t[0] && e[i][1] === t[1]) return !0;
            return !1;
          }
          function $(e, t) {
            const i = [];
            e ||
              (0, o.logWarn)(
                'IX Bid Adapter: mediaTypes.video is the preferred location for video params in ad unit',
              );
            for (let r of w) {
              const n = e && e.hasOwnProperty(r),
                o = t && t.hasOwnProperty(r);
              n ||
                o ||
                i.push(
                  `IX Bid Adapter: ${r} is not included in either the adunit or params level`,
                );
            }
            const r = e && e.hasOwnProperty('protocol'),
              n = e && e.hasOwnProperty('protocols'),
              a = t && t.hasOwnProperty('protocol'),
              s = t && t.hasOwnProperty('protocols');
            return (
              r ||
                n ||
                a ||
                s ||
                i.push(
                  'IX Bid Adapter: protocol/protcols is not included in either the adunit or params level',
                ),
              i
            );
          }
          function W() {
            let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : [];
            return z(e) ? e : !!z(e[0]) && e[0];
          }
          function X(e, t, i) {
            if (!e) return;
            return {
              ...(0, l.I6)(i, (t) => t.bidId === e),
              ...(0, l.I6)(t, (t) => t.id === e),
            };
          }
          function N(e, t, i, r) {
            let s = 'https://htlb.casalemedia.com/openrtb/pbjs',
              p = (function (e) {
                let t = [],
                  i = {};
                if ((0, o.isArray)(e))
                  for (const r of e) {
                    const e = A.hasOwnProperty(r.source),
                      o = E.isFeatureEnabled('pbjs_allow_all_eids'),
                      a = (0, n.A)(r, 'uids.0');
                    if (
                      (e || o) &&
                      a &&
                      ((i[r.source] = !0),
                      e &&
                        '' !== A[r.source] &&
                        (r.uids[0].ext = { rtiPartner: A[r.source] }),
                      delete r.uids[0].atype,
                      t.push(r),
                      t.length >= x)
                    )
                      break;
                  }
                return { toSend: t, seenSources: i };
              })((0, n.A)(e, '0.userIdAsEids')),
              l = p.toSend;
            window.headertag &&
              'function' == typeof window.headertag.getIdentityInfo &&
              (function (e, t) {
                let i = window.headertag.getIdentityInfo();
                if (i && 'object' == typeof i)
                  for (const r in i) {
                    if (e.length >= x) return;
                    if (i.hasOwnProperty(r)) {
                      let n = i[r];
                      !n.responsePending &&
                        n.data &&
                        'object' == typeof n.data &&
                        Object.keys(n.data).length &&
                        !t.seenSources[n.data.source] &&
                        e.push(n.data);
                    }
                  }
              })(l, p);
            const c = [];
            let u = (function (e) {
              const t = {};
              return (
                (t.id = e[0].bidderRequestId.toString()),
                (t.site = {}),
                (t.ext = {}),
                (t.ext.source = 'prebid'),
                (t.ext.ixdiag = {}),
                (t.ext.ixdiag.ls = S.localStorageIsEnabled()),
                (t.imp = []),
                (t.at = 1),
                t
              );
            })(e);
            u = (function (e, t) {
              t.length > 0 &&
                ((e.ext.features = {}),
                t.forEach((t) => {
                  e.ext.features[t] = { activated: E.isFeatureEnabled(t) };
                }));
              return e;
            })(u, E.REQUESTED_FEATURE_TOGGLES);
            let m = (function (e, t) {
              var i = e
                .map((e) => e.adUnitCode)
                .filter((e, t, i) => i.indexOf(e) === t);
              let r = (0, n.A)(e, '0.userIdAsEids', []),
                o = {
                  mfu: 0,
                  bu: 0,
                  iu: 0,
                  nu: 0,
                  ou: 0,
                  allu: 0,
                  ren: !1,
                  version: '9.0.0',
                  userIds: V(e[0]),
                  url: window.location.href.split('?')[0],
                  vpd: _,
                  ae: t,
                  eidLength: r.length,
                };
              for (let t of i) {
                let i = e.filter((e) => e.adUnitCode === t)[0];
                (0, n.A)(i, 'mediaTypes') &&
                  (Object.keys(i.mediaTypes).length > 1 && o.mfu++,
                  (0, n.A)(i, 'mediaTypes.native') && o.nu++,
                  (0, n.A)(i, 'mediaTypes.banner') && o.bu++,
                  'outstream' === (0, n.A)(i, 'mediaTypes.video.context') &&
                    (o.ou++, re(i) && (o.ren = !0)),
                  'instream' === (0, n.A)(i, 'mediaTypes.video.context') &&
                    o.iu++,
                  o.allu++);
              }
              return o;
            })(e, (0, n.A)(t, 'paapi.enabled'));
            for (let e in m) u.ext.ixdiag[e] = m[e];
            (u = (function (e, t, i, r, o) {
              const a = (0, n.A)(t, 'timeout');
              a && (e.ext.ixdiag.tmax = a);
              d.$W.getConfig('userSync') &&
                (e.ext.ixdiag.syncsPerBidder =
                  d.$W.getConfig('userSync').syncsPerBidder);
              (e.ext.ixdiag.imps = Object.keys(i).length),
                (e.source = { tid: t?.ortb2?.source?.tid }),
                r[0].schain &&
                  ((e.source.ext = {}), (e.source.ext.schain = r[0].schain));
              o.length > 0 && ((e.user = {}), (e.user.eids = o));
              document.referrer &&
                '' !== document.referrer &&
                (e.site.ref = document.referrer);
              return e;
            })(u, t, i, e, l)),
              (u = (function (e, t) {
                if (t) {
                  t.gdprConsent &&
                    ((T = t.gdprConsent),
                    T.hasOwnProperty('gdprApplies') &&
                      (e.regs = { ext: { gdpr: T.gdprApplies ? 1 : 0 } }),
                    T.hasOwnProperty('consentString') &&
                      ((e.user = e.user || {}),
                      (e.user.ext = { consent: T.consentString || '' }),
                      T.hasOwnProperty('addtlConsent') &&
                        T.addtlConsent &&
                        (e.user.ext.consented_providers_settings = {
                          addtl_consent: T.addtlConsent,
                        }))),
                    t.uspConsent &&
                      ((0, a.J)(e, 'regs.ext.us_privacy', t.uspConsent),
                      (D = t.uspConsent));
                  const i = (0, n.A)(t, 'refererInfo.page');
                  i && (e.site.page = i),
                    t.gppConsent &&
                      ((0, a.J)(e, 'regs.gpp', t.gppConsent.gppString),
                      (0, a.J)(
                        e,
                        'regs.gpp_sid',
                        t.gppConsent.applicableSections,
                      ));
                }
                d.$W.getConfig('coppa') && (0, a.J)(e, 'regs.coppa', 1);
                return e;
              })(u, t));
            let f = {};
            e[0].params.siteId && ((P = e[0].params.siteId), (f.s = P));
            const g = Object.keys(i);
            let b = !1;
            for (let r = 0; r < g.length && !(c.length >= 4); r++) {
              u = q(i, g, u, r);
              const a = (0, n.A)(t, 'ortb2') || {},
                p = { ...(a.site || a.context) };
              p.page = G(t);
              const l = { ...a.user };
              (0, o.isEmpty)(a) ||
                b ||
                ((u = L(t, u, a, p, l)),
                (u.site = (0, o.mergeDeep)({}, u.site, p)),
                (u.user = (0, o.mergeDeep)({}, u.user, l)),
                (b = !0)),
                (u = M(i, u, g, r, f, s));
              const m = r === g.length - 1;
              if (((u = le(u)), (u = se(u)), (u = de(u)), m)) {
                let t = `${s}?`;
                0 !== P && (t += `s=${P}`),
                  ne() &&
                    ((t += 0 !== P ? '&' : ''),
                    (t += `p=${d.$W.getConfig('exchangeId')}`)),
                  c.push({
                    method: 'POST',
                    url: t,
                    data: (0, o.deepClone)(u),
                    option: { contentType: 'text/plain' },
                    validBidRequests: e,
                  }),
                  (u.imp = []),
                  (b = !1);
              }
            }
            return c;
          }
          function q(e, t, i, r) {
            const d = e[t[r]],
              { missingImps: p = [], ixImps: l = [] } = d,
              c = { ixImps: l, missingBannerImpressions: p },
              u = Object.keys(c)
                .map((e) => c[e])
                .filter((e) => Array.isArray(e))
                .reduce((e, t) => e.concat(...t), []),
              m = e[t[r]].gpid,
              f = e[t[r]].dfp_ad_unit_code,
              g = e[t[r]].tid,
              b = e[t[r]].sid,
              x = e[t[r]].ae,
              y = e[t[r]].paapi,
              h = u.filter((e) => s.D4 in e),
              I = u.filter((e) => !(s.D4 in e));
            if (h.length > 0) {
              const s = h.reduce(
                (e, t) => (
                  e[t.adunitCode] || (e[t.adunitCode] = []),
                  e[t.adunitCode].push(t),
                  e
                ),
                {},
              );
              for (const d in s) {
                const p = s[d],
                  {
                    id: l,
                    banner: { topframe: c },
                  } = p[0];
                let u = (0, n.A)(p[0], 'ext.externalID');
                const h = {
                  id: l,
                  banner: {
                    topframe: c,
                    format: p.map((e) => {
                      let {
                        banner: { w: t, h: i },
                        ext: r,
                      } = e;
                      return { w: t, h: i, ext: r };
                    }),
                  },
                };
                for (let e = 0; e < h.banner.format.length; e++)
                  null != h.banner.format[e].ext &&
                    (null != h.banner.format[e].ext.sid &&
                      delete h.banner.format[e].ext.sid,
                    null != h.banner.format[e].ext.externalID &&
                      delete h.banner.format[e].ext.externalID),
                    'bidfloor' in p[e] &&
                      (h.banner.format[e].ext.bidfloor = p[e].bidfloor),
                    '{}' === JSON.stringify(h.banner.format[e].ext) &&
                      delete h.banner.format[e].ext;
                const I = e[t[r]].pos;
                (0, o.isInteger)(I) && (h.banner.pos = I),
                  (f || m || g || b || x || u || y) &&
                    ((h.ext = {}),
                    (h.ext.dfp_ad_unit_code = f),
                    (h.ext.gpid = m),
                    (h.ext.tid = g),
                    (h.ext.sid = b),
                    (h.ext.externalID = u),
                    1 == x && ((h.ext.ae = 1), (h.ext.paapi = y))),
                  'bidfloor' in p[0] && (h.bidfloor = p[0].bidfloor),
                  'bidfloorcur' in p[0] && (h.bidfloorcur = p[0].bidfloorcur);
                const v = e[t[r]].adUnitFPD;
                v && (0, a.J)(h, 'ext.data', v), i.imp.push(h);
              }
            }
            return (
              I.length > 0 &&
                I.forEach((e) => {
                  if ((m && (0, a.J)(e, 'ext.gpid', m), i.imp.length > 0)) {
                    let t = !1;
                    i.imp.forEach((r, o) => {
                      e.id === r.id && s.G_ in e
                        ? ((r.video = e.video),
                          (r.video.ext = Object.assign({}, e.video.ext, e.ext)),
                          (0, n.A)(r, 'video.ext.bidfloor', !1) &&
                            (0, n.A)(r, 'bidfloor', !1) &&
                            r.video.ext.bidfloor < r.bidfloor &&
                            (r.bidfloor = r.video.ext.bidfloor),
                          !(0, n.A)(r, 'ext.siteID', !1) &&
                            (0, n.A)(e, 'video.ext.siteID') &&
                            ((0, a.J)(r, 'ext.siteID', e.video.ext.siteID),
                            (0, a.J)(i, 'ext.ixdiag.usid', !0)),
                          (t = !0))
                        : e.id === r.id &&
                          s.s6 in e &&
                          ((r.native = e.native),
                          (r.native.ext = Object.assign(
                            {},
                            e.native.ext,
                            e.ext,
                          )),
                          (0, n.A)(r, 'native.ext.bidfloor', !1) &&
                            (0, n.A)(r, 'bidfloor', !1) &&
                            r.native.ext.bidfloor < r.bidfloor &&
                            (r.bidfloor = r.native.ext.bidfloor),
                          !(0, n.A)(r, 'ext.siteID', !1) &&
                            (0, n.A)(e, 'native.ext.siteID', !1) &&
                            ((0, a.J)(r, 'ext.siteID', e.native.ext.siteID),
                            (0, a.J)(i, 'ext.ixdiag.usid', !0)),
                          (t = !0));
                    }),
                      t || i.imp.push(e);
                  } else i.imp.push(e);
                }),
              i
            );
          }
          function G(e) {
            const t = (e && e.bidderCode) || 'ix',
              i = d.$W.getConfig(t);
            let r = '';
            if (
              ((r = (0, n.A)(e, 'ortb2.site.page')
                ? e.ortb2.site.page
                : (0, n.A)(e, 'refererInfo.page')),
              i && 'object' == typeof i.firstPartyData)
            ) {
              return (function (e, t, i) {
                let r;
                try {
                  r = new URL(t);
                } catch (i) {
                  (0, o.logWarn)(
                    `IX Bid Adapter: Invalid URL set in ortb2.site.page: ${t}. Using referer URL instead.`,
                  ),
                    (r = new URL((0, n.A)(e, 'refererInfo.page')));
                }
                const a = new URLSearchParams(r.search);
                for (const [e, t] of Object.entries(i))
                  a.has(e) || a.append(e, t);
                return (r.search = a.toString()), r.toString();
              })(e, r, i.firstPartyData);
            }
            return r;
          }
          function L(e, t, i, r, n) {
            if (
              ((t.ext.ixdiag.fpd = !0),
              Object.keys(r).forEach((e) => {
                -1 === v.SITE.indexOf(e) && delete r[e];
              }),
              Object.keys(n).forEach((e) => {
                -1 === v.USER.indexOf(e) && delete n[e];
              }),
              i.device)
            ) {
              const e = { ...i.device.sua };
              (0, o.isEmpty)(e) || (0, a.J)(t, 'device.sua', e);
            }
            if (
              i.hasOwnProperty('regs') &&
              !e.gppConsent &&
              (i.regs.hasOwnProperty('gpp') &&
                'string' == typeof i.regs.gpp &&
                (0, a.J)(t, 'regs.gpp', i.regs.gpp),
              i.regs.hasOwnProperty('gpp_sid') &&
                Array.isArray(i.regs.gpp_sid) &&
                (0, a.J)(t, 'regs.gpp_sid', i.regs.gpp_sid),
              i.regs.ext?.dsa)
            ) {
              const e = i.regs.ext.dsa,
                r = {};
              if (
                (['dsarequired', 'pubrender', 'datatopub'].forEach((t) => {
                  (0, o.isNumber)(e[t]) && (r[t] = e[t]);
                }),
                (0, o.isArray)(e.transparency))
              ) {
                const t = [];
                e.transparency.forEach((e) => {
                  (0, o.isPlainObject)(e) &&
                    (0, o.isStr)(e.domain) &&
                    '' != e.domain &&
                    (0, o.isArray)(e.dsaparams) &&
                    e.dsaparams.every((e) => (0, o.isNumber)(e)) &&
                    t.push(e);
                }),
                  t.length > 0 && (r.transparency = t);
              }
              (0, o.isEmpty)(r) || (0, a.J)(t, 'regs.ext.dsa', r);
            }
            return t;
          }
          function H(e, t) {
            const i = (0, n.A)(t, 'ortb2Imp.ext.data');
            i && (0, a.J)(e, 'ext.data', i);
          }
          function M(e, t, i, r, n, o) {
            const a = e[i[r]].pbadslot,
              s = e[i[r]].tagId,
              d = e[i[r]].adUnitCode,
              p = e[i[r]].divId;
            return (
              (a || s || d || p) &&
                ((t.ext.ixdiag.pbadslot = a),
                (t.ext.ixdiag.tagid = s),
                (t.ext.ixdiag.adunitcode = d),
                (t.ext.ixdiag.divId = p)),
              t
            );
          }
          function V(e) {
            const t = e.userId || {};
            return C.filter((e) => t[e]);
          }
          function Q(e, t) {
            if (t)
              for (let i = 0; i < e.length; i++) {
                const r = e[i];
                if (t[0] === r[0] && t[1] === r[1]) {
                  e.splice(i, 1);
                  break;
                }
              }
          }
          function Y(e, t) {
            const i = (function (e) {
              const t = j(e, s.s6),
                i = e.nativeOrtbRequest;
              (i.eventtrackers = [{ event: 1, methods: [1, 2] }]),
                (i.privacy = 1),
                (t.native = { request: JSON.stringify(i), ver: '1.2' });
              let r = (0, n.A)(e, 'ortb2Imp.ext.tid');
              return r && (0, a.J)(t, 'ext.tid', r), H(t, e), F(e, t, s.s6), t;
            })(e);
            if (0 != Object.keys(i).length) {
              (t[e.adUnitCode] = {}),
                (t[e.adUnitCode].ixImps = []),
                t[e.adUnitCode].ixImps.push(i),
                (t[e.adUnitCode].gpid = (0, n.A)(e, 'ortb2Imp.ext.gpid')),
                (t[e.adUnitCode].dfp_ad_unit_code = (0, n.A)(
                  e,
                  'ortb2Imp.ext.data.adserver.adslot',
                )),
                (t[e.adUnitCode].pbadslot = (0, n.A)(
                  e,
                  'ortb2Imp.ext.data.pbadslot',
                )),
                (t[e.adUnitCode].tagId = (0, n.A)(e, 'params.tagId'));
              const r = e.adUnitCode,
                o = document.getElementById(r) ? r : (0, f.p)(r).divId;
              (t[e.adUnitCode].adUnitCode = r), (t[e.adUnitCode].divId = o);
            }
          }
          function Z(e, t) {
            const i = J(e);
            if (0 != Object.keys(i).length) {
              (t[e.adUnitCode] = {}),
                (t[e.adUnitCode].ixImps = []),
                t[e.adUnitCode].ixImps.push(i),
                (t[e.adUnitCode].gpid = (0, n.A)(e, 'ortb2Imp.ext.gpid')),
                (t[e.adUnitCode].dfp_ad_unit_code = (0, n.A)(
                  e,
                  'ortb2Imp.ext.data.adserver.adslot',
                )),
                (t[e.adUnitCode].pbadslot = (0, n.A)(
                  e,
                  'ortb2Imp.ext.data.pbadslot',
                )),
                (t[e.adUnitCode].tagId = (0, n.A)(e, 'params.tagId'));
              const r = e.adUnitCode,
                o = document.getElementById(r) ? r : (0, f.p)(r).divId;
              (t[e.adUnitCode].adUnitCode = r), (t[e.adUnitCode].divId = o);
            }
          }
          function K(e, t, i, r) {
            let a = (function (e) {
              const t = j(e, s.D4);
              (t.banner = {}), (t.adunitCode = e.adUnitCode);
              const i = (0, n.A)(e, 'params.size');
              return (
                i && ((t.banner.w = i[0]), (t.banner.h = i[1])),
                (t.banner.topframe = (0, o.inIframe)() ? 0 : 1),
                F(e, t, s.D4),
                t
              );
            })(e);
            const d = R(
              (0, n.A)(e, 'mediaTypes.banner.sizes'),
              (0, n.A)(e, 'params.size'),
            );
            i.hasOwnProperty(e.adUnitCode) || (i[e.adUnitCode] = {}),
              (i[e.adUnitCode].gpid = (0, n.A)(e, 'ortb2Imp.ext.gpid')),
              (i[e.adUnitCode].dfp_ad_unit_code = (0, n.A)(
                e,
                'ortb2Imp.ext.data.adserver.adslot',
              )),
              (i[e.adUnitCode].tid = (0, n.A)(e, 'ortb2Imp.ext.tid')),
              (i[e.adUnitCode].pbadslot = (0, n.A)(
                e,
                'ortb2Imp.ext.data.pbadslot',
              )),
              (i[e.adUnitCode].tagId = (0, n.A)(e, 'params.tagId')),
              (i[e.adUnitCode].pos = (0, n.A)(e, 'mediaTypes.banner.pos'));
            if ((0, n.A)(r, 'paapi.enabled')) {
              const t = (0, n.A)(e, 'ortb2Imp.ext.ae'),
                r = (0, n.A)(e, 'ortb2Imp.ext.paapi');
              r && (i[e.adUnitCode].paapi = r),
                t &&
                  ((0, o.isInteger)(t)
                    ? (i[e.adUnitCode].ae = t)
                    : (0, o.logWarn)(
                        'error setting auction environment flag - must be an integer',
                      ));
            }
            const p = (0, n.A)(e, 'ortb2Imp.ext.data');
            p && (i[e.adUnitCode].adUnitFPD = p);
            const l = (0, n.A)(e, 'params.id');
            !l ||
              ('string' != typeof l && 'number' != typeof l) ||
              (i[e.adUnitCode].sid = String(l));
            const c = e.adUnitCode,
              u = document.getElementById(c) ? c : (0, f.p)(c).divId;
            (i[e.adUnitCode].adUnitCode = c),
              (i[e.adUnitCode].divId = u),
              d &&
                (i[e.adUnitCode].hasOwnProperty('ixImps') ||
                  (i[e.adUnitCode].ixImps = []),
                i[e.adUnitCode].ixImps.push(a)),
              (function (e, t, i) {
                if (t.hasOwnProperty(e.adUnitCode)) {
                  let i = [];
                  t[e.adUnitCode].hasOwnProperty('missingSizes') &&
                    (i = t[e.adUnitCode].missingSizes),
                    Q(i, e.params.size),
                    (t[e.adUnitCode].missingSizes = i);
                } else if ((0, n.A)(e, 'mediaTypes.banner.sizes')) {
                  let r = (0, o.deepClone)(e.mediaTypes.banner.sizes);
                  Q(r, e.params.size);
                  let n = { missingSizes: r, impression: i };
                  t[e.adUnitCode] = n;
                }
              })(e, t, a);
          }
          function ee(e, t, i) {
            const r = (0, o.deepClone)(t);
            return (r.banner.w = i[0]), (r.banner.h = i[1]), F(e, r, s.D4), r;
          }
          function te(e) {
            e.renderer.push(function () {
              const t = e.adUnitCode,
                i = document.getElementById(t) ? t : (0, f.p)(t).divId;
              i
                ? window.createIXPlayer(i, e)
                : (0, o.logWarn)(
                    `IX Bid Adapter: adUnitCode: ${i} not found on page.`,
                  );
            });
          }
          function ie(e, t) {
            const i = m.A4.install({ id: e, url: t, loaded: !1 });
            try {
              i.setRender(te);
            } catch (e) {
              return (
                (0, o.logWarn)('Prebid Error calling setRender on renderer', e),
                null
              );
            }
            return t
              ? i
              : ((0, o.logWarn)('Outstream renderer URL not found'), null);
          }
          function re(e) {
            if ('outstream' !== (0, n.A)(e, 'mediaTypes.video.context'))
              return !1;
            let t = (0, n.A)(e, 'mediaTypes.video.renderer');
            t || (t = (0, n.A)(e, 'renderer'));
            return (
              !!('object' != typeof t || !t.url || !t.render) || t.backupOnly
            );
          }
          function ne() {
            let e = d.$W.getConfig('exchangeId');
            return (
              !('number' != typeof e || !isFinite(e)) ||
              !('string' != typeof e || '' === e.trim() || !isFinite(Number(e)))
            );
          }
          const oe = {
            code: g,
            gvlid: 10,
            supportedMediaTypes: b,
            isBidRequestValid: function (e) {
              const t = (0, n.A)(e, 'params.video'),
                i = (0, n.A)(e, 'params.size'),
                r = (0, n.A)(e, 'mediaTypes.banner.sizes'),
                a = (0, n.A)(e, 'mediaTypes.video'),
                s = (0, n.A)(e, 'mediaTypes.video.playerSize'),
                d = e.params.hasOwnProperty('bidFloor'),
                p = e.params.hasOwnProperty('bidFloorCur');
              if (
                e.hasOwnProperty('mediaType') &&
                !(0, o.contains)(b, e.mediaType)
              )
                return (
                  (0, o.logWarn)(
                    'IX Bid Adapter: media type is not supported.',
                  ),
                  !1
                );
              if ((0, n.A)(e, 'mediaTypes.banner') && !r) return !1;
              if (i) {
                const t = W(i);
                if (!t)
                  return (
                    (0, o.logError)('IX Bid Adapter: size has invalid format.'),
                    !1
                  );
                if (!R(e.sizes, t) && !R(s, t) && !R(r, t))
                  return (
                    (0, o.logError)(
                      'IX Bid Adapter: bid size is not included in ad unit sizes or player size.',
                    ),
                    !1
                  );
              }
              if (!ne() && null == e.params.siteId)
                return (
                  (0, o.logError)(
                    'IX Bid Adapter: Invalid configuration - either siteId or exchangeId must be configured.',
                  ),
                  !1
                );
              if (void 0 !== e.params.siteId) {
                if (
                  'string' != typeof e.params.siteId &&
                  'number' != typeof e.params.siteId
                )
                  return (
                    (0, o.logError)(
                      'IX Bid Adapter: siteId must be string or number type.',
                    ),
                    !1
                  );
                if (
                  'string' != typeof e.params.siteId &&
                  isNaN(Number(e.params.siteId))
                )
                  return (
                    (0, o.logError)('IX Bid Adapter: siteId must valid value'),
                    !1
                  );
              }
              if (
                (d || p) &&
                !(
                  d &&
                  p &&
                  ((l = e.params.bidFloor),
                  (c = e.params.bidFloorCur),
                  Boolean(
                    'number' == typeof l &&
                      'string' == typeof c &&
                      c.match(/^[A-Z]{3}$/),
                  ))
                )
              )
                return (
                  (0, o.logError)(
                    'IX Bid Adapter: bidFloor / bidFloorCur parameter has invalid format.',
                  ),
                  !1
                );
              var l, c;
              if (a && t) {
                const i = J(e).video,
                  r = $(a, t);
                if (
                  (0, n.A)(e, 'mediaTypes.video.context') === u.H6 &&
                  re(e) &&
                  i
                ) {
                  const e = [(0, n.A)(i, 'w'), (0, n.A)(i, 'h')];
                  if (!(e[0] >= y[0] && e[1] >= y[1]))
                    return (
                      (0, o.logError)(
                        `IX Bid Adapter: ${e} is an invalid size for IX outstream renderer`,
                      ),
                      !1
                    );
                }
                if (r.length)
                  return (
                    r.forEach((e) => {
                      (0, o.logError)(e);
                    }),
                    !1
                  );
              }
              return (function (e) {
                return (
                  void 0 === (0, n.A)(e, 'mediaTypes.native') ||
                  (e.nativeOrtbRequest &&
                    Array.isArray(e.nativeOrtbRequest.assets) &&
                    e.nativeOrtbRequest.assets.length > 0)
                );
              })(e);
            },
            resetSiteID: function () {
              P = 0;
            },
            buildRequests: function (e, t) {
              const i = [],
                r = {},
                a = {},
                d = {},
                p = {};
              E.getFeatureToggles(),
                e.forEach((e) => {
                  const i = Object.keys((0, n.A)(e, 'mediaTypes', {}));
                  for (const n in i)
                    switch (i[n]) {
                      case s.D4:
                        K(e, p, r, t);
                        break;
                      case s.G_:
                        Z(e, a);
                        break;
                      case s.s6:
                        Y(e, d);
                        break;
                      default:
                        (0, o.logWarn)(
                          `IX Bid Adapter: ad unit mediaTypes ${n} is not supported`,
                        );
                    }
                });
              for (let t in p)
                if (p.hasOwnProperty(t)) {
                  let i = p[t].missingSizes;
                  r.hasOwnProperty(t) || (r[t] = {}),
                    r[t].hasOwnProperty('missingImps') ||
                      ((r[t].missingImps = []), (r[t].missingCount = 0));
                  let n = p[t].impression;
                  for (let o = 0; o < i.length; o++) {
                    let a = ee(e[0], n, i[o]);
                    r[t].missingImps.push(a), r[t].missingCount++;
                  }
                }
              let l = [];
              return (
                Object.keys(r).length > 0 && l.push(r),
                Object.keys(a).length > 0 && l.push(a),
                Object.keys(d).length > 0 && l.push(d),
                E.isFeatureEnabled('pbjs_enable_multiformat')
                  ? i.push(
                      ...N(
                        e,
                        t,
                        (function (e) {
                          const t = {};
                          return (
                            e.forEach((e) => {
                              Object.keys(e).forEach((i) => {
                                Object.keys(t).includes(i)
                                  ? t[i].hasOwnProperty('ixImps') &&
                                    e[i].hasOwnProperty('ixImps')
                                    ? (t[i].ixImps = [
                                        ...t[i].ixImps,
                                        ...e[i].ixImps,
                                      ])
                                    : t[i].hasOwnProperty('missingImps') &&
                                        e[i].hasOwnProperty('missingImps')
                                      ? (t[i].missingImps = [
                                          ...t[i].missingImps,
                                          ...e[i].missingImps,
                                        ])
                                      : e[i].hasOwnProperty('ixImps')
                                        ? (t[i].ixImps = e[i].ixImps)
                                        : e[i].hasOwnProperty('missingImps') &&
                                          (t[i].missingImps = e[i].missingImps)
                                  : (t[i] = e[i]);
                              });
                            }),
                            t
                          );
                        })(l),
                      ),
                    )
                  : (Object.keys(r).length > 0 && i.push(...N(e, t, r)),
                    Object.keys(a).length > 0 && i.push(...N(e, t, a)),
                    Object.keys(d).length > 0 && i.push(...N(e, t, d))),
                i
              );
            },
            interpretResponse: function (e, t) {
              const i = [];
              let r = null,
                a =
                  (0, n.A)(e, 'body.ext.protectedAudienceAuctionConfigs') || [];
              if ((E.setFeatureToggles(e), !e.hasOwnProperty('body'))) return i;
              const d = e.body,
                p = d.seatbid || [];
              for (let e = 0; e < p.length; e++) {
                if (!p[e].hasOwnProperty('bid')) continue;
                const a = p[e].bid,
                  l = t.data;
                for (let e = 0; e < a.length; e++) {
                  const o = X(a[e].impid, l.imp, t.validBidRequests);
                  if (
                    ((r = B(a[e], d.cur, o)), r.mediaType === s.G_ && re(o))
                  ) {
                    const t = (0, n.A)(d, 'ext.videoplayerurl');
                    if (((r.renderer = ie(a[e].bidId, t)), !r.renderer))
                      continue;
                  }
                  i.push(r);
                }
                if ((0, n.A)(l, 'ext.ixdiag.err') && S.localStorageIsEnabled())
                  try {
                    S.removeDataFromLocalStorage('ixdiag');
                  } catch (e) {
                    (0, o.logError)(
                      'ix can not clear ixdiag from localStorage.',
                    );
                  }
              }
              if (!(Array.isArray(a) && a.length > 0)) return i;
              a = a.filter(
                (e) =>
                  !!(function (e) {
                    return 'object' == typeof e && null !== e;
                  })(e) ||
                  ((0, o.logWarn)('Malformed auction config detected:', e), !1),
              );
              try {
                return { bids: i, paapi: a };
              } catch (e) {
                return (0, o.logWarn)('Error attaching AuctionConfigs', e), i;
              }
            },
            getUserSyncs: function (e, t) {
              const i = [];
              let r = null;
              if (
                (t.length > 0 &&
                  (r = (0, n.A)(
                    t[0],
                    'body.ext.publishersyncsperbidderoverride',
                  )),
                void 0 !== r && 0 == r)
              )
                return [];
              if (e.iframeEnabled)
                i.push({
                  type: 'iframe',
                  url: 'https://js-sec.indexww.com/um/ixmatch.html',
                });
              else {
                let e = null;
                d.$W.getConfig('userSync') &&
                  (e = d.$W.getConfig('userSync').syncsPerBidder),
                  0 === e && (e = r),
                  (e = r && (0 === e || e) ? (r > e ? e : r) : 1);
                for (let t = 0; t < e; t++)
                  i.push({ type: 'image', url: ae(e, t) });
              }
              return i;
            },
          };
          function ae(e, t) {
            let i = '',
              r = '0';
            return (
              T &&
                T.hasOwnProperty('gdprApplies') &&
                (r = T.gdprApplies ? '1' : '0'),
              T &&
                T.hasOwnProperty('consentString') &&
                (i = T.consentString || ''),
              'https://dsum.casalemedia.com/pbusermatch?origin=prebid' +
                (0 !== P ? '&site_id=' + P.toString() : '') +
                '&p=' +
                e.toString() +
                '&i=' +
                t.toString() +
                '&gdpr=' +
                r +
                '&gdpr_consent=' +
                i +
                '&us_privacy=' +
                (D || '')
            );
          }
          function se(e) {
            return (
              e.imp.forEach((t, i) => {
                const r = t.ext;
                if (null == r) return e;
                pe(t) < 2 ||
                  Object.keys(r).forEach((n) => {
                    if (s.D4 in t) {
                      const o = t.banner.ext;
                      if (
                        (void 0 !== o &&
                          void 0 !== o[n] &&
                          o[n] == r[n] &&
                          delete e.imp[i].banner.ext[n],
                        void 0 !== t.banner.format)
                      )
                        for (let o = 0; o < t.banner.format.length; o++)
                          null != t.banner.format[o].ext &&
                            null != t.banner.format[o].ext[n] &&
                            t.banner.format[o].ext[n] == r[n] &&
                            delete e.imp[i].banner.format[o].ext[n];
                    }
                    if (s.G_ in t) {
                      const o = t.video.ext;
                      void 0 !== o &&
                        void 0 !== o[n] &&
                        o[n] == r[n] &&
                        delete e.imp[i].video.ext[n];
                    }
                    if (s.s6 in t) {
                      const o = t.native.ext;
                      void 0 !== o &&
                        void 0 !== o[n] &&
                        o[n] == r[n] &&
                        delete e.imp[i].native.ext[n];
                    }
                  });
              }),
              e
            );
          }
          function de(e) {
            return (
              e.imp.forEach((t, i) => {
                if (null == t.ext) return e;
                if (!(pe(t) < 2)) {
                  if (s.D4 in t) {
                    const r = t.banner.ext;
                    if (
                      (void 0 !== r &&
                        void 0 !== r.siteID &&
                        delete e.imp[i].banner.ext.siteID,
                      void 0 !== t.banner.format)
                    )
                      for (let r = 0; r < t.banner.format.length; r++)
                        void 0 !== t.banner.format[r].ext &&
                          void 0 !== t.banner.format[r].ext.siteID &&
                          ((0, a.J)(
                            e.imp[i],
                            'ext.siteID',
                            t.banner.format[r].ext.siteID,
                          ),
                          (0, a.J)(e, 'ext.ixdiag.usid', !0),
                          delete e.imp[i].banner.format[r].ext.siteID);
                  }
                  if (s.G_ in t) {
                    const r = t.video.ext;
                    void 0 !== r &&
                      void 0 !== r.siteID &&
                      delete e.imp[i].video.ext.siteID;
                  }
                  if (s.s6 in t) {
                    const r = t.native.ext;
                    void 0 !== r &&
                      void 0 !== r.siteID &&
                      delete e.imp[i].native.ext.siteID;
                  }
                }
              }),
              e
            );
          }
          function pe(e) {
            let t = 0;
            return (
              void 0 !== e.banner && (t += 1),
              void 0 !== e.video && (t += 1),
              void 0 !== e.native && (t += 1),
              t
            );
          }
          function le(e) {
            return (
              null == e.device && (e.device = {}),
              (e.device.h = window.screen.height),
              (e.device.w = window.screen.width),
              e
            );
          }
          (0, c.a$)(oe), (0, r.E)('ixBidAdapter');
        },
      },
      (e) => {
        e.O(0, [33005, 60802, 51085], () => {
          return (t = 77764), e((e.s = t));
          var t;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [74682],
      {
        11010: (t, e, n) => {
          var r = n(7873),
            i = n(16833),
            o = n(43272),
            s = n(68044),
            a = n(91069),
            c = n(70433),
            l = n(15901);
          const u = 'jwplayer',
            d = u + '.com',
            f = 'always',
            m = 'whenEmpty',
            g = 'never',
            p = /^(always|never|whenEmpty)$/,
            h = {},
            y = {};
          let v,
            w = 0,
            D = m,
            I = m,
            j = m,
            b = m;
          const x = {
            name: u,
            getBidRequestData: function (t, e) {
              w = 0;
              T(t.adUnits || (0, r.m)().adUnits, t.ortb2Fragments),
                w <= 0 ? e() : (v = e);
            },
            init: function (t, e) {
              return !0;
            },
          };
          function E(t, e) {
            return p.test(t) ? t : e;
          }
          function C(t, e) {
            t && e && (h[e] = t);
          }
          function O(t, e) {
            const n = y[t];
            n && (n(e ? U(t) : { mediaID: t }), w--),
              delete y[t],
              w > 0 || (v && (v(), (v = null)));
          }
          function T(t) {
            let e =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {};
            const n = (0, c.A)(e.global, 'site.ext.data.jwTargeting');
            t.forEach((t) => {
              const r = (function (t, e) {
                let n;
                try {
                  n = t.ortb2Imp.ext.data.jwTargeting;
                } catch (t) {}
                if (
                  !n &&
                  !(function (t) {
                    const e = t && t.video;
                    return e && 'instream' === e.context;
                  })(t.mediaTypes)
                )
                  return;
                return Object.assign({}, e, n);
              })(t, n);
              if (!r || !Object.keys(r).length) return;
              !(function (t, e) {
                let { playerID: n, playerDivId: r, mediaID: i } = t;
                r || (r = n);
                if (void 0 !== y[i])
                  return void (function (t, e, n) {
                    const r = P(t, e);
                    r ? n(r) : (w++, (y[e] = n));
                  })(r, i, e);
                const o = U(i) || P(r, i) || { mediaID: i };
                e(o);
              })(r, function (n) {
                if (!n) return;
                const r = n.mediaID,
                  i = $(r),
                  o = (function (t, e) {
                    if (!t && !e) return;
                    const n = { name: d, ext: {} };
                    t && (n.ext.cids = [t]);
                    e && ((n.segment = e), (n.ext.segtax = 502));
                    return n;
                  })(
                    r,
                    (function (t) {
                      if (!t || !t.length) return;
                      return t.reduce((t, e) => (t.push({ id: e }), t), []);
                    })(n.segments),
                  ),
                  s = (function (t) {
                    const { segments: e, mediaID: n } = t,
                      r = {};
                    e && e.length && (r.segments = e);
                    n && (r.content = { id: $(n) });
                    return r;
                  })(n);
                !(function (t, e, n, r) {
                  if (!t) return;
                  t.forEach((t) => {
                    !(function (t, e) {
                      if (!e) return;
                      const n = t.rtd || {},
                        r = {};
                      (r[u] = Object.assign({}, n[u], { targeting: e })),
                        (t.rtd = Object.assign({}, n, r));
                    })(t, e);
                  });
                })(t.bids, s),
                  (function (t, e, n, r, i, o) {
                    null == t && (t = {});
                    let s = (t.site = t.site || {}),
                      a = (s.content = s.content || {});
                    k(a.id, e, D) && (a.id = e);
                    k(a.url, o, I) && (a.url = o);
                    k(a.title, r, j) && (a.title = r);
                    k(a.ext && a.ext.description, i, b) &&
                      ((a.ext = a.ext || {}), (a.ext.description = i));
                    const c = (a.data || []).filter((t) => t.name !== d);
                    n && c.push(n);
                    c.length && (a.data = c);
                  })(e.global, i, o, n.title, n.description, n.mediaUrl);
              });
            });
          }
          function U(t) {
            const e = h[t];
            if (!e) return null;
            const n =
              e.file ?? ((r = e), r.sources?.find?.((t) => !!t.file)?.file);
            var r;
            return {
              segments: e.jwpseg,
              title: e.title,
              description: e.description,
              mediaUrl: n,
              mediaID: t,
            };
          }
          function P(t, e) {
            const n = (function (t) {
              const e = window.jwplayer;
              if (!e)
                return void (0, a.logError)(u + '.js was not found on page');
              const n = e(t);
              if (!n || !n.getPlaylist)
                return void (0, a.logError)(
                  'player ID did not match any players',
                );
              return n;
            })(t);
            if (!n) return null;
            const r = e
              ? (0, l.I6)(n.getPlaylist(), (t) => t.mediaid === e)
              : n.getPlaylistItem();
            if (!r) return null;
            e = e || r.mediaid;
            const i = r.title,
              o = r.description,
              s = r.file,
              c = r.jwpseg;
            return (
              C(r, e),
              { segments: c, mediaID: e, title: i, mediaUrl: s, description: o }
            );
          }
          function $(t) {
            if (t) return 'jw_' + t;
          }
          function k(t, e, n) {
            switch (n) {
              case f:
                return !!e;
              case g:
                return !1;
              case m:
                return !!e && void 0 === t;
              default:
                return !1;
            }
          }
          o.$W.getConfig('realTimeData', (t) => {
            let { realTimeData: e } = t;
            const n = e.dataProviders,
              r =
                n && (0, l.I6)(n, (t) => t.name && t.name.toLowerCase() === u),
              i = r && r.params;
            i &&
              ((function (t) {
                const e = t.mediaIDs;
                if (!e) return;
                e.forEach((t) => {
                  !(function (t) {
                    const e = (0, s.g4)();
                    (y[t] = null),
                      e(`https://cdn.${d}/v2/media/${t}`, {
                        success: function (e) {
                          const n = (function (t) {
                            let e;
                            try {
                              const n = JSON.parse(t);
                              if (!n) throw 'Empty response';
                              const r = n.playlist;
                              if (!r || !r.length) throw 'Empty playlist';
                              e = r[0];
                            } catch (t) {
                              (0, a.logError)(t);
                            }
                            return e;
                          })(e);
                          C(n, t), O(t, !!n);
                        },
                        error: function () {
                          (0, a.logError)(
                            'failed to retrieve targeting information',
                          ),
                            O(t, !1);
                        },
                      });
                  })(t);
                });
              })(i),
              (function (t) {
                (D = E(t.overrideContentId, m)),
                  (I = E(t.overrideContentUrl, m)),
                  (j = E(t.overrideContentTitle, m)),
                  (b = E(t.overrideContentDescription, m));
              })(i));
          }),
            (0, i.bz)('realTimeData', x),
            (0, r.E)('jwplayerRtdProvider');
        },
      },
      (t) => {
        t.O(0, [60802, 51085], () => {
          return (e = 11010), t((t.s = e));
          var e;
        });
        t.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [49595],
      {
        69765: (e, t, r) => {
          var n = r(7873),
            i = r(91069),
            a = r(70433),
            o = r(43272),
            c = r(57377),
            s = r(12938),
            d = r(71371);
          const u = Object.freeze({
              CODE: 'kargo',
              HOST: 'krk2.kargo.com',
              REQUEST_METHOD: 'POST',
              REQUEST_ENDPOINT: '/api/v1/prebid',
              TIMEOUT_ENDPOINT: '/api/v1/event/timeout',
              GVLID: 972,
              SUPPORTED_MEDIA_TYPES: [d.D4, d.G_],
            }),
            p = (0, s.vM)({ bidderCode: u.CODE }),
            l = Object.freeze({ KEY: 'currency', US_DOLLAR: 'USD' }),
            E = Object.freeze({
              USER_DATA: 'ortb2.user.data',
              SOCIAL_CANVAS: 'params.socialCanvas',
              SUA: 'ortb2.device.sua',
              TDID_ADAPTER: 'userId.tdid',
            }),
            g = Object.freeze({
              BROWSERS: 'browsers',
              MOBILE: 'mobile',
              MODEL: 'model',
              PLATFORM: 'platform',
              SOURCE: 'source',
            }),
            I = [g.BROWSERS, g.MOBILE, g.MODEL, g.SOURCE, g.PLATFORM],
            S = Object.freeze({
              KEY: 'krg_crb',
              SYNC_URL:
                'https://crb.kargo.com/api/v1/initsyncrnd/{UUID}?seed={SEED}&idx={INDEX}&gdpr={GDPR}&gdpr_consent={GDPR_CONSENT}&us_privacy={US_PRIVACY}&gpp={GPP_STRING}&gpp_sid={GPP_SID}',
              SYNC_COUNT: 5,
              PAGE_VIEW_ID: 'pageViewId',
              PAGE_VIEW_TIMESTAMP: 'pageViewTimestamp',
              PAGE_VIEW_URL: 'pageViewUrl',
            });
          let m, b, f;
          function D(e, t) {
            const r = {};
            return e && (r.ortb2 = e), t && (r.refererInfo = t), r;
          }
          function _() {
            try {
              var e = new Uint8Array(16);
              crypto.getRandomValues(e),
                (e[6] = (-177 & e[6]) | 64),
                (e[8] = (-65 & e[8]) | 128);
              var t = Array.prototype.map
                .call(new Uint8Array(e), function (e) {
                  return ('00' + e.toString(16)).slice(-2);
                })
                .join('');
              return (
                t.slice(0, 8) +
                '-' +
                t.slice(8, 12) +
                '-' +
                t.slice(12, 16) +
                '-' +
                t.slice(16, 20) +
                '-' +
                t.slice(20)
              );
            } catch (e) {
              return '';
            }
          }
          function T() {
            return m || (m = _()), m;
          }
          function C(e) {
            try {
              return p.getDataFromLocalStorage(e);
            } catch (e) {
              return null;
            }
          }
          function O(e, t, r, n, a) {
            const o = R._getCrb(),
              c = { crbIDs: o.syncIds || {} };
            if (
              (!e && o.tdID ? (c.tdID = o.tdID) : e && (c.tdID = e),
              t && (c.usp = t),
              r &&
                (c.gdpr = {
                  consent: r.consentString || '',
                  applies: !!r.gdprApplies,
                }),
              null != o.lexId && (c.kargoID = o.lexId),
              null != o.clientId && (c.clientID = o.clientId),
              null != o.optOut && (c.optOut = o.optOut),
              null != n && (c.sharedIDEids = n),
              a)
            ) {
              const e = {};
              a.consentString && (e.gppString = a.consentString),
                a.applicableSections &&
                  (e.applicableSections = a.applicableSections),
                (0, i.isEmpty)(e) || (c.gpp = e);
            }
            return c;
          }
          const R = {
            gvlid: u.GVLID,
            code: u.CODE,
            isBidRequestValid: function (e) {
              return !(!e || !e.params) && !!e.params.placementId;
            },
            buildRequests: function (e, t) {
              const r = o.$W.getConfig(l.KEY),
                n = r && r.adServerCurrency ? r.adServerCurrency : null,
                c = [];
              (0, i._each)(e, (e) => {
                c.push(
                  (function (e) {
                    const t = {
                      id: e.bidId,
                      tid: e.ortb2Imp?.ext?.tid,
                      pid: e.params.placementId,
                      code: e.adUnitCode,
                    };
                    e.bidRequestsCount > 0 &&
                      (t.bidRequestCount = e.bidRequestsCount);
                    e.bidderRequestsCount > 0 &&
                      (t.bidderRequestCount = e.bidderRequestsCount);
                    e.bidderWinsCount > 0 &&
                      (t.bidderWinCount = e.bidderWinsCount);
                    const r =
                      (0, a.A)(e, 'ortb2Imp.ext.gpid') ||
                      (0, a.A)(e, 'ortb2Imp.ext.data.pbadslot');
                    r && (t.fpd = { gpid: r });
                    e.ortb2Imp && (t.ext = { ortb2Imp: e.ortb2Imp });
                    if (e.mediaTypes) {
                      const { banner: r, video: n, native: a } = e.mediaTypes;
                      if (
                        (r && (t.banner = r),
                        n && (t.video = n),
                        a && (t.native = a),
                        'function' == typeof e.getFloor)
                      ) {
                        let r;
                        try {
                          r = e.getFloor({
                            currency: 'USD',
                            mediaType: '*',
                            size: '*',
                          });
                        } catch (e) {
                          (0, i.logError)(
                            'Kargo: getFloor threw an error: ',
                            e,
                          );
                        }
                        t.floor =
                          'object' != typeof r ||
                          'USD' !== r.currency ||
                          isNaN(parseInt(r.floor))
                            ? void 0
                            : r.floor;
                      }
                    }
                    return t;
                  })(e),
                );
              });
              const s = e[0],
                d = (0, a.A)(s, E.TDID_ADAPTER),
                m = (function (e) {
                  return {
                    pageURL: e?.refererInfo?.page,
                    rawCRB: p.getCookie(S.KEY),
                    rawCRBLocalStorage: C(S.KEY),
                  };
                })(t),
                _ = Object.assign(
                  {},
                  {
                    pbv: '9.0.0',
                    aid: s.auctionId,
                    sid: T(),
                    url: m.pageURL,
                    timeout: t.timeout,
                    ts: new Date().getTime(),
                    device: {
                      size: [window.screen.width, window.screen.height],
                    },
                    imp: c,
                    user: O(
                      d,
                      t.uspConsent,
                      t.gdprConsent,
                      s.userIdAsEids,
                      t.gppConsent,
                    ),
                    ext: D(s.ortb2, t?.refererInfo),
                  },
                );
              null != s.ortb2?.site?.cat &&
                (_.site = { cat: s.ortb2.site.cat }),
                s.schain && s.schain.nodes && (_.schain = s.schain),
                (_.user.data = (0, a.A)(s, E.USER_DATA) || []);
              const R = (function () {
                if (b === window.location.pathname) return ++f;
                return (b = window.location.pathname), (f = 0);
              })();
              null != R && (_.requestCount = R),
                null != n && n != l.US_DOLLAR && (_.cur = n),
                null != m.rawCRB && (_.rawCRB = m.rawCRB),
                null != m.rawCRBLocalStorage &&
                  (_.rawCRBLocalStorage = m.rawCRBLocalStorage);
              const A = (0, a.A)(s, E.SOCIAL_CANVAS);
              null != A && (_.socan = A);
              const y = (0, a.A)(s, E.SUA);
              if (y) {
                const e = [];
                I.forEach((t) => {
                  const r = y[t];
                  if (r && ('string' != typeof r || '' !== r.trim()))
                    switch (t) {
                      case g.MOBILE && r < 1:
                      case g.SOURCE && r < 1:
                        break;
                      default:
                        e.push(t);
                    }
                }),
                  (_.device.sua = (0, i.pick)(y, e));
              }
              const P = null != C(S.PAGE_VIEW_ID),
                h = null != C(S.PAGE_VIEW_TIMESTAMP),
                U = null != C(S.PAGE_VIEW_URL),
                v = {};
              return (
                P && (v.id = C(S.PAGE_VIEW_ID)),
                h && (v.timestamp = Number(C(S.PAGE_VIEW_TIMESTAMP))),
                U && (v.url = C(S.PAGE_VIEW_URL)),
                (0, i.isEmpty)(v) || (_.page = v),
                _.ext && 0 === Object.keys(_.ext).length && delete _.ext,
                Object.assign({}, t, {
                  method: u.REQUEST_METHOD,
                  url: `https://${u.HOST}${u.REQUEST_ENDPOINT}`,
                  data: _,
                  currency: n,
                })
              );
            },
            interpretResponse: function (e, t) {
              const r = e.body,
                n = [],
                a = [];
              if ((0, i.isEmpty)(r) || 'object' != typeof r) return a;
              for (const [e, i] of Object.entries(r)) {
                let r = {
                  mediaType:
                    i.mediaType && u.SUPPORTED_MEDIA_TYPES.includes(i.mediaType)
                      ? i.mediaType
                      : d.D4,
                };
                i.metadata?.landingPageDomain &&
                  ((r.clickUrl = i.metadata.landingPageDomain[0]),
                  (r.advertiserDomains = i.metadata.landingPageDomain));
                const o = {
                  requestId: e,
                  cpm: Number(i.cpm),
                  width: i.width,
                  height: i.height,
                  ttl: 300,
                  creativeId: i.creativeID,
                  dealId: i.targetingCustom,
                  netRevenue: !0,
                  currency: i.currency || t.currency,
                  mediaType: r.mediaType,
                  meta: r,
                };
                r.mediaType == d.G_
                  ? i.admUrl
                    ? (o.vastUrl = i.admUrl)
                    : (o.vastXml = i.adm)
                  : (o.ad = i.adm),
                  a.push(o),
                  i.auctionConfig &&
                    n.push({ bidId: e, config: i.auctionConfig });
              }
              return n.length > 0 ? { bids: a, paapi: n } : a;
            },
            getUserSyncs: function (e, t, r, n, i) {
              const a = [],
                o = _(),
                c = R._getCrb().clientId;
              var s = r && r.gdprApplies ? 1 : 0,
                d = r && r.consentString ? r.consentString : '',
                u = i && i.consentString ? i.consentString : '',
                p =
                  i &&
                  i.applicableSections &&
                  Array.isArray(i.applicableSections)
                    ? i.applicableSections.join(',')
                    : '';
              if (
                'string' == typeof n &&
                4 == n.length &&
                1 == n[0] &&
                'Y' == n[2]
              )
                return a;
              if (e.iframeEnabled && o && c)
                for (let e = 0; e < S.SYNC_COUNT; e++)
                  a.push({
                    type: 'iframe',
                    url: S.SYNC_URL.replace('{UUID}', c)
                      .replace('{SEED}', o)
                      .replace('{INDEX}', e)
                      .replace('{GDPR}', s)
                      .replace('{GDPR_CONSENT}', d)
                      .replace('{US_PRIVACY}', n || '')
                      .replace('{GPP_STRING}', u)
                      .replace('{GPP_SID}', p),
                  });
              return a;
            },
            supportedMediaTypes: u.SUPPORTED_MEDIA_TYPES,
            onTimeout: function (e) {
              null != e &&
                e.forEach((e) => {
                  !(function (e, t) {
                    let r = { aid: e, ato: t };
                    try {
                      let e = (0, i.buildUrl)({
                        protocol: 'https',
                        hostname: u.HOST,
                        pathname: u.TIMEOUT_ENDPOINT,
                        search: r,
                      });
                      (0, i.triggerPixel)(e);
                    } catch (e) {}
                  })(e.auctionId, e.timeout);
                });
            },
            _getCrb: function () {
              let e = (function () {
                try {
                  return JSON.parse(atob(C(S.KEY)));
                } catch (e) {
                  return {};
                }
              })();
              return Object.keys(e).length
                ? e
                : (function () {
                    try {
                      const e = JSON.parse(p.getCookie(S.KEY));
                      if (e && e.v) {
                        let t = JSON.parse(atob(e.v));
                        if (t) return t;
                      }
                      return {};
                    } catch (e) {
                      return {};
                    }
                  })();
            },
            _getSessionId: T,
          };
          (0, c.a$)(R), (0, n.E)('kargoBidAdapter');
        },
      },
      (e) => {
        e.O(0, [60802, 51085], () => {
          return (t = 69765), e((e.s = t));
          var t;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [76564],
      {
        84722: (e, t, i) => {
          var n = i(7873),
            r = i(91069),
            o = i(70433),
            d = i(63172),
            a = i(78969),
            s = i(71371),
            l = i(43272),
            c = i(57377),
            p = i(27934);
          const u = 'nextMillennium',
            m =
              'https://cookies.nextmillmedia.com/sync?gdpr={{.GDPR}}&gdpr_consent={{.GDPRConsent}}&us_privacy={{.USPrivacy}}&gpp={{.GPP}}&gpp_sid={{.GPPSID}}&type={{.TYPE_PIXEL}}',
            g = 'USD',
            f = {
              api: void 0,
              context: void 0,
              delivery: void 0,
              linearity: void 0,
              maxduration: void 0,
              mimes: ['video/mp4', 'video/x-ms-wmv', 'application/javascript'],
              minduration: void 0,
              placement: void 0,
              plcmt: void 0,
              playbackend: void 0,
              playbackmethod: void 0,
              pos: void 0,
              protocols: void 0,
              skip: void 0,
              skipafter: void 0,
              skipmin: void 0,
              startdelay: void 0,
            },
            b = Object.keys(f),
            h = [
              'site.pagecat',
              'site.content.cat',
              'site.content.language',
              'device.sua',
              'site.keywords',
              'site.content.keywords',
              'user.keywords',
            ],
            v = {
              code: u,
              supportedMediaTypes: [s.D4, s.G_],
              gvlid: 1060,
              isBidRequestValid: function (e) {
                return !!(
                  (e.params.placement_id &&
                    (0, r.isStr)(e.params.placement_id)) ||
                  (e.params.group_id && (0, r.isStr)(e.params.group_id))
                );
              },
              buildRequests: function (e, t) {
                const i = [];
                return (
                  (window.nmmRefreshCounts = window.nmmRefreshCounts || {}),
                  (0, r._each)(e, (e) => {
                    window.nmmRefreshCounts[e.adUnitCode] =
                      window.nmmRefreshCounts[e.adUnitCode] || 0;
                    const s = (function (e) {
                        const t = (0, r.getBidIdParameter)(
                            'group_id',
                            e.params,
                          ),
                          i = (0, r.getBidIdParameter)(
                            'placement_id',
                            e.params,
                          );
                        if (!t) return i;
                        let n = P(window),
                          o = [];
                        e.mediaTypes &&
                          (e.mediaTypes.banner &&
                            (o = e.mediaTypes.banner.sizes),
                          e.mediaTypes.video &&
                            (o = [e.mediaTypes.video.playerSize]));
                        const d = (n && n.location && n.location.host) || '';
                        return `g${t};${o
                          .map((e) => e.join('x'))
                          .join('|')};${d}`;
                      })(e),
                      c = e.auctionId,
                      u = e.bidId,
                      m = (function () {
                        const e = (p.EN && (0, p.EN)()) || {};
                        let t,
                          i = navigator.language;
                        i && ((i = i.split('-')[0]), (t = { language: i }));
                        return {
                          page: e.page,
                          ref: e.ref,
                          domain: e.domain,
                          content: t,
                        };
                      })(),
                      v = {
                        w:
                          window.innerWidth ||
                          window.document.documentElement.clientWidth ||
                          window.document.body.clientWidth ||
                          0,
                        h:
                          window.innerHeight ||
                          window.document.documentElement.clientHeight ||
                          window.document.body.clientHeight ||
                          0,
                        ua: window.navigator.userAgent || void 0,
                        sua: S(),
                      },
                      { cur: y, mediaTypes: _ } = (function () {
                        let e =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : {};
                        const t =
                            l.$W?.getConfig('currency')?.adServerCurrency || g,
                          i = [],
                          n = ['banner', 'video'],
                          r = {};
                        for (const d of n) {
                          const n = (0, o.A)(e, `mediaTypes.${d}`);
                          if (n) {
                            if (
                              ((r[d] = { data: n }),
                              'function' == typeof e.getFloor)
                            ) {
                              let i = e.getFloor({
                                currency: t,
                                mediaType: d,
                                size: '*',
                              });
                              (r[d].bidfloorcur = i.currency),
                                (r[d].bidfloor = i.floor);
                            } else r[d].bidfloorcur = t;
                            i.includes(r[d].bidfloorcur) &&
                              i.push(r[d].bidfloorcur);
                          }
                        }
                        i.length || i.push(g);
                        return { cur: i, mediaTypes: r };
                      })(e),
                      x = {
                        id: t?.bidderRequestId,
                        cur: y,
                        ext: {
                          prebid: { storedrequest: { id: s } },
                          nextMillennium: {
                            nm_version: '3.1.0',
                            pbjs_version: (0, n.m)()?.version || void 0,
                            refresh_count: window.nmmRefreshCounts[
                              e.adUnitCode
                            ]++,
                            elOffsets: w(e),
                            scrollTop:
                              window.pageYOffset ||
                              document.documentElement.scrollTop,
                          },
                        },
                        device: v,
                        site: m,
                        imp: [],
                      };
                    x.imp.push(
                      (function (e, t, i) {
                        const { banner: n, video: o } = i,
                          d = {
                            id: e.adUnitCode,
                            ext: { prebid: { storedrequest: { id: t } } },
                          };
                        return (
                          (function (e, t) {
                            if (!t) return;
                            t.bidfloorcur && (e.bidfloorcur = t.bidfloorcur);
                            t.bidfloor && (e.bidfloor = t.bidfloor);
                            const i = (t.data?.sizes || []).map((e) => ({
                                w: e[0],
                                h: e[1],
                              })),
                              { w: n, h: r } = i[0] || {};
                            e.banner = { w: n, h: r, format: i };
                          })(d, n),
                          (function (e, t) {
                            if (!t) return;
                            t.bidfloorcur && (e.bidfloorcur = t.bidfloorcur);
                            t.bidfloor && (e.bidfloor = t.bidfloor);
                            (e.video = (0, r.getDefinedParams)(t.data, b)),
                              Object.keys(f)
                                .filter((e) => f[e])
                                .forEach((t) => {
                                  void 0 === e.video[t] && (e.video[t] = f[t]);
                                }),
                              t.data.playerSize
                                ? (e.video = Object.assign(
                                    e.video,
                                    (0, r.parseGPTSingleSizeArrayToRtbSize)(
                                      t.data?.playerSize,
                                    ) || {},
                                  ))
                                : t.data.w &&
                                  t.data.h &&
                                  ((e.video.w = t.data.w),
                                  (e.video.h = t.data.h));
                          })(d, o),
                          d
                        );
                      })(e, s, _),
                    ),
                      (function () {
                        let e =
                            arguments.length > 0 && void 0 !== arguments[0]
                              ? arguments[0]
                              : {},
                          t = arguments.length > 1 ? arguments[1] : void 0;
                        const i = t?.gdprConsent,
                          n = t?.uspConsent;
                        let r = t?.gppConsent?.gppString && t?.gppConsent;
                        !r && t?.ortb2?.regs?.gpp && (r = t?.ortb2?.regs);
                        (i || n || r) &&
                          ((e.regs = { ext: {} }),
                          n && (e.regs.ext.us_privacy = n),
                          r &&
                            ((e.regs.gpp = r?.gppString || r?.gpp),
                            (e.regs.gpp_sid =
                              t.gppConsent?.applicableSections || r?.gpp_sid)),
                          i &&
                            (void 0 !== i.gdprApplies &&
                              (e.regs.ext.gdpr = i.gdprApplies ? 1 : 0),
                            void 0 !== i.consentString &&
                              (e.user = {
                                ext: { consent: i.consentString },
                              })));
                      })(x, t),
                      (function (e) {
                        let t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : {};
                        for (let i of h) {
                          const n = (0, o.A)(t, i);
                          n && (0, d.J)(e, i, n);
                        }
                      })(x, t?.ortb2),
                      (function (e, t) {
                        if (
                          !(0, r.isArray)(t.userIdAsEids) ||
                          !t.userIdAsEids.length
                        )
                          return;
                        (0, d.J)(e, 'user.eids', t.userIdAsEids);
                      })(x, e);
                    const E = (0, r.parseUrl)(
                        (0, r.getWindowTop)().location.href,
                      ).search,
                      C = E.pbs && 'test' === E.pbs,
                      U = e.params;
                    i.push({
                      method: 'POST',
                      url: C
                        ? 'https://test.pbs.nextmillmedia.com/openrtb2/auction'
                        : 'https://pbs.nextmillmedia.com/openrtb2/auction',
                      data: JSON.stringify(x),
                      options: {
                        contentType: 'text/plain',
                        withCredentials: !0,
                      },
                      bidId: u,
                      params: U,
                      auctionId: c,
                    }),
                      this.getUrlPixelMetric(a.qY.BID_REQUESTED, e);
                  }),
                  i
                );
              },
              interpretResponse: function (e, t) {
                const i = e.body,
                  n = [];
                return (
                  (0, r._each)(i.seatbid, (e) => {
                    (0, r._each)(e.bid, (e) => {
                      const d = t.bidId,
                        l = t.params,
                        {
                          ad: c,
                          adUrl: p,
                          vastUrl: u,
                          vastXml: m,
                        } = (function (e) {
                          let t, i, n, d;
                          if ((0, o.A)(e, 'ext.prebid.type') === s.G_)
                            'http' === e.adm.substr(0, 4)
                              ? (d = e.adm)
                              : (n = e.adm);
                          else
                            e.adm && e.nurl
                              ? ((t = e.adm),
                                (t += (0, r.createTrackPixelHtml)(
                                  decodeURIComponent(e.nurl),
                                )))
                              : e.adm
                                ? (t = e.adm)
                                : e.nurl && (i = e.nurl);
                          return { ad: t, adUrl: i, vastXml: n, vastUrl: d };
                        })(e),
                        f = {
                          requestId: d,
                          params: l,
                          cpm: e.price,
                          width: e.w,
                          height: e.h,
                          creativeId: e.adid,
                          currency: i.cur || g,
                          netRevenue: !0,
                          ttl: 360,
                          meta: { advertiserDomains: e.adomain || [] },
                        };
                      u || m
                        ? ((f.mediaType = s.G_),
                          u && (f.vastUrl = u),
                          m && (f.vastXml = m))
                        : ((f.ad = c), (f.adUrl = p)),
                        n.push(f),
                        this.getUrlPixelMetric(a.qY.BID_RESPONSE, e);
                    });
                  }),
                  n
                );
              },
              getUserSyncs: function (e, t, i, n, d) {
                if (!e.iframeEnabled && !e.pixelEnabled) return [];
                const a = [],
                  s = (e) => (t) => {
                    a.push({ type: e, url: y(t, i, n, d, e) });
                  },
                  l = (e) => (t) => {
                    (0, o.A)(t, `body.ext.sync.${e}`, []).forEach(s(e));
                  },
                  c = (e, t) => {
                    s(e)(t);
                  },
                  p = l('image'),
                  u = l('iframe');
                return (
                  (0, r.isArray)(t) &&
                    t.forEach((t) => {
                      e.pixelEnabled && p(t), e.iframeEnabled && u(t);
                    }),
                  a.length ||
                    (e.pixelEnabled && c('image', m),
                    e.iframeEnabled && c('iframe', m)),
                  a
                );
              },
              getUrlPixelMetric(e, t) {
                if (
                  !!l.$W.getBidderConfig()?.nextMillennium
                    ?.disabledSendingStatisticData
                )
                  return;
                const i = this._getUrlPixelMetric(e, t);
                i && (0, r.triggerPixel)(i);
              },
              _getUrlPixelMetric(e, t) {
                const i = t.bidder || t.bidderCode;
                if (i != u) return;
                let n;
                if (
                  (t.params
                    ? (n = Array.isArray(t.params) ? t.params : [t.params])
                    : Array.isArray(t.bids) &&
                      (n = t.bids.map((e) => e.params)),
                  !n.length)
                )
                  return;
                const r = [],
                  o = [];
                n.forEach((e) => {
                  e.group_id
                    ? o.push(e.group_id)
                    : e.placement_id && r.push(e.placement_id);
                });
                const d = (r.length && `&placements=${r.join(';')}`) || '',
                  a = (o.length && `&groups=${o.join(';')}`) || '';
                if (!a && !d) return;
                return `https://report2.hb.brainlyads.com/statistics/metric?event=${e}&bidder=${i}&source=pbjs${a}${d}`;
              },
              onTimeout(e) {
                for (const t of e) this.getUrlPixelMetric(a.qY.BID_TIMEOUT, t);
              },
            };
          function y(e) {
            let t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {},
              i =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : '',
              n =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : {},
              r =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : '';
            const { consentString: o = '', gdprApplies: d = !1 } = t,
              a = Number(d);
            return (e = e
              .replace('{{.GDPR}}', a)
              .replace('{{.GDPRConsent}}', o)
              .replace('{{.USPrivacy}}', i)
              .replace('{{.GPP}}', n.gppString || '')
              .replace('{{.GPPSID}}', (n.applicableSections || []).join(','))
              .replace('{{.TYPE_PIXEL}}', r));
          }
          function w(e) {
            const t = (function (e) {
              const t =
                  window.googletag &&
                  window.googletag.pubads &&
                  window.googletag
                    .pubads()
                    .getSlots()
                    .find((t) => t.getAdUnitPath() === e.adUnitCode),
                i = t && t.getSlotElementId();
              return i ? document.querySelector('#' + i) : null;
            })(e);
            return t ? t.getBoundingClientRect() : {};
          }
          function P(e) {
            let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 0;
            if (t > 10) return e;
            try {
              if (e.parent.document) return P(e.parent.window, ++t);
            } catch (t) {
              return e;
            }
          }
          function S() {
            let {
              brands: e,
              mobile: t,
              platform: i,
            } = window?.navigator?.userAgentData || {};
            if (e && i)
              return {
                brands: e,
                mobile: Number(!!t),
                platform: (i && { brand: i }) || void 0,
              };
          }
          (0, c.a$)(v), (0, n.E)('nextMillenniumBidAdapter');
        },
      },
      (e) => {
        e.O(0, [60802, 51085], () => {
          return (t = 84722), e((e.s = t));
          var t;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [63206],
      {
        53254: (e, t, r) => {
          var i = r(7873),
            o = r(91069),
            n = r(70433),
            a = r(63172),
            s = r(57377),
            d = r(71371),
            l = r(43272),
            p = r(86833),
            g = r(95789),
            u = r(27934);
          const c = 'https://elb.the-ozone-project.com',
            h = '/openrtb2/auction',
            f = '/static/load-cookie.html',
            b = 'https://test.ozpr.net',
            y = '2.9.1',
            m = {
              gvlid: 524,
              aliases: [
                { code: 'lmc', gvlid: 524 },
                { code: 'venatus', gvlid: 524 },
              ],
              version: y,
              code: 'ozone',
              supportedMediaTypes: [d.G_, d.D4],
              cookieSyncBag: {
                publisherId: null,
                siteId: null,
                userIdObject: {},
              },
              propertyBag: {
                pageId: null,
                buildRequestsStart: 0,
                buildRequestsEnd: 0,
                endpointOverride: null,
              },
              whitelabel_defaults: {
                logId: 'OZONE',
                bidder: 'ozone',
                keyPrefix: 'oz',
                auctionUrl: c + h,
                cookieSyncUrl: c + f,
                rendererUrl:
                  'https://prebid.the-ozone-project.com/ozone-renderer.js',
                batchRequests: !1,
              },
              loadWhitelabelData(e) {
                if (this.propertyBag.whitelabel) return;
                this.propertyBag.whitelabel = (0, o.deepClone)(
                  this.whitelabel_defaults,
                );
                let t = e.bidder || 'ozone';
                (this.propertyBag.whitelabel.logId = t.toUpperCase()),
                  (this.propertyBag.whitelabel.bidder = t);
                let r = l.$W.getConfig(t) || {};
                (0, o.logInfo)('got bidderConfig: ', (0, o.deepClone)(r)),
                  r.kvpPrefix &&
                    (this.propertyBag.whitelabel.keyPrefix = r.kvpPrefix);
                let i = this.getGetParametersAsObject();
                r.endpointOverride &&
                  (r.endpointOverride.origin &&
                    ((this.propertyBag.endpointOverride =
                      r.endpointOverride.origin),
                    (this.propertyBag.whitelabel.auctionUrl =
                      r.endpointOverride.origin + h),
                    (this.propertyBag.whitelabel.cookieSyncUrl =
                      r.endpointOverride.origin + f)),
                  i.hasOwnProperty('renderer')
                    ? i.renderer.match('%3A%2F%2F')
                      ? (this.propertyBag.whitelabel.rendererUrl =
                          decodeURIComponent(i.renderer))
                      : (this.propertyBag.whitelabel.rendererUrl = i.renderer)
                    : r.endpointOverride.rendererUrl &&
                      (this.propertyBag.whitelabel.rendererUrl =
                        r.endpointOverride.rendererUrl),
                  r.endpointOverride.cookieSyncUrl &&
                    (this.propertyBag.whitelabel.cookieSyncUrl =
                      r.endpointOverride.cookieSyncUrl),
                  r.endpointOverride.auctionUrl &&
                    ((this.propertyBag.endpointOverride =
                      r.endpointOverride.auctionUrl),
                    (this.propertyBag.whitelabel.auctionUrl =
                      r.endpointOverride.auctionUrl))),
                  r.hasOwnProperty('batchRequests') &&
                    (this.propertyBag.whitelabel.batchRequests =
                      r.batchRequests),
                  i.hasOwnProperty('batchRequests') &&
                    (this.propertyBag.whitelabel.batchRequests = !0);
                try {
                  i.hasOwnProperty('auction') &&
                    'dev' === i.auction &&
                    ((0, o.logInfo)('GET: auction=dev'),
                    (this.propertyBag.whitelabel.auctionUrl = b + h)),
                    i.hasOwnProperty('cookiesync') &&
                      'dev' === i.cookiesync &&
                      ((0, o.logInfo)('GET: cookiesync=dev'),
                      (this.propertyBag.whitelabel.cookieSyncUrl = b + f));
                } catch (e) {}
                (0, o.logInfo)(
                  'set propertyBag.whitelabel to',
                  this.propertyBag.whitelabel,
                );
              },
              getAuctionUrl() {
                return this.propertyBag.whitelabel.auctionUrl;
              },
              getCookieSyncUrl() {
                return this.propertyBag.whitelabel.cookieSyncUrl;
              },
              getRendererUrl() {
                return this.propertyBag.whitelabel.rendererUrl;
              },
              isBatchRequests() {
                return (
                  (0, o.logInfo)(
                    'isBatchRequests going to return ',
                    this.propertyBag.whitelabel.batchRequests,
                  ),
                  this.propertyBag.whitelabel.batchRequests
                );
              },
              isBidRequestValid(e) {
                this.loadWhitelabelData(e),
                  (0, o.logInfo)('isBidRequestValid : ', l.$W.getConfig(), e);
                let t = e.adUnitCode,
                  r =
                    'VALIDATION FAILED : missing {param} : siteId, placementId and publisherId are REQUIRED';
                if (!e.params.hasOwnProperty('placementId'))
                  return (
                    (0, o.logError)(r.replace('{param}', 'placementId'), t), !1
                  );
                if (!this.isValidPlacementId(e.params.placementId))
                  return (
                    (0, o.logError)(
                      'VALIDATION FAILED : placementId must be exactly 10 numeric characters',
                      t,
                    ),
                    !1
                  );
                if (!e.params.hasOwnProperty('publisherId'))
                  return (
                    (0, o.logError)(r.replace('{param}', 'publisherId'), t), !1
                  );
                if (
                  !e.params.publisherId.toString().match(/^[a-zA-Z0-9\-]{12}$/)
                )
                  return (
                    (0, o.logError)(
                      'VALIDATION FAILED : publisherId must be exactly 12 alphanumeric characters including hyphens',
                      t,
                    ),
                    !1
                  );
                if (!e.params.hasOwnProperty('siteId'))
                  return (0, o.logError)(r.replace('{param}', 'siteId'), t), !1;
                if (!e.params.siteId.toString().match(/^[0-9]{10}$/))
                  return (
                    (0, o.logError)(
                      'VALIDATION FAILED : siteId must be exactly 10 numeric characters',
                      t,
                    ),
                    !1
                  );
                if (e.params.hasOwnProperty('customParams'))
                  return (
                    (0, o.logError)(
                      'VALIDATION FAILED : customParams should be renamed to customData',
                      t,
                    ),
                    !1
                  );
                if (e.params.hasOwnProperty('customData')) {
                  if (!Array.isArray(e.params.customData))
                    return (
                      (0, o.logError)(
                        'VALIDATION FAILED : customData is not an Array',
                        t,
                      ),
                      !1
                    );
                  if (e.params.customData.length < 1)
                    return (
                      (0, o.logError)(
                        'VALIDATION FAILED : customData is an array but does not contain any elements',
                        t,
                      ),
                      !1
                    );
                  if (!e.params.customData[0].hasOwnProperty('targeting'))
                    return (
                      (0, o.logError)(
                        'VALIDATION FAILED : customData[0] does not contain "targeting"',
                        t,
                      ),
                      !1
                    );
                  if ('object' != typeof e.params.customData[0].targeting)
                    return (
                      (0, o.logError)(
                        'VALIDATION FAILED : customData[0] targeting is not an object',
                        t,
                      ),
                      !1
                    );
                }
                if (
                  e.hasOwnProperty('mediaTypes') &&
                  e.mediaTypes.hasOwnProperty(d.G_)
                ) {
                  if (!e.mediaTypes[d.G_].hasOwnProperty('context'))
                    return (
                      (0, o.logError)(
                        'No video context key/value in bid. Rejecting bid: ',
                        e,
                      ),
                      !1
                    );
                  if (
                    'instream' !== e.mediaTypes[d.G_].context &&
                    'outstream' !== e.mediaTypes[d.G_].context
                  )
                    return (
                      (0, o.logError)(
                        'video.context is invalid. Only instream/outstream video is supported. Rejecting bid: ',
                        e,
                      ),
                      !1
                    );
                }
                return !0;
              },
              isValidPlacementId: (e) => e.toString().match(/^[0-9]{10}$/),
              buildRequests(e, t) {
                this.loadWhitelabelData(e[0]),
                  (this.propertyBag.buildRequestsStart = new Date().getTime());
                let r = this.propertyBag.whitelabel.bidder,
                  i = this.propertyBag.whitelabel.keyPrefix;
                if (
                  ((0, o.logInfo)(
                    `buildRequests time: ${this.propertyBag.buildRequestsStart} v ${y} validBidRequests`,
                    (0, o.deepClone)(e),
                    'bidderRequest',
                    (0, o.deepClone)(t),
                  ),
                  this.blockTheRequest())
                )
                  return [];
                let s = { publisherId: '', siteId: '' };
                e.length > 0 &&
                  ((this.cookieSyncBag.userIdObject = Object.assign(
                    this.cookieSyncBag.userIdObject,
                    this.findAllUserIds(e[0]),
                  )),
                  (this.cookieSyncBag.siteId = (0, n.A)(e[0], 'params.siteId')),
                  (this.cookieSyncBag.publisherId = (0, n.A)(
                    e[0],
                    'params.publisherId',
                  )),
                  (s = e[0].params)),
                  (0, o.logInfo)('cookie sync bag', this.cookieSyncBag);
                let p = this.getWhitelabelConfigItem('ozone.singleRequest');
                (p = !1 !== p),
                  (0, o.logInfo)(`config ${r}.singleRequest : `, p);
                let g = {};
                (0, o.logInfo)('going to get ortb2 from bidder request...');
                let u = (0, n.A)(t, 'ortb2', null);
                (0, o.logInfo)('got fpd: ', u),
                  u &&
                    (0, n.A)(u, 'user') &&
                    ((0, o.logInfo)('added FPD user object'),
                    (g.user = u.user));
                const c = this.getGetParametersAsObject(),
                  h = i + 'testmode',
                  f = c[h] || null;
                g.device = { w: window.innerWidth, h: window.innerHeight };
                let b = this.getPlacementIdOverrideFromGetParam(),
                  m = null,
                  I = e.map((e) => {
                    var t = {};
                    let i = b || this.getPlacementId(e);
                    (t.id = e.bidId), (t.tagid = i);
                    let s = (0, o.parseUrl)(this.getRefererInfo().page);
                    t.secure = 'https' === s.protocol ? 1 : 0;
                    let l = [];
                    if (e.hasOwnProperty('mediaTypes')) {
                      if (
                        (e.mediaTypes.hasOwnProperty(d.D4) &&
                          ((l = e.mediaTypes[d.D4].sizes),
                          (0, o.logInfo)(
                            'setting banner size from the mediaTypes.banner element for bidId ' +
                              t.id +
                              ': ',
                            l,
                          )),
                        e.mediaTypes.hasOwnProperty(d.G_))
                      ) {
                        if (
                          ((0, o.logInfo)('openrtb 2.5 compliant video'),
                          'object' == typeof e.mediaTypes[d.G_])
                        ) {
                          let r = (0, n.A)(e, 'params.video', {});
                          (t.video = this.unpackVideoConfigIntoIABformat(
                            e.mediaTypes[d.G_],
                            r,
                          )),
                            (t.video = this.addVideoDefaults(
                              t.video,
                              e.mediaTypes[d.G_],
                              r,
                            ));
                        }
                        let r = (function (e) {
                          let t = B(e);
                          if (!t) return null;
                          if (
                            t[0] &&
                            'object' == typeof t[0] &&
                            ((0, o.logInfo)(
                              'getWidthAndHeightFromVideoObject found nested array inside playerSize.',
                              t[0],
                            ),
                            (t = t[0]),
                            'number' != typeof t[0] && 'string' != typeof t[0])
                          )
                            return (
                              (0, o.logInfo)(
                                'getWidthAndHeightFromVideoObject found non-number/string type inside the INNER array in playerSize. This is totally wrong - cannot continue.',
                                t[0],
                              ),
                              null
                            );
                          if (2 !== t.length)
                            return (
                              (0, o.logInfo)(
                                'getWidthAndHeightFromVideoObject found playerSize with length of ' +
                                  t.length +
                                  '. This is totally wrong - cannot continue.',
                              ),
                              null
                            );
                          return { w: t[0], h: t[1] };
                        })(t.video);
                        (0, o.logInfo)(
                          'setting video object from the mediaTypes.video element: ' +
                            t.id +
                            ':',
                          t.video,
                          'wh=',
                          r,
                        ),
                          r && 'object' == typeof r
                            ? ((t.video.w = r.w),
                              (t.video.h = r.h),
                              !(function (e) {
                                let t = B(e);
                                if (!t) return null;
                                if (t.length < 1) return null;
                                return t[0] && 'object' == typeof t[0];
                              })(t.video)
                                ? ((0, o.logInfo)(
                                    'setting obj.video.format to be an object',
                                  ),
                                  (t.video.ext.format = r))
                                : ((0, o.logInfo)(
                                    'setting obj.video.format to be an array of objects',
                                  ),
                                  (t.video.ext.format = [r])))
                            : (0, o.logWarn)(
                                'cannot set w, h & format values for video; the config is not right',
                              );
                      }
                      e.mediaTypes.hasOwnProperty(d.s6) &&
                        ((t.native = e.mediaTypes[d.s6]),
                        (0, o.logInfo)(
                          'setting native object from the mediaTypes.native element: ' +
                            t.id +
                            ':',
                          t.native,
                        )),
                        e.hasOwnProperty('getFloor')
                          ? ((0, o.logInfo)(
                              'This bidRequest object has property: getFloor',
                            ),
                            (t.floor = this.getFloorObjectForAuction(e)),
                            (0, o.logInfo)('obj.floor is : ', t.floor))
                          : (0, o.logInfo)(
                              'This bidRequest object DOES NOT have property: getFloor',
                            );
                    } else
                      e.hasOwnProperty('sizes')
                        ? ((0, o.logInfo)(
                            'no mediaTypes detected - will use the sizes array in the config root',
                          ),
                          (l = e.sizes))
                        : (0, o.logInfo)(
                            'no mediaTypes detected, no sizes array in the config root either. Cannot set sizes for banner type',
                          );
                    if (
                      (l.length > 0 &&
                        (t.banner = {
                          topframe: 1,
                          w: l[0][0] || 0,
                          h: l[0][1] || 0,
                          format: l.map((e) => ({ w: e[0], h: e[1] })),
                        }),
                      (t.placementId = i),
                      (0, a.J)(t, 'ext.prebid', { storedrequest: { id: i } }),
                      (t.ext[r] = {}),
                      (t.ext[r].adUnitCode = e.adUnitCode),
                      e.params.hasOwnProperty('customData') &&
                        (t.ext[r].customData = e.params.customData),
                      (0, o.logInfo)(`obj.ext.${r} is `, t.ext[r]),
                      null != f)
                    )
                      if (
                        ((0, o.logInfo)('setting isTestMode to ', f),
                        t.ext[r].hasOwnProperty('customData'))
                      )
                        for (let e = 0; e < t.ext[r].customData.length; e++)
                          t.ext[r].customData[e].targeting[h] = f;
                      else
                        (t.ext[r].customData = [
                          { settings: {}, targeting: {} },
                        ]),
                          (t.ext[r].customData[0].targeting[h] = f);
                    u &&
                      (0, n.A)(u, 'site') &&
                      ((0, o.logInfo)('adding fpd.site'),
                      (0, n.A)(t, 'ext.' + r + '.customData.0.targeting', !1)
                        ? (t.ext[r].customData[0].targeting = Object.assign(
                            t.ext[r].customData[0].targeting,
                            u.site,
                          ))
                        : (0, a.J)(
                            t,
                            'ext.' + r + '.customData.0.targeting',
                            u.site,
                          )),
                      !m && (0, n.A)(e, 'schain') && (m = e.schain);
                    let p = (0, n.A)(e, 'ortb2Imp.ext.gpid');
                    return p && (0, a.J)(t, 'ext.gpid', p), t;
                  }),
                  w = {};
                if (
                  ((w[r] = {}),
                  (w[r][i + '_pb_v'] = y),
                  (w[r][i + '_rw'] = b ? 1 : 0),
                  e.length > 0)
                ) {
                  let e = this.cookieSyncBag.userIdObject;
                  e.hasOwnProperty('pubcid') && (w[r].pubcid = e.pubcid);
                }
                w[r].pv = this.getPageId();
                let v = this.getWhitelabelConfigItem('ozone.oz_omp_floor');
                (0, o.logInfo)(`${i}_omp_floor dollar value = `, v),
                  'number' == typeof v
                    ? (w[r][i + '_omp_floor'] = v)
                    : void 0 !== v &&
                      (0, o.logError)(
                        `${i}_omp_floor is invalid - IF SET then this must be a number, representing dollar value eg. ${i}_omp_floor: 1.55. You have it set as a ` +
                          typeof v,
                      );
                let A = this.getWhitelabelConfigItem(
                    'ozone.oz_whitelist_adserver_keys',
                  ),
                  O = (0, o.isArray)(A) && A.length > 0;
                (w[r][i + '_kvp_rw'] = O ? 1 : 0),
                  'ozone' !== r &&
                    ((0, o.logInfo)('setting aliases object'),
                    (w.prebid = { aliases: { ozone: r } })),
                  c.hasOwnProperty('ozf') &&
                    (w[r].ozf = 'true' === c.ozf || '1' === c.ozf ? 1 : 0),
                  c.hasOwnProperty('ozpf') &&
                    (w[r].ozpf = 'true' === c.ozpf || '1' === c.ozpf ? 1 : 0),
                  c.hasOwnProperty('ozrp') &&
                    c.ozrp.match(/^[0-3]$/) &&
                    (w[r].ozrp = parseInt(c.ozrp)),
                  c.hasOwnProperty('ozip') &&
                    c.ozip.match(/^\d+$/) &&
                    (w[r].ozip = parseInt(c.ozip)),
                  null != this.propertyBag.endpointOverride &&
                    (w[r].origin = this.propertyBag.endpointOverride);
                let _ = (0, n.A)(e, '0.userIdAsEids', []);
                if (
                  ((g.site = {
                    publisher: { id: s.publisherId },
                    page: this.getRefererInfo().page,
                    id: s.siteId,
                  }),
                  (g.test = l.$W.getConfig('debug') ? 1 : 0),
                  t && t.gdprConsent)
                ) {
                  (0, o.logInfo)('ADDING GDPR info');
                  let e = (0, n.A)(t, 'gdprConsent.apiVersion', 1);
                  (g.regs = {
                    ext: {
                      gdpr: t.gdprConsent.gdprApplies ? 1 : 0,
                      apiVersion: e,
                    },
                  }),
                    (0, n.A)(g, 'regs.ext.gdpr')
                      ? (0, a.J)(
                          g,
                          'user.ext.consent',
                          t.gdprConsent.consentString,
                        )
                      : (0, o.logInfo)(
                          '**** Strange CMP info: bidderRequest.gdprConsent exists BUT bidderRequest.gdprConsent.gdprApplies is false. See bidderRequest logged above. ****',
                        );
                } else
                  (0, o.logInfo)(
                    'WILL NOT ADD GDPR info; no bidderRequest.gdprConsent object',
                  );
                t && t.uspConsent
                  ? ((0, o.logInfo)('ADDING USP consent info'),
                    (0, a.J)(g, 'regs.ext.us_privacy', t.uspConsent))
                  : (0, o.logInfo)(
                      'WILL NOT ADD USP consent info; no bidderRequest.uspConsent.',
                    ),
                  m &&
                    ((0, o.logInfo)('schain found'),
                    (0, a.J)(g, 'source.ext.schain', m)),
                  !0 === l.$W.getConfig('coppa') &&
                    (0, a.J)(g, 'regs.coppa', 1);
                let R = (0, o.generateUUID)();
                if (this.isBatchRequests()) {
                  (0, o.logInfo)('going to batch the requests');
                  let e = [];
                  for (let r = 0; r < I.length; r += 10)
                    (g.id = R),
                      (g.imp = I.slice(r, r + 10)),
                      (g.ext = w),
                      (0, a.J)(g, 'user.ext.eids', _),
                      g.imp.length > 0 &&
                        e.push({
                          method: 'POST',
                          url: this.getAuctionUrl(),
                          data: JSON.stringify(g),
                          bidderRequest: t,
                        });
                  return (
                    (0, o.logInfo)('batch request going to return : ', e), e
                  );
                }
                if (((0, o.logInfo)('requests will not be batched.'), p)) {
                  (0, o.logInfo)(
                    'buildRequests starting to generate response for a single request',
                  ),
                    (g.id = R),
                    (g.imp = I),
                    (g.ext = w),
                    (0, a.J)(g, 'user.ext.eids', _);
                  var D = {
                    method: 'POST',
                    url: this.getAuctionUrl(),
                    data: JSON.stringify(g),
                    bidderRequest: t,
                  };
                  return (
                    (0, o.logInfo)(
                      'buildRequests request data for single = ',
                      (0, o.deepClone)(g),
                    ),
                    (this.propertyBag.buildRequestsEnd = new Date().getTime()),
                    (0, o.logInfo)(
                      `buildRequests going to return for single at time ${
                        this.propertyBag.buildRequestsEnd
                      } (took ${
                        this.propertyBag.buildRequestsEnd -
                        this.propertyBag.buildRequestsStart
                      }ms): `,
                      D,
                    ),
                    D
                  );
                }
                let T = I.map((e) => {
                  (0, o.logInfo)(
                    'buildRequests starting to generate non-single response, working on imp : ',
                    e,
                  );
                  let r = Object.assign({}, g);
                  return (
                    (r.id = (0, o.generateUUID)()),
                    (r.imp = [e]),
                    (r.ext = w),
                    (0, a.J)(r, 'user.ext.eids', _),
                    (0, o.logInfo)(
                      'buildRequests RequestSingle (for non-single) = ',
                      r,
                    ),
                    {
                      method: 'POST',
                      url: this.getAuctionUrl(),
                      data: JSON.stringify(r),
                      bidderRequest: t,
                    }
                  );
                });
                return (
                  (this.propertyBag.buildRequestsEnd = new Date().getTime()),
                  (0, o.logInfo)(
                    `buildRequests going to return for non-single at time ${
                      this.propertyBag.buildRequestsEnd
                    } (took ${
                      this.propertyBag.buildRequestsEnd -
                      this.propertyBag.buildRequestsStart
                    }ms): `,
                    T,
                  ),
                  T
                );
              },
              getFloorObjectForAuction(e) {
                const t = {
                  banner: (0, n.A)(e, 'mediaTypes.banner.sizes', null),
                  video: (0, n.A)(e, 'mediaTypes.video.playerSize', null),
                  native: (0, n.A)(e, 'mediaTypes.native.image.sizes', null),
                };
                (0, o.logInfo)(
                  'getFloorObjectForAuction mediaTypesSizes : ',
                  t,
                );
                let r = {};
                return (
                  t.banner &&
                    (r.banner = e.getFloor({
                      mediaType: 'banner',
                      currency: 'USD',
                      size: t.banner,
                    })),
                  t.video &&
                    (r.video = e.getFloor({
                      mediaType: 'video',
                      currency: 'USD',
                      size: t.video,
                    })),
                  t.native &&
                    (r.native = e.getFloor({
                      mediaType: 'native',
                      currency: 'USD',
                      size: t.native,
                    })),
                  (0, o.logInfo)(
                    'getFloorObjectForAuction returning : ',
                    (0, o.deepClone)(r),
                  ),
                  r
                );
              },
              interpretResponse(e, t) {
                t &&
                  t.bidderRequest &&
                  t.bidderRequest.bids &&
                  this.loadWhitelabelData(t.bidderRequest.bids[0]);
                let r = new Date().getTime(),
                  i = this.propertyBag.whitelabel.bidder,
                  a = this.propertyBag.whitelabel.keyPrefix;
                (0, o.logInfo)(
                  `interpretResponse time: ${r} . Time between buildRequests done and interpretResponse start was ${
                    r - this.propertyBag.buildRequestsEnd
                  }ms`,
                ),
                  (0, o.logInfo)(
                    'serverResponse, request',
                    (0, o.deepClone)(e),
                    (0, o.deepClone)(t),
                  );
                let s = (e = e.body || {}).id;
                if (!e.hasOwnProperty('seatbid')) return [];
                if ('object' != typeof e.seatbid) return [];
                let l = [],
                  p = this.getWhitelabelConfigItem(
                    'ozone.enhancedAdserverTargeting',
                  );
                (0, o.logInfo)('enhancedAdserverTargeting', p),
                  void 0 === p && (p = !0),
                  (0, o.logInfo)('enhancedAdserverTargeting', p),
                  (e.seatbid = (function (e) {
                    (0, o.logInfo)('injectAdIdsIntoAllBidResponses', e);
                    for (let t = 0; t < e.length; t++) {
                      let r = e[t];
                      for (let e = 0; e < r.bid.length; e++)
                        r.bid[e].adId =
                          `${r.bid[e].impid}-${t}-${m.propertyBag.whitelabel.keyPrefix}-${e}`;
                    }
                    return e;
                  })(e.seatbid)),
                  (e.seatbid = this.removeSingleBidderMultipleBids(e.seatbid));
                let g = this.getWhitelabelConfigItem('ozone.oz_omp_floor'),
                  u = 'number' == typeof g,
                  c = this.getWhitelabelConfigItem(
                    'ozone.oz_whitelist_adserver_keys',
                  ),
                  h = (0, o.isArray)(c) && c.length > 0;
                for (let r = 0; r < e.seatbid.length; r++) {
                  let f = e.seatbid[r];
                  for (let b = 0; b < f.bid.length; b++) {
                    let m = this.getBidRequestForBidId(
                      f.bid[b].impid,
                      t.bidderRequest.bids,
                    );
                    (0, o.logInfo)(
                      `seatbid:${r}, bid:${b} Going to set default w h for seatbid/bidRequest`,
                      f.bid[b],
                      m,
                    );
                    const { defaultWidth: I, defaultHeight: B } = w(m);
                    let D = _(f.bid[b], I, B);
                    D.meta = { advertiserDomains: D.adomain || [] };
                    let T = null,
                      x = !1,
                      P = (0, n.A)(D, 'ext.prebid.type');
                    (0, o.logInfo)(`this bid type is : ${P}`, b);
                    let k = {};
                    if (P === d.G_)
                      if (
                        ((x = !0),
                        this.setBidMediaTypeIfNotExist(D, d.G_),
                        (T = this.getVideoContextForBidId(
                          D.bidId,
                          t.bidderRequest.bids,
                        )),
                        'outstream' === T)
                      )
                        (0, o.logInfo)(
                          'going to set thisBid.mediaType = VIDEO & attach a renderer to OUTSTREAM video : ',
                          b,
                        ),
                          (D.renderer = R(D.bidId));
                      else if (
                        ((0, o.logInfo)(
                          'bid is not an outstream video, will set thisBid.mediaType = VIDEO and thisBid.vastUrl and not attach a renderer: ',
                          b,
                        ),
                        (D.vastUrl = `https://${(0, n.A)(
                          D,
                          'ext.prebid.targeting.hb_cache_host',
                          'missing_host',
                        )}${(0, n.A)(
                          D,
                          'ext.prebid.targeting.hb_cache_path',
                          'missing_path',
                        )}?id=${(0, n.A)(
                          D,
                          'ext.prebid.targeting.hb_cache_id',
                          'missing_id',
                        )}`),
                        (k.hb_cache_host = (0, n.A)(
                          D,
                          'ext.prebid.targeting.hb_cache_host',
                          'no-host',
                        )),
                        (k.hb_cache_path = (0, n.A)(
                          D,
                          'ext.prebid.targeting.hb_cache_path',
                          'no-path',
                        )),
                        D.hasOwnProperty('videoCacheKey'))
                      )
                        (0, o.logInfo)(
                          'videoCacheKey already exists on the bid object, will not add it',
                        );
                      else {
                        let e = (0, n.A)(
                          D,
                          'ext.prebid.targeting.hb_uuid',
                          'no_hb_uuid',
                        );
                        (0, o.logInfo)(`Adding videoCacheKey: ${e}`),
                          (D.videoCacheKey = e);
                      }
                    else this.setBidMediaTypeIfNotExist(D, d.D4);
                    if (p) {
                      let t = A(D.bidId, e.seatbid);
                      (0, o.logInfo)('Going to iterate allBidsForThisBidId', t),
                        Object.keys(t).forEach((e, r, s) => {
                          (0, o.logInfo)(
                            `adding adserverTargeting for ${e} for bidId ${D.bidId}`,
                          ),
                            (k[a + '_' + e] = e),
                            (k[a + '_' + e + '_crid'] = String(t[e].crid)),
                            (k[a + '_' + e + '_adv'] = String(t[e].adomain)),
                            (k[a + '_' + e + '_adId'] = String(t[e].adId)),
                            (k[a + '_' + e + '_pb_r'] = O(
                              t[e].price,
                              t[e].ext.prebid.type,
                            )),
                            t[e].hasOwnProperty('dealid') &&
                              (k[a + '_' + e + '_dealid'] = String(
                                t[e].dealid,
                              )),
                            u &&
                              (k[a + '_' + e + '_omp'] =
                                t[e].price >= g ? '1' : '0'),
                            x && (k[a + '_' + e + '_vid'] = T);
                          let d = (0, n.A)(t[e], `ext.bidder.${i}.floor`, null);
                          null != d && (k[a + '_' + e + '_flr'] = d);
                          let l = (0, n.A)(
                            t[e],
                            `ext.bidder.${i}.ruleId`,
                            null,
                          );
                          null != l && (k[a + '_' + e + '_rid'] = l),
                            e.match(/^ozappnexus/) &&
                              (k[a + '_' + e + '_sid'] = String(t[e].cid));
                        });
                    } else
                      h
                        ? (0, o.logWarn)(
                            `You have set a whitelist of adserver keys but this will be ignored because ${i}.enhancedAdserverTargeting is set to false. No per-bid keys will be sent to adserver.`,
                          )
                        : (0, o.logInfo)(
                            `${i}.enhancedAdserverTargeting is set to false, so no per-bid keys will be sent to adserver.`,
                          );
                    let { seat: S, bid: q } = v(D.bidId, e.seatbid);
                    (k[a + '_auc_id'] = String(s)),
                      (k[a + '_winner'] = String(S)),
                      (k[a + '_bid'] = 'true'),
                      (k[a + '_cache_id'] = (0, n.A)(
                        D,
                        'ext.prebid.targeting.hb_cache_id',
                        'no-id',
                      )),
                      (k[a + '_uuid'] = (0, n.A)(
                        D,
                        'ext.prebid.targeting.hb_uuid',
                        'no-id',
                      )),
                      p &&
                        ((k[a + '_imp_id'] = String(q.impid)),
                        (k[a + '_pb_v'] = y),
                        (k[a + '_pb'] = q.price),
                        (k[a + '_pb_r'] = O(q.price, P)),
                        (k[a + '_adId'] = String(q.adId)),
                        (k[a + '_size'] = `${q.width}x${q.height}`)),
                      h &&
                        ((0, o.logInfo)(
                          'Going to filter out adserver targeting keys not in the whitelist: ',
                          c,
                        ),
                        Object.keys(k).forEach(function (e) {
                          -1 === c.indexOf(e) && delete k[e];
                        })),
                      (D.adserverTargeting = k),
                      l.push(D);
                  }
                }
                let f = new Date().getTime();
                return (
                  (0, o.logInfo)(
                    `interpretResponse going to return at time ${f} (took ${
                      f - r
                    }ms) Time from buildRequests Start -> interpretRequests End = ${
                      f - this.propertyBag.buildRequestsStart
                    }ms`,
                  ),
                  (0, o.logInfo)(
                    'interpretResponse arrAllBids (serialised): ',
                    (0, o.deepClone)(l),
                  ),
                  l
                );
              },
              setBidMediaTypeIfNotExist(e, t) {
                e.hasOwnProperty('mediaType')
                  ? (0, o.logInfo)(
                      `found value for thisBid.mediaType: ${e.mediaType}`,
                    )
                  : ((0, o.logInfo)(`setting thisBid.mediaType = ${t}`),
                    (e.mediaType = t));
              },
              getWhitelabelConfigItem(e) {
                if ('ozone' === this.propertyBag.whitelabel.bidder)
                  return l.$W.getConfig(e);
                let t = e.replace('ozone', this.propertyBag.whitelabel.bidder);
                return (
                  (t = t.replace(
                    'oz_',
                    this.propertyBag.whitelabel.keyPrefix + '_',
                  )),
                  l.$W.getConfig(t)
                );
              },
              removeSingleBidderMultipleBids(e) {
                var t = [];
                for (let a = 0; a < e.length; a++) {
                  let s = e[a];
                  var r = { seat: s.seat, bid: [] },
                    i = [];
                  for (let e = 0; e < s.bid.length; e++) {
                    var n = s.bid[e];
                    if (!(0, o.contains)(i, n.impid)) {
                      i.push(n.impid);
                      for (let t = e + 1; t < s.bid.length; t++)
                        s.bid[t].impid === n.impid &&
                          s.bid[t].price > n.price &&
                          (n = s.bid[t]);
                      r.bid.push(n);
                    }
                  }
                  t.push(r);
                }
                return t;
              },
              getUserSyncs(e, t, r, i) {
                if (
                  ((0, o.logInfo)(
                    'getUserSyncs optionsType',
                    e,
                    'serverResponse',
                    t,
                    'gdprConsent',
                    r,
                    'usPrivacy',
                    i,
                    'cookieSyncBag',
                    this.cookieSyncBag,
                  ),
                  !t || 0 === t.length)
                )
                  return [];
                if (e.iframeEnabled) {
                  var a = [];
                  l.$W.getConfig('debug') && a.push('pbjs_debug=true'),
                    a.push(
                      'gdpr=' + ((0, n.A)(r, 'gdprApplies', !1) ? '1' : '0'),
                    ),
                    a.push('gdpr_consent=' + (0, n.A)(r, 'consentString', '')),
                    a.push('usp_consent=' + (i || ''));
                  for (let e in this.cookieSyncBag.userIdObject)
                    a.push(e + '=' + this.cookieSyncBag.userIdObject[e]);
                  a.push('publisherId=' + this.cookieSyncBag.publisherId),
                    a.push('siteId=' + this.cookieSyncBag.siteId),
                    a.push('cb=' + Date.now()),
                    a.push('bidder=' + this.propertyBag.whitelabel.bidder);
                  var s = a.join('&');
                  return (
                    s.length > 0 && (s = '?' + s),
                    (0, o.logInfo)(
                      'getUserSyncs going to return cookie sync url : ' +
                        this.getCookieSyncUrl() +
                        s,
                    ),
                    [{ type: 'iframe', url: this.getCookieSyncUrl() + s }]
                  );
                }
              },
              getBidRequestForBidId(e, t) {
                for (let r = 0; r < t.length; r++)
                  if (t[r].bidId === e) return t[r];
                return null;
              },
              getVideoContextForBidId(e, t) {
                let r = this.getBidRequestForBidId(e, t);
                return null != r
                  ? (0, n.A)(r, 'mediaTypes.video.context', 'unknown')
                  : null;
              },
              findAllUserIds(e) {
                var t = {};
                let r = [
                  'pubcid',
                  'tdid',
                  'idl_env',
                  'criteoId',
                  'lotamePanoramaId',
                  'fabrickId',
                ];
                if (e.hasOwnProperty('userId')) {
                  for (let i in r) {
                    let n = r[i];
                    e.userId.hasOwnProperty(n) &&
                      ('string' == typeof e.userId[n]
                        ? (t[n] = e.userId[n])
                        : 'object' == typeof e.userId[n]
                          ? ((0, o.logError)(
                              `WARNING: findAllUserIds had to use first key in user object to get value for bid.userId key: ${n}. Prebid adapter should be updated.`,
                            ),
                            (t[n] = e.userId[n][Object.keys(e.userId[n])[0]]))
                          : (0, o.logError)(
                              `failed to get string key value for userId : ${n}`,
                            ));
                  }
                  let i = (0, n.A)(e.userId, 'lipb.lipbid');
                  i && (t.lipb = { lipbid: i });
                  let a = (0, n.A)(e.userId, 'id5id.uid');
                  a && (t.id5id = a);
                  let s = (0, n.A)(e.userId, 'sharedid.id');
                  s && (t.sharedid = s);
                }
                if (!t.hasOwnProperty('pubcid')) {
                  let r = (0, n.A)(e, 'crumbs.pubcid');
                  r && (t.pubcid = r);
                }
                return t;
              },
              getPlacementId: (e) => e.params.placementId.toString(),
              getPlacementIdOverrideFromGetParam() {
                let e = this.propertyBag.whitelabel.keyPrefix,
                  t = this.getGetParametersAsObject();
                if (t.hasOwnProperty(e + 'storedrequest')) {
                  if (this.isValidPlacementId(t[e + 'storedrequest']))
                    return (
                      (0, o.logInfo)(
                        `using GET ${e}storedrequest ` +
                          t[e + 'storedrequest'] +
                          ' to replace placementId',
                      ),
                      t[e + 'storedrequest']
                    );
                  (0, o.logError)(
                    `GET ${e}storedrequest FAILED VALIDATION - will not use it`,
                  );
                }
                return null;
              },
              getGetParametersAsObject() {
                let e = (0, o.parseUrl)(this.getRefererInfo().location);
                return (
                  (0, o.logInfo)('getGetParametersAsObject found:', e.search),
                  e.search
                );
              },
              getRefererInfo() {
                if ((0, u.EN)().hasOwnProperty('location'))
                  return (
                    (0, o.logInfo)(
                      'FOUND location on getRefererInfo OK (prebid >= 7); will use getRefererInfo for location & page',
                    ),
                    (0, u.EN)()
                  );
                (0, o.logInfo)(
                  'DID NOT FIND location on getRefererInfo (prebid < 7); will use legacy code that ALWAYS worked reliably to get location & page ;-)',
                );
                try {
                  return {
                    page: top.location.href,
                    location: top.location.href,
                  };
                } catch (e) {
                  return {
                    page: window.location.href,
                    location: window.location.href,
                  };
                }
              },
              blockTheRequest() {
                let e = this.getWhitelabelConfigItem('ozone.oz_request');
                return (
                  'boolean' == typeof e &&
                  !e &&
                  ((0, o.logWarn)(
                    `Will not allow auction : ${this.propertyBag.whitelabel.keyPrefix}_request is set to false`,
                  ),
                  !0)
                );
              },
              getPageId: function () {
                if (null == this.propertyBag.pageId) {
                  let e = '',
                    t = '0123456789abcdefghijklmnopqrstuvwxyz';
                  for (let r = 20; r > 0; r--)
                    e += t[Math.floor(36 * Math.random())];
                  this.propertyBag.pageId = new Date().getTime() + '_' + e;
                }
                return this.propertyBag.pageId;
              },
              unpackVideoConfigIntoIABformat(e, t) {
                let r = { ext: {} };
                return (
                  (r = this._unpackVideoConfigIntoIABformat(r, e)),
                  (r = this._unpackVideoConfigIntoIABformat(r, t)),
                  r
                );
              },
              _unpackVideoConfigIntoIABformat(e, t) {
                let r = [
                  'mimes',
                  'minduration',
                  'maxduration',
                  'protocols',
                  'w',
                  'h',
                  'startdelay',
                  'placement',
                  'plcmt',
                  'linearity',
                  'skip',
                  'skipmin',
                  'skipafter',
                  'sequence',
                  'battr',
                  'maxextended',
                  'minbitrate',
                  'maxbitrate',
                  'boxingallowed',
                  'playbackmethod',
                  'playbackend',
                  'delivery',
                  'pos',
                  'companionad',
                  'api',
                  'companiontype',
                ];
                for (const o in t) {
                  var i = !1;
                  r.forEach(function (r) {
                    r === o && ((e[o] = t[o]), (i = !0));
                  }),
                    i || (e.ext[o] = t[o]);
                }
                return (
                  t.hasOwnProperty('ext') &&
                    'object' == typeof t.ext &&
                    (t.hasOwnProperty('ext')
                      ? (e.ext = (0, o.mergeDeep)(e.ext, t.ext))
                      : (e.ext = t.ext)),
                  e
                );
              },
              addVideoDefaults(e, t, r) {
                return (
                  (e = this._addVideoDefaults(e, t, !1)),
                  (e = this._addVideoDefaults(e, r, !0))
                );
              },
              _addVideoDefaults(e, t, r) {
                let i = (0, n.A)(t, 'context');
                'outstream' === i
                  ? (e.placement = 3)
                  : 'instream' === i && (e.placement = 1);
                let o = (0, n.A)(t, 'skippable', null);
                return (
                  null == o
                    ? r && !e.hasOwnProperty('skip') && (e.skip = o ? 1 : 0)
                    : (e.skip = o ? 1 : 0),
                  e
                );
              },
              getLoggableBidObject(e) {
                let t = {
                  ad: e.ad,
                  adId: e.adId,
                  adUnitCode: e.adUnitCode,
                  adm: e.adm,
                  adomain: e.adomain,
                  adserverTargeting: e.adserverTargeting,
                  auctionId: e.auctionId,
                  bidId: e.bidId,
                  bidder: e.bidder,
                  bidderCode: e.bidderCode,
                  cpm: e.cpm,
                  creativeId: e.creativeId,
                  crid: e.crid,
                  currency: e.currency,
                  h: e.h,
                  w: e.w,
                  impid: e.impid,
                  mediaType: e.mediaType,
                  params: e.params,
                  price: e.price,
                  transactionId: e.transactionId,
                  ttl: e.ttl,
                };
                return (
                  e.hasOwnProperty('floorData') && (t.floorData = e.floorData),
                  t
                );
              },
            };
          function I(e) {
            return Array.isArray(e) && Array.isArray(e[0]) ? e[0] : e;
          }
          function w(e) {
            if (!e)
              return (
                (0, o.logInfo)(
                  'defaultSize received empty bid obj! going to return fixed default size',
                ),
                { defaultHeight: 250, defaultWidth: 300 }
              );
            const { sizes: t } = e,
              r = {};
            return (r.defaultWidth = I(t)[0]), (r.defaultHeight = I(t)[1]), r;
          }
          function v(e, t) {
            let r = null,
              i = null;
            for (let o = 0; o < t.length; o++) {
              let n = t[o].bid,
                a = t[o].seat;
              for (let t = 0; t < n.length; t++)
                if (n[t].impid === e && (null == r || r.price < n[t].price)) {
                  (r = n[t]), (i = a);
                  break;
                }
            }
            return { seat: i, bid: r };
          }
          function A(e, t) {
            let r = {};
            for (let i = 0; i < t.length; i++) {
              let o = t[i].bid,
                n = t[i].seat;
              for (let t = 0; t < o.length; t++)
                o[t].impid === e &&
                  (r.hasOwnProperty(n)
                    ? r[n].price < o[t].price && (r[n] = o[t])
                    : (r[n] = o[t]));
            }
            return r;
          }
          function O(e, t) {
            const r = l.$W.getConfig(`mediaTypePriceGranularity.${t}`);
            let i = l.$W.getConfig('customPriceBucket'),
              n = l.$W.getConfig('priceGranularity'),
              a = (function (e, t, r, i) {
                if ('object' == typeof t) return t;
                if ('custom' === r) return i;
                return '';
              })(0, r, n, i),
              s = (function (e, t, r) {
                if ('string' == typeof t) return t;
                if ('object' == typeof t) return 'custom';
                if ('string' == typeof r) return r;
                return 'auto';
              })(0, r, n);
            (0, o.logInfo)(
              'getRoundedBid. price:',
              e,
              'mediaType:',
              t,
              'configkey:',
              s,
              'configObject:',
              a,
              'mediaTypeGranularity:',
              r,
              'strBuckets:',
              n,
            );
            let d = (0, p.j)(
              e,
              a,
              l.$W.getConfig('currency.granularityMultiplier'),
            );
            (0, o.logInfo)('priceStringsObj', d);
            let g = {
              medium: 'med',
              custom: 'custom',
              high: 'high',
              low: 'low',
              dense: 'dense',
            };
            if (g.hasOwnProperty(s)) {
              let e = g[s];
              return (
                (0, o.logInfo)(
                  'getRoundedBid: looking for priceStringsKey:',
                  e,
                ),
                d[e]
              );
            }
            return d.auto;
          }
          function _(e, t, r) {
            return (
              (e.cpm = e.price),
              (e.bidId = e.impid),
              (e.requestId = e.impid),
              (e.width = e.w || t),
              (e.height = e.h || r),
              (e.ad = e.adm),
              (e.netRevenue = !0),
              (e.creativeId = e.crid),
              (e.currency = 'USD'),
              (e.ttl = 300),
              e
            );
          }
          function B(e) {
            (0, o.logInfo)('getPlayerSizeFromObject received object', e);
            let t = (0, n.A)(e, 'playerSize');
            return (
              t || (t = (0, n.A)(e, 'ext.playerSize')),
              t
                ? 'object' != typeof t
                  ? ((0, o.logError)(
                      'getPlayerSizeFromObject FAILED: playerSize is not an object/array',
                      e,
                    ),
                    null)
                  : t
                : ((0, o.logError)(
                    'getPlayerSizeFromObject FAILED: no playerSize in video object or ext',
                    e,
                  ),
                  null)
            );
          }
          function R(e) {
            let t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {},
              r = window.ozoneVideo;
            (0, o.logInfo)(
              'newRenderer going to set loaded to ' + (r ? 'true' : 'false'),
            );
            const i = g.A4.install({
              url: m.getRendererUrl(),
              config: t,
              loaded: r,
              adUnitCode: e,
            });
            try {
              i.setRender(D);
            } catch (e) {
              (0, o.logError)(
                'Prebid Error when calling setRender on renderer',
                i,
                e,
              );
            }
            return (0, o.logInfo)('returning renderer object'), i;
          }
          function D(e) {
            (0, o.logInfo)(
              'outstreamRender called. Going to push the call to window.ozoneVideo.outstreamRender(bid) bid = (first static, then reference)',
            ),
              (0, o.logInfo)((0, o.deepClone)(m.getLoggableBidObject(e))),
              e.renderer.push(() => {
                (0, o.logInfo)(
                  'Going to execute window.ozoneVideo.outstreamRender',
                ),
                  window.ozoneVideo.outstreamRender(e);
              });
          }
          (0, s.a$)(m),
            (0, o.logInfo)(`*BidAdapter ${y} was loaded`),
            (0, i.E)('ozoneBidAdapter');
        },
      },
      (e) => {
        e.O(0, [60802, 51085], () => {
          return (t = 53254), e((e.s = t));
          var t;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [90362],
      {
        73294: (e, n, t) => {
          var i = t(7873),
            o = t(43272),
            r = t(16833),
            a = t(91069),
            s = t(63172),
            p = t(70433),
            c = t(1e3),
            l = t(75023),
            u = t(78969),
            d = t(76743),
            f = t(12713),
            g = t(27194);
          const b = 'PAAPI',
            m = [],
            h = new WeakSet();
          (0, r.xG)('paapi', function (e) {
            m.push(e),
              e.init && e.init({ getPAAPIConfig: B, expandFilters: w });
          });
          const y = (0, g.$)(),
            I = (0, g.$)(),
            C = (0, g.$)();
          let x = {},
            S = {};
          function A(e, n, t) {
            !e.hasOwnProperty(n) && (e[n] = []), e[n].push(t);
          }
          function O(e, n) {
            let { ortb2: t, ortb2Imp: i } = n;
            return (
              null != t &&
                (0, s.J)(
                  e,
                  'prebid.ortb2',
                  (0, a.mergeDeep)({}, t, e.prebid?.ortb2),
                ),
              null != i &&
                (0, s.J)(
                  e,
                  'prebid.ortb2Imp',
                  (0, a.mergeDeep)({}, i, e.prebid?.ortb2Imp),
                ),
              e
            );
          }
          o.$W.getConfig('paapi', (e) => {
            var n;
            (n = e.paapi) && !0 === n.enabled
              ? ((S = n),
                (0, a.logInfo)(
                  `${b} enabled (browser ${
                    $() ? 'supports' : 'does NOT support'
                  } runAdAuction)`,
                  n,
                ))
              : ((S = {}), (0, a.logInfo)(`${b} disabled`, n));
          }),
            (0, r.Yn)('addPaapiConfig').before(function (e, n, t) {
              if (q(o.$W.getCurrentBidder()).enabled) {
                const { adUnitCode: i, auctionId: r } = n;
                function p(e, n) {
                  const t = e(r);
                  null != t
                    ? A(t, i, n)
                    : (0, a.logWarn)(
                        b,
                        `Received PAAPI config for auction that has closed (auction '${r}', adUnit '${i}')`,
                        n,
                      );
                }
                const { config: c, igb: l } = t;
                c &&
                  ((c.auctionSignals = O(c.auctionSignals || {}, n)),
                  (c.interestGroupBuyers || []).forEach((e) => {
                    (0, s.J)(
                      c,
                      `perBuyerSignals.${e}`,
                      O(c.perBuyerSignals?.[e] || {}, n),
                    );
                  }),
                  p(y, c)),
                  l && v(l) && ((l.pbs = O(l.pbs || {}, n)), p(C, [n, l]));
              }
              e(n, t);
            }),
            (0, r.Yn)('makeBidRequests').after(function (e, n) {
              $() &&
                n.forEach((e) => {
                  const { enabled: n, ae: t } = q(e.bidderCode);
                  Object.assign(e, {
                    paapi: {
                      enabled: n,
                      componentSeller: !!S.componentSeller?.auctionConfig,
                    },
                  }),
                    e.bids.forEach((e) => {
                      const n =
                          null != e.ortb2Imp?.ext?.igs
                            ? e.ortb2Imp.ext.igs.ae || 1
                            : null,
                        i = e.ortb2Imp?.ext?.ae;
                      n !== i &&
                        null != n &&
                        null != i &&
                        (0, a.logWarn)(
                          b,
                          'Bid request defines conflicting ortb2Imp.ext.ae and ortb2Imp.ext.igs, using the latter',
                          e,
                        );
                      const o = n ?? i ?? t;
                      if (o) {
                        (0, s.J)(e, 'ortb2Imp.ext.ae', o),
                          (e.ortb2Imp.ext.igs = Object.assign(
                            { ae: o, biddable: 1 },
                            e.ortb2Imp.ext.igs,
                          ));
                        const n = J(e);
                        n && (0, s.J)(e, 'ortb2Imp.ext.paapi.requestedSize', n);
                      }
                    });
                });
              e(n);
            }),
            l.on(u.qY.AUCTION_END, function (e) {
              let {
                auctionId: n,
                bidsReceived: t,
                bidderRequests: i,
                adUnitCodes: o,
                adUnits: r,
              } = e;
              const p = Object.fromEntries(r?.map((e) => [e.code, e]) || []),
                c = i?.flatMap((e) => e.bids),
                l = {};
              (o || []).forEach((e) => {
                (l[e] = null), !x.hasOwnProperty(e) && (x[e] = null);
              });
              const u = y(n),
                g = C(n);
              u &&
                g &&
                Object.entries(g).forEach((e) => {
                  let [n, t] = e;
                  (function (e) {
                    let n =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : E,
                      t =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : S?.componentSeller ?? {},
                      i =
                        arguments.length > 3 && void 0 !== arguments[3]
                          ? arguments[3]
                          : {
                              compact: (e) => {
                                return ((n = e.map((e) => e[1])),
                                n
                                  .reduce((e, n) => {
                                    if (v(n)) {
                                      let t = e.find(
                                        (e) =>
                                          !e.hasOwnProperty(n.origin) ||
                                          (0, a.deepEqual)(e[n.origin], n),
                                      );
                                      t || ((t = {}), e.push(t)),
                                        (t[n.origin] = n);
                                    }
                                    return e;
                                  }, [])
                                  .map((e) => Object.values(e))).map((e) => [
                                  {},
                                  e,
                                ]);
                                var n;
                              },
                              expand: j,
                            };
                    if (!t.auctionConfig)
                      return (
                        (0, a.logWarn)(
                          b,
                          'Cannot use IG buyers: paapi.componentSeller.auctionConfig not set',
                          e.map((e) => e[1]),
                        ),
                        []
                      );
                    return (0, i[t.separateAuctions ? 'expand' : 'compact'])(
                      e,
                    ).map((e) => {
                      let [i, o] = e;
                      const r = (0, a.mergeDeep)(n(o), t.auctionConfig);
                      return (
                        (r.auctionSignals = O(r.auctionSignals || {}, i)), r
                      );
                    });
                  })(t).forEach((e) => A(u, n, e));
                });
              Object.entries(u || {}).forEach((e) => {
                let [i, o] = e;
                const r = (e) => e.adUnitCode === i,
                  u = (function () {
                    let e,
                      n,
                      t =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {},
                      i =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : [],
                      o =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : [];
                    if (i.length > 0) {
                      const t = i.reduce(
                        (0, f.Ph)((0, d.x4)((e) => [e.cpm, e.currency])),
                      );
                      (e = t.cpm), (n = t.currency);
                    } else {
                      const t = o
                          .map(
                            (e) =>
                              'function' == typeof e.getFloor && e.getFloor(),
                          )
                          .filter((e) => e),
                        i =
                          t.length &&
                          t.reduce(
                            (0, f.Bp)((0, d.x4)((e) => [e.floor, e.currency])),
                          );
                      (e = i?.floor), (n = i?.currency);
                    }
                    const r = {};
                    e &&
                      ((0, s.J)(r, 'auctionSignals.prebid.bidfloor', e),
                      n && (0, s.J)(r, 'auctionSignals.prebid.bidfloorcur', n));
                    const a = J(t);
                    a && (r.requestedSize = a);
                    return r;
                  })(p[i], t?.filter(r), c?.filter(r));
                (l[i] = {
                  ...u,
                  componentAuctions: o.map((e) => (0, a.mergeDeep)({}, u, e)),
                }),
                  (x[i] = n);
              }),
                I(n, l),
                m.forEach((e) =>
                  e.onAuctionConfig?.(n, l, (e) => null != l[e] && h.add(l[e])),
                );
            });
          const P = {
            cur: 'perBuyerCurrencies',
            pbs: 'perBuyerSignals',
            ps: 'perBuyerPrioritySignals',
            maxbid: 'auctionSignals.prebid.perBuyerMaxbid',
          };
          function v(e) {
            if (e.origin) return !0;
            (0, a.logWarn)(
              'PAAPI buyer does not specify origin and will be ignored',
              e,
            );
          }
          function E(e) {
            const n = new Set();
            return Object.assign(
              e.reduce(
                (t, i) => (
                  v(i) &&
                    (n.has(i.origin)
                      ? (0, a.logWarn)(
                          b,
                          `Duplicate buyer: ${i.origin}. All but the first will be ignored`,
                          e,
                        )
                      : (n.add(i.origin),
                        Object.entries(P).forEach((e) => {
                          let [n, o] = e;
                          if (null != i[n]) {
                            const e = (0, p.A)(t, o) || {};
                            (e[i.origin] = i[n]), (0, s.J)(t, o, e);
                          }
                        }))),
                  t
                ),
                {},
              ),
              { interestGroupBuyers: Array.from(n.keys()) },
            );
          }
          function j(e) {
            const n = {},
              t = {};
            return (
              e.forEach((e) => {
                let [i, o] = e;
                !n.hasOwnProperty(i.bidder) && (n[i.bidder] = i),
                  A(t, i.bidder, o);
              }),
              Object.entries(t).map((e) => {
                let [t, i] = e;
                return [n[t], i];
              })
            );
          }
          function w() {
            let { auctionId: e, adUnitCode: n } =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {},
              t = [];
            return (
              null == n
                ? (t = Object.keys(x))
                : x.hasOwnProperty(n) && (t = [n]),
              Object.fromEntries(t.map((n) => [n, e ?? x[n]]))
            );
          }
          function B() {
            let e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {},
              n =
                arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
            const t = {};
            return (
              Object.entries(w(e)).forEach((e) => {
                let [i, o] = e;
                const r = I(o);
                if (r?.hasOwnProperty(i)) {
                  const e = r[i];
                  e && !h.has(e) ? ((t[i] = e), h.add(e)) : n && (t[i] = null);
                } else null == o && n && (t[i] = null);
              }),
              t
            );
          }
          function $() {
            return (
              'runAdAuction' in navigator && 'joinAdInterestGroup' in navigator
            );
          }
          function q(e) {
            const n =
              S.enabled &&
              (null == e || !S.bidders?.length || S.bidders?.includes(e));
            return { enabled: n, ae: n ? S.defaultForSlots : void 0 };
          }
          (0, i.m)().getPAAPIConfig = (e) => B(e);
          const W = (0, r.A_)(
            'sync',
            function (e) {
              if (e?.length)
                return e
                  .filter((e) => {
                    let [n, t] = e;
                    return !(n === t && n <= 5);
                  })
                  .reduce(
                    (0, f.Ph)(
                      (0, f.NV)((e) => {
                        let [n, t] = e;
                        return n * t;
                      }),
                    ),
                  );
            },
            'getPAAPISize',
          );
          function J(e) {
            return (
              e.ortb2Imp?.ext?.paapi?.requestedSize ||
              (() => {
                const n = W(
                  (0, a.sizesToSizeTuples)(e.mediaTypes?.banner?.sizes),
                );
                if (n) return { width: n[0], height: n[1] };
              })()
            );
          }
          function R(e, n, t) {
            e.forEach((e) => {
              const n = t.impContext[e.impid];
              n?.imp?.ext?.ae
                ? ((n.paapiConfigs = n.paapiConfigs || []),
                  n.paapiConfigs.push(e))
                : (0, a.logWarn)(
                    b,
                    'Received auction configuration for an impression that was not in the request or did not ask for it',
                    e,
                    n?.imp,
                  );
            });
          }
          (0, c.pS)({
            type: c.Tb,
            name: 'impExtAe',
            fn: function (e, n, t) {
              t.bidderRequest.paapi?.enabled ||
                (delete e.ext?.ae, delete e.ext?.igs);
            },
          }),
            (0, c.pS)({
              type: c.Cf,
              name: 'extPrebidFledge',
              fn: function (e, n, t) {
                R(n.ext?.prebid?.fledge?.auctionconfigs || [], 0, t);
              },
              dialects: [c.e4],
            }),
            (0, c.pS)({
              type: c.Cf,
              name: 'extIgiIgs',
              fn: function (e, n, t) {
                R(
                  (n.ext?.igi || []).flatMap((e) =>
                    (e?.igs || [])
                      .map(
                        (n) => (
                          n.impid !== e.impid &&
                            null != n.impid &&
                            null != e.impid &&
                            (0, a.logWarn)(
                              b,
                              "ORTB response ext.igi.igs.impid conflicts with parent's impid",
                              e,
                            ),
                          { config: n.config, impid: n.impid ?? e.impid }
                        ),
                      )
                      .concat(
                        (e?.igb || []).map((n) => ({ igb: n, impid: e.impid })),
                      ),
                  ),
                  0,
                  t,
                );
              },
            }),
            (0, c.pS)({
              type: c.Cf,
              name: 'paapiConfigs',
              priority: -1,
              fn: function (e, n, t) {
                const i = Object.values(t.impContext).flatMap((e) =>
                  (e.paapiConfigs || []).map((n) => ({
                    bidId: e.bidRequest.bidId,
                    ...n,
                  })),
                );
                i.length > 0 && (e.paapi = i);
              },
            }),
            (0, i.E)('paapi');
        },
      },
      (e) => {
        e.O(0, [60802, 41225, 47606, 51085], () => {
          return (n = 73294), e((e.s = n));
          var n;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [25494],
      {
        36178: (t, n, e) => {
          var o = e(7873),
            i = e(16833),
            r = e(70433),
            g = e(91069),
            l = e(43272),
            a = e(12713),
            c = e(97779);
          const s = 'paapiForGpt';
          let f;
          l.$W.getConfig('paapi', (t) => {
            (0, r.A)(t, 'paapi.gpt.configWithTargeting', !0)
              ? ((0, g.logInfo)(
                  s,
                  'enabling PAAPI configuration with setTargetingForGPTAsync',
                ),
                c.iS.setTargetingForGPT.before(h))
              : c.iS.setTargetingForGPT.getHooks({ hook: h }).remove();
          });
          const u = (function () {
              const t = {};
              return function (n, e, o) {
                let i =
                  !(arguments.length > 3 && void 0 !== arguments[3]) ||
                  arguments[3];
                if (e.length > 0) {
                  let r = t[n] ?? {},
                    l = Object.fromEntries(o.map((t) => [t.seller, t]));
                  const a = Object.keys(l);
                  i
                    ? ((l = Object.assign(r, l)),
                      (r = Object.fromEntries(a.map((t) => [t, null]))))
                    : a.forEach((t) => {
                        r[t] = null;
                      }),
                    Object.keys(r).length ? (t[n] = r) : delete t[n];
                  const c = Object.entries(l).map((t) => {
                    let [n, e] = t;
                    return { configKey: n, auctionConfig: e };
                  });
                  c.length > 0 &&
                    e.forEach((t) => {
                      t.setConfig({ componentAuction: c }),
                        (0, g.logInfo)(
                          s,
                          `register component auction configs for: ${n}: ${t.getAdUnitPath()}`,
                          o,
                        );
                    });
                } else
                  o.length > 0 &&
                    (0, g.logWarn)(
                      s,
                      `unable to register component auction config for ${n}`,
                      o,
                    );
              };
            })(),
            p = (() => {
              const t = [
                [728, 90],
                [336, 280],
                [300, 250],
                [300, 50],
                [160, 600],
                [1024, 768],
                [970, 250],
                [970, 90],
                [768, 1024],
                [480, 320],
                [468, 60],
                [320, 480],
                [320, 100],
                [320, 50],
                [300, 600],
                [300, 100],
                [250, 250],
                [234, 60],
                [200, 200],
                [180, 150],
                [125, 125],
                [120, 600],
                [120, 240],
                [120, 60],
                [88, 31],
                [980, 120],
                [980, 90],
                [950, 90],
                [930, 180],
                [750, 300],
                [750, 200],
                [750, 100],
                [580, 400],
                [250, 360],
                [240, 400],
              ]
                .sort(
                  (0, a.NV)((t) => {
                    let [n, e] = t;
                    return -n * e;
                  }),
                )
                .map((t) => [t, (0, g.sizeTupleToSizeString)(t)]);
              return function (n, e) {
                if (e?.length) {
                  const o = new Set(e.map(g.sizeTupleToSizeString)),
                    i = t.find((t) => {
                      let [n, e] = t;
                      return o.has(e);
                    });
                  if (i) return void n.bail(i[0]);
                }
                n(e);
              };
            })();
          (0, o.m)().setPAAPIConfigForGPT = (function () {
            let t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : (t) => f(t, !0),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : u,
              e =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : c.m2;
            return function () {
              let o = arguments.length > 1 ? arguments[1] : void 0,
                i = !1;
              const r =
                  t(
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : {},
                  ) || {},
                l = e(Object.keys(r), o);
              Object.entries(r).forEach((t) => {
                let [e, o] = t;
                null != o && (i = !0),
                  n(e, l[e], o?.componentAuctions || [], !0);
              }),
                i ||
                  (0, g.logInfo)(
                    `${s}: No component auctions available to set`,
                  );
            };
          })();
          const h = (function () {
            let t =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : (0, o.m)().setPAAPIConfigForGPT;
            return function (n, e, o) {
              (Array.isArray(e) ? e : [e])
                .map((t) => (null == t ? void 0 : { adUnitCode: t }))
                .forEach((n) => t(n, o)),
                n(e, o);
            };
          })();
          (0, i.bz)('paapi', {
            name: 'gpt',
            init(t) {
              (f = t.getPAAPIConfig), (0, i.Yn)('getPAAPISize').before(p);
            },
          }),
            (0, o.E)('paapiForGpt');
        },
      },
      (t) => {
        t.O(0, [60802, 51085], () => {
          return (n = 36178), t((t.s = n));
          var n;
        });
        t.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [22129],
      {
        39329: (e, t, r) => {
          var n = r(7873),
            o = r(16833),
            s = r(12938),
            i = r(91069),
            a = r(70433),
            c = r(63172),
            u = r(15901),
            d = r(45569);
          const p = 'permutive',
            m = (0, i.prefixLog)('[PermutiveRTD]'),
            f = 'permutive-prebid-rtd',
            g = 'p_standard',
            l = 'permutive',
            b = 'p_standard_aud',
            h = (0, s.vM)({ moduleType: d.zu, moduleName: p });
          function x(e) {
            return (0, i.isPlainObject)(e) ? { params: e } : {};
          }
          let w = {};
          function v(e) {
            const t =
              (function () {
                try {
                  return x(
                    window.permutive.addons.prebid.getPermutiveRtdConfig(),
                  );
                } catch (e) {
                  return null;
                }
              })() || w;
            return (0, i.mergeDeep)(
              {
                waitForIt: !1,
                params: { maxSegs: 500, acBidders: [], overwrites: {} },
              },
              t,
              e,
            );
          }
          function S(e, t, r) {
            const n = (0, a.A)(t, 'params.acBidders'),
              o = (0, a.A)(t, 'params.maxSegs'),
              s = (0, a.A)(t, 'params.transformations') || [],
              u = r?.ssp?.ssps ?? [],
              d = r?.ssp?.cohorts ?? [],
              p = r?.topics ?? {};
            new Set([...n, ...u]).forEach(function (t) {
              const f = { ortb2: e[t] || {} };
              let h = [];
              n.indexOf(t) > -1 && (h = r.ac);
              u.indexOf(t) > -1 && (h = [...new Set([...h, ...d])].slice(0, o));
              const x = (function (e, t, r, n, o, s, u) {
                m.logInfo('Current ortb2 config', { bidder: e, config: t });
                const d = (0, a.A)(u, e) || [],
                  p = 'permutive.com',
                  f = { name: p, segment: r.map((e) => ({ id: e })) },
                  h = s
                    .filter((e) => {
                      let { id: t } = e;
                      return D.hasOwnProperty(t);
                    })
                    .map((e) => {
                      let { id: t, config: r } = e;
                      return D[t](f, r);
                    }),
                  x = { name: l, segment: d.map((e) => ({ id: e })) },
                  w = (0, i.mergeDeep)({}, t),
                  v = (0, a.A)(w, 'ortb2.user.data') || [];
                let S = [];
                for (const [e, t] of Object.entries(o))
                  S.push({
                    name: p,
                    ext: { segtax: Number(e) },
                    segment: t.map((e) => ({ id: e.toString() })),
                  });
                const _ = v
                  .filter((e) => e.name !== f.name && e.name !== x.name)
                  .concat(f, h, x)
                  .concat(S);
                m.logInfo('Updating ortb2.user.data', {
                  bidder: e,
                  user_data: _,
                }),
                  (0, c.J)(w, 'ortb2.user.data', _);
                const y = (0, a.A)(w, 'ortb2.user.keywords'),
                  A = { [g]: r, [b]: n, [l]: d },
                  I = Object.entries(A).flatMap((e) => {
                    let [t, r] = e;
                    return r.map((e) => `${t}=${e}`);
                  }),
                  O = [y, ...I].filter(Boolean).join(',');
                m.logInfo('Updating ortb2.user.keywords', {
                  bidder: e,
                  keywords: O,
                }),
                  (0, c.J)(w, 'ortb2.user.keywords', O),
                  r.length > 0 &&
                    ((0, c.J)(w, `ortb2.user.ext.data.${g}`, r),
                    m.logInfo(`Extending ortb2.user.ext.data with "${g}"`, r));
                d.length > 0 &&
                  ((0, c.J)(w, `ortb2.user.ext.data.${l}`, d.map(String)),
                  m.logInfo(`Extending ortb2.user.ext.data with "${l}"`, d));
                r.length > 0 &&
                  ((0, c.J)(w, `ortb2.site.ext.permutive.${g}`, r),
                  m.logInfo(
                    `Extending ortb2.site.ext.permutive with "${g}"`,
                    r,
                  ));
                return (
                  m.logInfo('Updated ortb2 config', { bidder: e, config: w }), w
                );
              })(t, f, h, d, p, s, r);
              e[t] = x.ortb2;
            });
          }
          function _(e, t, r) {
            const o = (e && e.adUnits) || (0, n.m)().adUnits,
              s = {
                deepSetValue: c.J,
                deepAccess: a.A,
                isFn: i.isFn,
                mergeDeep: i.mergeDeep,
              },
              d = { appnexusAst: 'appnexus' };
            o &&
              o.forEach((e) => {
                e.bids.forEach((e) => {
                  let { bidder: n } = e;
                  void 0 !== d[n] && (n = d[n]);
                  const o = (function (e, t) {
                      const r = (0, a.A)(e, 'params.acBidders') || [];
                      return (0, u.mK)(r, t);
                    })(t, n),
                    c = (function (e, t) {
                      const r = (0, a.A)(e, `params.overwrites.${t}`);
                      return r && (0, i.isFn)(r) ? r : null;
                    })(t, n);
                  if (c) {
                    const t = (e) => e;
                    c(e, r, o, s, t);
                  }
                });
              });
          }
          function y(e) {
            try {
              e();
            } catch (e) {
              (0, i.logError)(e);
            }
          }
          function A(e, t) {
            try {
              return JSON.parse(h.getDataFromLocalStorage(e)) || t;
            } catch (e) {
              return t;
            }
          }
          const I = '_unknown_',
            D = {
              iab: (e, t) => ({
                name: e.name,
                ext: { segtax: t.segtax },
                segment: (e.segment || [])
                  .map((e) => {
                    return { id: ((r = e.id), (n = t.iabIds), n[r] || I) };
                    var r, n;
                  })
                  .filter((e) => e.id !== I),
              }),
            };
          function O(e, t) {
            const r = (function (e) {
              const t = A('_psegs', [])
                  .map(Number)
                  .filter((e) => e >= 1e6)
                  .map(String),
                r = A('_ppam', []),
                n = {
                  ac: [...A('_pcrprs', []), ...r, ...t],
                  ix: A('_pindexs', []),
                  rubicon: A('_prubicons', []),
                  appnexus: A('_papns', []),
                  gam: A('_pdfps', []),
                  ssp: A('_pssps', { cohorts: [], ssps: [] }),
                  topics: A('_ppsts', {}),
                };
              for (const t in n)
                if ('ssp' === t)
                  n[t].cohorts &&
                    Array.isArray(n[t].cohorts) &&
                    (n[t].cohorts = n[t].cohorts.slice(0, e));
                else if ('topics' === t)
                  for (const r in n[t]) n[t][r] = n[t][r].slice(0, e);
                else n[t] = n[t].slice(0, e);
              return n;
            })((0, a.A)(t, 'params.maxSegs'));
            y(function () {
              _(e, t, r);
            }),
              y(function () {
                S(e.ortb2Fragments?.bidder, t, r);
              });
          }
          let $ = !1;
          const E = {
            name: p,
            getBidRequestData: function (e, t, r) {
              const n = () => {
                  m.logInfo('Request data updated'), t();
                },
                o = v(r);
              O(e, o),
                y(function () {
                  if (
                    $ ||
                    !o.waitForIt ||
                    void 0 === window.permutive ||
                    'function' != typeof window.permutive.ready
                  )
                    return n();
                  window.permutive.ready(function () {
                    m.logInfo('SDK is realtime, updating cohorts'),
                      ($ = !0),
                      O(e, v(r)),
                      n();
                  }, 'realtime'),
                    m.logInfo('Registered cohort update when SDK is realtime');
                });
            },
            init: function (e, t) {
              return (
                (function () {
                  const e = (0, i.safeJSONParse)(h.getDataFromLocalStorage(f));
                  w = x(e);
                })(),
                !0
              );
            },
          };
          (0, o.bz)('realTimeData', E), (0, n.E)('permutiveRtdProvider');
        },
      },
      (e) => {
        e.O(0, [60802, 51085], () => {
          return (t = 39329), e((e.s = t));
          var t;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [13775],
      {
        29433: (e, o, t) => {
          t.d(o, { ql: () => q });
          var r = t(7873),
            n = t(91069),
            i = t(70433),
            a = t(63172),
            l = t(43272),
            s = t(68044),
            d = t(75023),
            c = t(78969),
            u = t(16833),
            f = t(15901),
            m = t(27934),
            p = t(12693),
            h = t(67314),
            g = t(1e3),
            y = t(16894),
            b = t(57176),
            v = t(51252),
            F = t(76743);
          const A = { NOT_FOUND: 'not_found', RANDOM: 'random' },
            k = 'Price Floors',
            S = (0, s.g4)(1e4),
            C = Symbol();
          let T = [C, 'gptSlot', 'adUnitCode', 'size', 'domain', 'mediaType'],
            O = !1,
            R = !1,
            j = {},
            M = [],
            U = {};
          const $ = (() => {
            let e;
            return function () {
              return (
                null == e &&
                  (e = (0, n.parseUrl)((0, m.EN)().topmostLocation, {
                    noDecodeWholeURL: !0,
                  }).hostname),
                e
              );
            };
          })();
          function x(e, o) {
            let { index: t = h.n.index } =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : {};
            return e?.adUnitCode || t.getAdUnit(o).code;
          }
          let D = {
            [C]: () => '*',
            size: (e, o) => (0, n.parseGPTSingleSizeArray)(o.size) || '*',
            mediaType: (e, o) => o.mediaType || 'banner',
            gptSlot: (e, o) =>
              (function (e) {
                let { index: o = h.n.index } =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : {};
                const t = o.getAdUnit({ adUnitId: e });
                return (
                  'gam' === (0, i.A)(t, 'ortb2Imp.ext.data.adserver.name') &&
                  t.ortb2Imp.ext.data.adserver.adslot
                );
              })((e || o).adUnitId) || (0, v.p)(x(e, o)).gptSlot,
            domain: $,
            adUnitCode: (e, o) => x(e, o),
          };
          function E(e, o) {
            let t =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : {},
              r = (function (e, o, t) {
                return e.length
                  ? e.reduce((e, r) => {
                      let n = D[r](o, t) || '*';
                      return (
                        e.push('*' === n ? ['*'] : [n.toLowerCase(), '*']), e
                      );
                    }, [])
                  : [];
              })((0, i.A)(e, 'schema.fields') || [], o, t);
            if (!r.length) return { matchingFloor: void 0 };
            let n = r.map((e) => e[0]).join('-'),
              l = (0, i.A)(e, `matchingInputs.${n}`);
            if (l) return { ...l };
            let s =
              ((d = r),
              (c = (0, i.A)(e, 'schema.delimiter') || '|'),
              d
                .reduce((e, o) => {
                  let t = [];
                  return (
                    e.map((e) => {
                      o.map((o) => {
                        t.push(e + c + o);
                      });
                    }),
                    t
                  );
                })
                .sort((e, o) => e.split('*').length - o.split('*').length));
            var d, c;
            let u = (0, f.I6)(s, (o) => e.values.hasOwnProperty(o)),
              m = {
                floorMin: e.floorMin || 0,
                floorRuleValue: e.values[u],
                matchingData: s[0],
                matchingRule: u === e.meta?.defaultRule ? void 0 : u,
              };
            const p = (0, i.A)(o, 'ortb2Imp.ext.prebid.floors.floorMin');
            return (
              'number' == typeof p && (m.floorMin = p),
              (m.matchingFloor = Math.max(m.floorMin, m.floorRuleValue)),
              (0, a.J)(e, `matchingInputs.${n}`, { ...m }),
              m
            );
          }
          function I(e, o, t) {
            return parseFloat((0, b.y)(e, { ...o, cpm: e }, t));
          }
          const B = {
            banner: (e) => (0, i.A)(e, 'mediaTypes.banner.sizes') || [],
            video: (e) => (0, i.A)(e, 'mediaTypes.video.playerSize') || [],
            native: (e) =>
              (0, i.A)(e, 'mediaTypes.native.image.sizes')
                ? [(0, i.A)(e, 'mediaTypes.native.image.sizes')]
                : [],
          };
          function N() {
            let e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : { currency: 'USD', mediaType: '*', size: '*' },
              o = this,
              t = U[o.auctionId];
            if (!t || t.skipped) return {};
            e = (function (e, o) {
              let t = Object.keys(e.mediaTypes || {});
              return (
                '*' === o.mediaType && 1 === t.length && (o.mediaType = t[0]),
                '*' === o.size &&
                  -1 !== t.indexOf(o.mediaType) &&
                  B[o.mediaType] &&
                  1 === B[o.mediaType](e).length &&
                  (o.size = B[o.mediaType](e)[0]),
                o
              );
            })(o, e);
            let i = E(
                t.data,
                { ...o },
                { mediaType: e.mediaType, size: e.size },
              ),
              a = e.currency || t.data.currency;
            if (i.matchingFloor && a !== t.data.currency)
              try {
                i.matchingFloor = (0, r.m)().convertCurrency(
                  i.matchingFloor,
                  t.data.currency,
                  a,
                );
              } catch (e) {
                (0, n.logWarn)(
                  `${k}: Unable to get currency conversion for getFloor for bidder ${o.bidder}. You must have currency module enabled with defaultRates in your currency config`,
                ),
                  (a = t.data.currency);
              }
            if (t.enforcement.bidAdjustment && i.matchingFloor) {
              const e = p.u.get(o.bidder, 'inverseBidAdjustment');
              if (e) i.matchingFloor = e(i.matchingFloor, o);
              else {
                let e = I(i.matchingFloor, null, o);
                i.matchingFloor = e
                  ? (function (e, o) {
                      const t = Math.pow(10, 10);
                      return (((e * t) / (o * t)) * (e * t)) / t;
                    })(i.matchingFloor, e)
                  : i.matchingFloor;
              }
            }
            return i.matchingFloor
              ? {
                  floor:
                    ((l = i.matchingFloor),
                    (s = 4),
                    Math.ceil((parseFloat(l) * Math.pow(10, s)).toFixed(1)) /
                      Math.pow(10, s)),
                  currency: a,
                }
              : {};
            var l, s;
          }
          function W(e, o) {
            let t = (0, n.deepClone)(e);
            return (
              (t.schema.delimiter = e.schema.delimiter || '|'),
              (t.values = (function (e, o) {
                let t = e.schema.fields,
                  r = e.schema.delimiter,
                  n =
                    o &&
                    -1 === t.indexOf('adUnitCode') &&
                    t.unshift('adUnitCode');
                return Object.keys(e.values).reduce(
                  (t, i) => (
                    (t[(n ? `${o}${r}${i}` : i).toLowerCase()] = e.values[i]), t
                  ),
                  {},
                );
              })(t, o)),
              (t.currency = t.currency || 'USD'),
              t
            );
          }
          function q(e, o) {
            let t = (0, n.deepClone)(j);
            if (2 === (0, i.A)(t, 'data.floorsSchemaVersion')) {
              let { modelGroups: e, ...o } = t.data;
              t.data = Object.assign(
                o,
                (function (e, o) {
                  let t = Math.floor(Math.random() * o + 1);
                  for (let o = 0; o < e.length; o++)
                    if (((t -= e[o].modelWeight), t <= 0)) return e[o];
                })(e, o.modelWeightSum),
              );
            }
            let r = 0 === Object.keys((0, i.A)(t, 'data.values') || {}).length;
            if (
              ((t.data = r
                ? (function (e) {
                    const o = e.find((e) => null != e.floors?.schema);
                    return e.reduce((e, t) => {
                      if (
                        null != t.floors?.schema &&
                        !(0, n.deepEqual)(t.floors.schema, o?.floors?.schema)
                      )
                        return (
                          (0, n.logError)(
                            `${k}: adUnit '${t.code}' declares a different schema from one previously declared by adUnit '${o.code}'. Floor config for '${t.code}' will be ignored.`,
                          ),
                          e
                        );
                      const r = Object.assign(
                        {},
                        o?.floors,
                        { values: void 0 },
                        t.floors,
                      );
                      if (V(r))
                        if (e.values) {
                          let o = W(r, t.code).values;
                          Object.assign(e.values, o);
                        } else (e = W(r, t.code)).location = 'adUnit';
                      else
                        null != t.floors &&
                          (0, n.logWarn)(
                            `adUnit '${t.code}' provides an invalid \`floor\` definition, it will be ignored for floor calculations`,
                            t,
                          );
                      return e;
                    }, {});
                  })(e)
                : W(t.data)),
              0 === Object.keys((0, i.A)(t, 'data.values') || {}).length)
            )
              (t.skipped = !0), (t.skippedReason = A.NOT_FOUND);
            else {
              const e =
                  (0, n.getParameterByName)('pbjs_skipRate') ||
                  ((0, i.A)(t, 'data.skipRate') ?? t.skipRate),
                o = 100 * Math.random() < parseFloat(e);
              (t.skipped = o), o && (t.skippedReason = A.RANDOM);
            }
            return (
              t.hasOwnProperty('floorMin') && (t.data.floorMin = t.floorMin),
              (function (e, o, t) {
                const r = (function (e) {
                  const { data: o, enforcement: t } = e;
                  return o?.noFloorSignalBidders?.length > 0
                    ? o.noFloorSignalBidders
                    : t?.noFloorSignalBidders?.length > 0
                      ? t.noFloorSignalBidders
                      : [];
                })(o);
                e.forEach((e) => {
                  e.bids.forEach((e) => {
                    const a = r.some((o) => o === e.bidder);
                    o.skipped || a
                      ? (a && (0, n.logInfo)(`noFloorSignal to ${e.bidder}`),
                        delete e.getFloor)
                      : (e.getFloor = N),
                      (e.auctionId = t),
                      (e.floorData = {
                        noFloorSignaled: a,
                        skipped: o.skipped,
                        skipRate: (0, i.A)(o, 'data.skipRate') ?? o.skipRate,
                        skippedReason: o.skippedReason,
                        floorMin: o.floorMin,
                        modelVersion: (0, i.A)(o, 'data.modelVersion'),
                        modelWeight: (0, i.A)(o, 'data.modelWeight'),
                        modelTimestamp: (0, i.A)(o, 'data.modelTimestamp'),
                        location: (0, i.A)(o, 'data.location', 'noData'),
                        floorProvider: o.floorProvider,
                        fetchStatus: j.fetchStatus,
                      });
                  });
                });
              })(e, t, o),
              t
            );
          }
          function w(e) {
            e.hasExited ||
              ((M = M.filter((o) => o.timer !== e.timer)),
              (e.reqBidsConfigObj.auctionId =
                e.reqBidsConfigObj.auctionId || (0, n.generateUUID)()),
              (U[e.reqBidsConfigObj.auctionId] = q(
                e.reqBidsConfigObj.adUnits || (0, r.m)().adUnits,
                e.reqBidsConfigObj.auctionId,
              )),
              e.nextFn.apply(e.context, [e.reqBidsConfigObj]),
              (e.hasExited = !0));
          }
          function z(e) {
            return (
              (e = (function (e) {
                if ((0, n.isNumber)(e.default)) {
                  let o = '*';
                  const t = (e.schema?.fields || []).length;
                  t
                    ? (o = Array(t)
                        .fill('*')
                        .join(e.schema?.delimiter || '|'))
                    : (0, a.J)(e, 'schema.fields', [C]),
                    (e.values = e.values || {}),
                    null == e.values[o] &&
                      ((e.values[o] = e.default),
                      (e.meta = { defaultRule: o }));
                }
                return e;
              })(e)),
              !!(function (e) {
                if (Array.isArray(e) && e.length > 0) {
                  if (e.every((e) => T.includes(e))) return !0;
                  (0, n.logError)(
                    `${k}: Fields received do not match allowed fields`,
                  );
                }
                return !1;
              })((0, i.A)(e, 'schema.fields')) &&
                ((o = e),
                (t = e.schema.fields.length),
                (r = e.schema.delimiter || '|'),
                'object' == typeof o.values &&
                  ((o.values = Object.keys(o.values).reduce(
                    (e, n) => (
                      (function (e, o, t, r) {
                        return (
                          'string' == typeof e &&
                          e.split(r).length === t &&
                          'number' == typeof o
                        );
                      })(n, o.values[n], t, r) && (e[n] = o.values[n]),
                      e
                    ),
                    {},
                  )),
                  Object.keys(o.values).length > 0))
            );
            var o, t, r;
          }
          const P = {
            1: (e) => z(e),
            2: (e) =>
              !(!Array.isArray(e.modelGroups) || 0 === e.modelGroups.length) &&
              ((e.modelWeightSum = 0),
              e.modelGroups.every(
                (o) =>
                  !('number' != typeof o.modelWeight || !z(o)) &&
                  ((e.modelWeightSum += o.modelWeight), !0),
              )),
          };
          function V(e) {
            return (
              'object' == typeof e &&
              ((e.floorsSchemaVersion = e.floorsSchemaVersion || 1),
              'function' != typeof P[e.floorsSchemaVersion]
                ? ((0, n.logError)(
                    `${k}: Unknown floorsSchemaVersion: `,
                    e.floorsSchemaVersion,
                  ),
                  !1)
                : P[e.floorsSchemaVersion](e))
            );
          }
          function G(e, o) {
            if (e && 'object' == typeof e && V(e))
              return (
                (0, n.logInfo)(
                  `${k}: A ${o} set the auction floor data set to `,
                  e,
                ),
                { ...e, location: o }
              );
            (0, n.logError)(
              `${k}: The floors data did not contain correct values`,
              e,
            );
          }
          const J = (0, y.Ak)('priceFloors', function (e, o) {
            const t = {
              reqBidsConfigObj: o,
              context: this,
              nextFn: e,
              haveExited: !1,
              timer: null,
            };
            j.auctionDelay > 0 && O
              ? ((t.timer = setTimeout(() => {
                  (0, n.logWarn)(
                    `${k}: Fetch attempt did not return in time for auction`,
                  ),
                    (j.fetchStatus = 'timeout'),
                    w(t);
                }, j.auctionDelay)),
                M.push(t))
              : w(t);
          });
          function _() {
            M.forEach((e) => {
              clearTimeout(e.timer), w(e);
            }),
              (M = []);
          }
          function L(e) {
            let o;
            (O = !1), (j.fetchStatus = 'success');
            try {
              o = JSON.parse(e);
            } catch (t) {
              o = e;
            }
            const t = G(o, 'fetch');
            t &&
              ((j.data = t),
              (j.skipRate = (0, n.isNumber)(t.skipRate)
                ? t.skipRate
                : j.skipRate),
              (j.floorProvider = t.floorProvider || j.floorProvider)),
              _();
          }
          function Y(e) {
            (O = !1),
              (j.fetchStatus = 'error'),
              (0, n.logError)(`${k}: Fetch errored with: `, e),
              _();
          }
          function H(e) {
            var o;
            (j = (0, n.pick)(e, [
              'floorMin',
              'enabled',
              (e) => !1 !== e,
              'auctionDelay',
              (e) => e || 0,
              'floorProvider',
              (o) => (0, i.A)(e, 'data.floorProvider', o),
              'endpoint',
              (e) => e || {},
              'skipRate',
              () =>
                isNaN((0, i.A)(e, 'data.skipRate'))
                  ? e.skipRate || 0
                  : e.data.skipRate,
              'enforcement',
              (e) =>
                (0, n.pick)(e || {}, [
                  'enforceJS',
                  (e) => !1 !== e,
                  'enforcePBS',
                  (e) => !0 === e,
                  'floorDeals',
                  (e) => !0 === e,
                  'bidAdjustment',
                  (e) => !1 !== e,
                  'noFloorSignalBidders',
                  (e) => e || [],
                ]),
              'additionalSchemaFields',
              (e) => {
                return 'object' == typeof e && Object.keys(e).length > 0
                  ? ((o = e),
                    void Object.keys(o).forEach((e) => {
                      -1 === T.indexOf(e) &&
                        'function' == typeof o[e] &&
                        (T.push(e), (D[e] = o[e]));
                    }))
                  : void 0;
                var o;
              },
              'data',
              (e) => (e && G(e, 'setConfig')) || void 0,
            ])),
              j.enabled
                ? ((o = j.endpoint).url && !O
                    ? 'GET' !== (o.method || 'GET')
                      ? (0, n.logError)(
                          `${k}: 'GET' is the only request method supported at this time!`,
                        )
                      : (S(o.url, { success: L, error: Y }, null, {
                          method: 'GET',
                        }),
                        (O = !0))
                    : O &&
                      (0, n.logWarn)(
                        `${k}: A fetch is already occuring. Skipping.`,
                      ),
                  R ||
                    (d.on(c.qY.AUCTION_END, (e) => {
                      setTimeout(() => delete U[e.auctionId], 3e3);
                    }),
                    (0, r.m)().requestBids.before(J, 50),
                    (0, u.Yn)('addBidResponse').before(
                      Z,
                      (0, n.debugTurnedOn)() ? 4 : 50,
                    ),
                    (R = !0)))
                : ((0, n.logInfo)(`${k}: Turning off module`),
                  (j = {}),
                  (U = {}),
                  (0, u.Yn)('addBidResponse').getHooks({ hook: Z }).remove(),
                  (0, r.m)().requestBids.getHooks({ hook: J }).remove(),
                  (R = !1));
          }
          const Z = (0, y.NL)('priceFloors', function (e, o, t, a) {
            let l = U[t.auctionId];
            if (!l || !t || l.skipped) return e.call(this, o, t, a);
            const s = h.n.index.getBidRequest(t);
            let d,
              u = E(l.data, s, { ...t, size: [t.width, t.height] });
            if (!u.matchingFloor)
              return (
                0 !== u.matchingFloor &&
                  (0, n.logWarn)(
                    `${k}: unable to determine a matching price floor for bidResponse`,
                    t,
                  ),
                e.call(this, o, t, a)
              );
            let f = l.data.currency.toUpperCase(),
              m = t.currency || 'USD';
            if (f === m.toUpperCase()) d = t.cpm;
            else if (
              t.originalCurrency &&
              f === t.originalCurrency.toUpperCase()
            )
              d = t.originalCpm;
            else
              try {
                d = (0, r.m)().convertCurrency(t.cpm, m.toUpperCase(), f);
              } catch (r) {
                return (
                  (0, n.logError)(
                    `${k}: Unable do get currency conversion for bidResponse to Floor Currency. Do you have Currency module enabled? ${t}`,
                  ),
                  e.call(this, o, t, a)
                );
              }
            return (
              (d = I(d, t, s)),
              (function (e, o, t, r) {
                (t.floorData = {
                  floorValue: o.matchingFloor,
                  floorRule: o.matchingRule,
                  floorRuleValue: o.floorRuleValue,
                  floorCurrency: e.data.currency,
                  cpmAfterAdjustments: r,
                  enforcements: { ...e.enforcement },
                  matchedFields: {},
                }),
                  e.data.schema.fields.forEach((r, n) => {
                    let i = o.matchingData.split(e.data.schema.delimiter)[n];
                    t.floorData.matchedFields[r] = i;
                  });
              })(l, u, t, d),
              (function (e, o, t) {
                let r = !1 !== (0, i.A)(e, 'enforcement.enforceJS'),
                  n = !0 === (0, i.A)(e, 'enforcement.floorDeals') || !t.dealId,
                  a = t.floorData.cpmAfterAdjustments < o.matchingFloor;
                return r && a && n;
              })(l, u, t)
                ? (a(c.Tf.FLOOR_NOT_MET),
                  void (0, n.logWarn)(
                    `${k}: ${t.bidderCode}'s Bid Response for ${o} was rejected due to floor not met (adjusted cpm: ${t?.floorData?.cpmAfterAdjustments}, floor: ${u?.matchingFloor})`,
                    t,
                  ))
                : e.call(this, o, t, a)
            );
          });
          l.$W.getConfig('floors', (e) => H(e.floors)),
            (0, g.pS)({
              type: g.Tb,
              name: 'bidfloor',
              fn: function (e, o, t) {
                if ('function' == typeof o.getFloor) {
                  let r, i;
                  try {
                    ({ currency: r, floor: i } = o.getFloor({
                      currency:
                        t.currency ||
                        l.$W.getConfig('currency.adServerCurrency') ||
                        'USD',
                      mediaType: t.mediaType || '*',
                      size: '*',
                    }));
                  } catch (e) {
                    return void (0, n.logWarn)(
                      'Cannot compute floor for bid',
                      o,
                    );
                  }
                  (i = parseFloat(i)),
                    null == r ||
                      null == i ||
                      isNaN(i) ||
                      Object.assign(e, { bidfloor: i, bidfloorcur: r });
                }
              },
            }),
            (0, g.pS)({
              type: g.Tb,
              name: 'extPrebidFloors',
              fn: function (e, o, t) {
                if (null != e.bidfloor) {
                  let { floorMinCur: o, floorMin: r } =
                    t.reqContext.floorMin || {};
                  null == o && (o = e.bidfloorcur);
                  const n =
                      e.ext?.prebid?.floors?.floorMinCur ||
                      e.ext?.prebid?.floorMinCur ||
                      o,
                    i =
                      e.ext?.prebid?.floors?.floorMin ||
                      e.ext?.prebid?.floorMin,
                    l = (0, F.hZ)(e.bidfloor, e.bidfloorcur, o),
                    s = !(!i || !n) && (0, F.hZ)(i, n, o),
                    d = s && s < l ? s : l;
                  (0, a.J)(e, 'ext.prebid.floors.floorMin', d),
                    (null == r || r > d) && (r = d),
                    (t.reqContext.floorMin = { floorMin: r, floorMinCur: o });
                }
              },
              dialects: [g.e4],
              priority: -1,
            }),
            (0, g.pS)({
              type: g.S3,
              name: 'extPrebidFloors',
              fn: function (e, o, t) {
                R &&
                  (0, a.J)(
                    e,
                    'ext.prebid.floors.enabled',
                    e.ext?.prebid?.floors?.enabled || !1,
                  ),
                  t?.floorMin &&
                    (0, n.mergeDeep)(e, {
                      ext: { prebid: { floors: t.floorMin } },
                    });
              },
              dialects: [g.e4],
            }),
            (0, r.E)('priceFloors');
        },
      },
      (e) => {
        e.O(0, [60802, 33005, 41225, 51085], () => {
          return (o = 29433), e((e.s = o));
          var o;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [41252],
      {
        63990: (e, r, t) => {
          var a = t(7873),
            i = t(91069),
            s = t(70433),
            n = t(63172),
            o = t(57377),
            d = t(71371),
            p = t(43272),
            l = t(95789),
            m = t(12693),
            c = t(78969);
          const g = 'pubmatic',
            u = 'PubMatic: ',
            h = 'USD',
            f = void 0,
            b = 'https://pubmatic.bbvms.com/r/'.concat('$RENDERER', '.js'),
            y = 'Video.plcmt param missing',
            v = {
              kadpageurl: '',
              gender: '',
              yob: '',
              lat: '',
              lon: '',
              wiid: '',
              profId: '',
              verId: '',
            },
            w = {
              NUMBER: 'number',
              STRING: 'string',
              BOOLEAN: 'boolean',
              ARRAY: 'array',
              OBJECT: 'object',
            },
            x = {
              mimes: w.ARRAY,
              minduration: w.NUMBER,
              maxduration: w.NUMBER,
              startdelay: w.NUMBER,
              playbackmethod: w.ARRAY,
              api: w.ARRAY,
              protocols: w.ARRAY,
              w: w.NUMBER,
              h: w.NUMBER,
              battr: w.ARRAY,
              linearity: w.NUMBER,
              placement: w.NUMBER,
              plcmt: w.NUMBER,
              minbitrate: w.NUMBER,
              maxbitrate: w.NUMBER,
              skip: w.NUMBER,
            },
            I = { ICON: 1, IMAGE: 3 },
            R = { 1: 'PMP', 5: 'PREF', 6: 'PMPG' },
            O = {
              bootstrapPlayer: function (e) {
                const r = { code: e.adUnitCode };
                if (
                  (e.vastXml
                    ? (r.vastXml = e.vastXml)
                    : e.vastUrl && (r.vastUrl = e.vastUrl),
                  !e.vastXml && !e.vastUrl)
                )
                  return void (0, i.logWarn)(
                    `${u}: No vastXml or vastUrl on bid, bailing...`,
                  );
                const t = O.getRendererId('pubmatic', e.rendererCode),
                  a = document.getElementById(e.adUnitCode);
                let s;
                for (let e = 0; e < window.bluebillywig.renderers.length; e++)
                  if (window.bluebillywig.renderers[e]._id === t) {
                    s = window.bluebillywig.renderers[e];
                    break;
                  }
                s
                  ? s.bootstrap(r, a)
                  : (0, i.logWarn)(`${u}: Couldn't find a renderer with ${t}`);
              },
              newRenderer: function (e, r) {
                var t = b.replace('$RENDERER', e);
                const a = l.A4.install({ url: t, loaded: !1, adUnitCode: r });
                try {
                  a.setRender(O.outstreamRender);
                } catch (e) {
                  (0, i.logWarn)(
                    `${u}: Error tying to setRender on renderer`,
                    e,
                  );
                }
                return a;
              },
              outstreamRender: function (e) {
                e.renderer.push(function () {
                  O.bootstrapPlayer(e);
                });
              },
              getRendererId: function (e, r) {
                return `${e}-${r}`;
              },
            },
            T = [d.D4, d.G_, d.s6];
          let A = 0,
            E = !1,
            _ = ['pubmatic'];
          const C = ['all'];
          function S(e, r) {
            if (!(0, i.isStr)(r))
              return (
                r &&
                  (0, i.logWarn)(
                    u +
                      'Ignoring param key: ' +
                      e +
                      ', expects string-value, found ' +
                      typeof r,
                  ),
                f
              );
            switch (e) {
              case 'pmzoneid':
                return r
                  .split(',')
                  .slice(0, 50)
                  .map((e) => e.trim())
                  .join();
              case 'kadfloor':
              case 'lat':
              case 'lon':
                return parseFloat(r) || f;
              case 'yob':
                return parseInt(r) || f;
              default:
                return r;
            }
          }
          function z(e) {
            var r;
            (e.params.adUnit = ''),
              (e.params.adUnitIndex = '0'),
              (e.params.width = 0),
              (e.params.height = 0),
              (e.params.adSlot =
                ((r = e.params.adSlot),
                (0, i.isStr)(r)
                  ? r.replace(/^\s+/g, '').replace(/\s+$/g, '')
                  : (r &&
                      (0, i.logWarn)(
                        g + ': adSlot must be a string. Ignoring adSlot',
                      ),
                    '')));
            var t = e.params.adSlot,
              a = t.split(':');
            if (
              ((t = a[0]),
              2 == a.length && (e.params.adUnitIndex = a[1]),
              (a = t.split('@')),
              (e.params.adUnit = a[0]),
              a.length > 1)
            ) {
              if (2 != (a = a[1].split('x')).length)
                return void (0, i.logWarn)(
                  u + 'AdSlot Error: adSlot not in required format',
                );
              (e.params.width = parseInt(a[0], 10)),
                (e.params.height = parseInt(a[1], 10));
            } else if (
              e.hasOwnProperty('mediaTypes') &&
              e.mediaTypes.hasOwnProperty(d.D4) &&
              e.mediaTypes.banner.hasOwnProperty('sizes')
            ) {
              for (var s = 0, n = []; s < e.mediaTypes.banner.sizes.length; s++)
                2 === e.mediaTypes.banner.sizes[s].length &&
                  n.push(e.mediaTypes.banner.sizes[s]);
              (e.mediaTypes.banner.sizes = n),
                e.mediaTypes.banner.sizes.length >= 1 &&
                  ((e.params.width = e.mediaTypes.banner.sizes[0][0]),
                  (e.params.height = e.mediaTypes.banner.sizes[0][1]),
                  (e.mediaTypes.banner.sizes = e.mediaTypes.banner.sizes.splice(
                    1,
                    e.mediaTypes.banner.sizes.length - 1,
                  )));
            }
          }
          function U() {
            let e =
              window.navigator &&
              (window.navigator.connection ||
                window.navigator.mozConnection ||
                window.navigator.webkitConnection);
            switch (e?.effectiveType) {
              case 'ethernet':
                return 1;
              case 'wifi':
                return 2;
              case 'slow-2g':
              case '2g':
                return 4;
              case '3g':
                return 5;
              case '4g':
                return 6;
              default:
                return 0;
            }
          }
          function W(e, r, t) {
            var a,
              s =
                'Ignoring param key: ' +
                e +
                ', expects ' +
                t +
                ', found ' +
                typeof r;
            switch (t) {
              case w.BOOLEAN:
                a = i.isBoolean;
                break;
              case w.NUMBER:
                a = i.isNumber;
                break;
              case w.STRING:
                a = i.isStr;
                break;
              case w.ARRAY:
                a = i.isArray;
            }
            return a(r) ? r : ((0, i.logWarn)(u + s), f);
          }
          const P = {
              desc: 'desc',
              desc2: 'desc2',
              body: 'desc',
              body2: 'desc2',
              sponsoredBy: 'sponsored',
              cta: 'ctatext',
              rating: 'rating',
              address: 'address',
              downloads: 'downloads',
              likes: 'likes',
              phone: 'phone',
              price: 'price',
              salePrice: 'saleprice',
              displayUrl: 'displayurl',
              saleprice: 'saleprice',
              displayurl: 'displayurl',
            },
            N = Object.values(P);
          function $(e) {
            var r;
            if (e.ortb) {
              (e = e.ortb), (r = { ver: '1.2', ...e, assets: [] });
              const { assets: t } = e,
                a = (e) => e.title || e.img || e.data || e.video;
              if (t.length < 1 || !t.some((e) => a(e)))
                return (
                  (0, i.logWarn)(
                    `${u}: Native assets object is empty or contains some invalid object`,
                  ),
                  (E = !0),
                  r
                );
              t.forEach((e) => {
                var t = e;
                t.img &&
                  (t.img.type == I.IMAGE
                    ? ((t.w = t.w || t.width || (t.sizes ? t.sizes[0] : f)),
                      (t.h = t.h || t.height || (t.sizes ? t.sizes[1] : f)),
                      (t.wmin =
                        t.wmin ||
                        t.minimumWidth ||
                        (t.minsizes ? t.minsizes[0] : f)),
                      (t.hmin =
                        t.hmin ||
                        t.minimumHeight ||
                        (t.minsizes ? t.minsizes[1] : f)))
                    : t.img.type == I.ICON &&
                      ((t.w = t.w || t.width || (t.sizes ? t.sizes[0] : f)),
                      (t.h = t.h || t.height || (t.sizes ? t.sizes[1] : f)))),
                  t && void 0 !== t.id && a(t) && r.assets.push(t);
              });
            } else
              r = (function (e) {
                if (!e && !(0, i.isPlainObject)(e))
                  return (
                    (0, i.logWarn)(
                      `${u}: Native assets object is empty or not an object: ${e}`,
                    ),
                    void (E = !0)
                  );
                const r = { ver: '1.2', assets: [] };
                for (let t in e) {
                  if (c._B.includes(t)) continue;
                  if (!c.x5.hasOwnProperty(t) && !N.includes(t)) {
                    (0, i.logWarn)(
                      `${u}: Unrecognized native asset code: ${t}. Asset will be ignored.`,
                    );
                    continue;
                  }
                  const a = e[t];
                  let s = 0;
                  a.required &&
                    (0, i.isBoolean)(a.required) &&
                    (s = Number(a.required));
                  const n = { id: r.assets.length, required: s };
                  if (t in P)
                    (n.data = { type: c.jO[P[t]] }),
                      (a.len || a.length) && (n.data.len = a.len || a.length),
                      a.ext && (n.data.ext = a.ext);
                  else if ('icon' === t || 'image' === t) {
                    if (
                      ((n.img = { type: 'icon' === t ? c.oA.ICON : c.oA.MAIN }),
                      a.aspect_ratios)
                    )
                      if ((0, i.isArray)(a.aspect_ratios))
                        if (a.aspect_ratios.length) {
                          const { min_width: e, min_height: r } =
                            a.aspect_ratios[0];
                          (0, i.isInteger)(e) && (0, i.isInteger)(r)
                            ? ((n.img.wmin = e), (n.img.hmin = r))
                            : (0, i.logWarn)(
                                `${u}: image.aspect_ratios min_width or min_height are invalid: ${e}, ${r}`,
                              );
                          const t = a.aspect_ratios
                            .filter((e) => e.ratio_width && e.ratio_height)
                            .map((e) => `${e.ratio_width}:${e.ratio_height}`);
                          t.length > 0 && (n.img.ext = { aspectratios: t });
                        } else
                          (0, i.logWarn)(
                            `${u}: image.aspect_ratios was passed, but it's empty: ${a.aspect_ratios}`,
                          );
                      else
                        (0, i.logWarn)(
                          `${u}: image.aspect_ratios was passed, but it's not a an array: ${a.aspect_ratios}`,
                        );
                    (n.img.w = a.w || a.width),
                      (n.img.h = a.h || a.height),
                      (n.img.wmin =
                        a.wmin ||
                        a.minimumWidth ||
                        (a.minsizes ? a.minsizes[0] : f)),
                      (n.img.hmin =
                        a.hmin ||
                        a.minimumHeight ||
                        (a.minsizes ? a.minsizes[1] : f)),
                      a.sizes &&
                        (2 === a.sizes.length &&
                        (0, i.isInteger)(a.sizes[0]) &&
                        (0, i.isInteger)(a.sizes[1])
                          ? ((0, i.logInfo)(
                              `${u}: if asset.sizes exist, by OpenRTB spec we should remove wmin and hmin`,
                            ),
                            (n.img.w = a.sizes[0]),
                            (n.img.h = a.sizes[1]),
                            delete n.img.hmin,
                            delete n.img.wmin)
                          : (0, i.logWarn)(
                              `${u}: image.sizes was passed, but its value is not an array of integers: ${a.sizes}`,
                            )),
                      a.ext && (n.img.ext = a.ext),
                      a.mimes && (n.img.mimes = a.mimes);
                  } else
                    'title' === t
                      ? ((n.title = { len: a.len || a.length || 140 }),
                        a.ext && (n.title.ext = a.ext))
                      : 'ext' === t && ((n.ext = a), delete n.required);
                  r.assets.push(n);
                }
                return r.assets.length < 1
                  ? ((0, i.logWarn)(`${u}: Could not find any valid asset`),
                    void (E = !0))
                  : r;
              })(e);
            return r;
          }
          function k(e) {
            var r,
              t = e.mediaTypes.banner.sizes,
              a = [];
            if (t !== f && (0, i.isArray)(t)) {
              if (((r = {}), e.params.width || e.params.height))
                (r.w = e.params.width), (r.h = e.params.height);
              else {
                if (0 === t.length)
                  return (
                    (r = f),
                    (0, i.logWarn)(
                      u +
                        'Error: mediaTypes.banner.size missing for adunit: ' +
                        e.params.adUnit +
                        '. Ignoring the banner impression in the adunit.',
                    ),
                    r
                  );
                (r.w = parseInt(t[0][0], 10)),
                  (r.h = parseInt(t[0][1], 10)),
                  (t = t.splice(1, t.length - 1));
              }
              t.length > 0 &&
                ((a = []),
                t.forEach(function (e) {
                  e.length > 1 && a.push({ w: e[0], h: e[1] });
                }),
                a.length > 0 && (r.format = a)),
                (r.pos = 0),
                (r.topframe = (0, i.inIframe)() ? 0 : 1);
            } else
              (0, i.logWarn)(
                u +
                  'Error: mediaTypes.banner.size missing for adunit: ' +
                  e.params.adUnit +
                  '. Ignoring the banner impression in the adunit.',
              ),
                (r = f);
            return r;
          }
          function j(e) {
            var r,
              t = (0, i.mergeDeep)(
                (0, s.A)(e.mediaTypes, 'video'),
                e.params.video,
              );
            if (t !== f) {
              for (var a in ((r = {}),
              (function (e, r) {
                (0, s.A)(e, 'plcmt') || (0, i.logWarn)(y + ' for ' + r);
              })(t, e.adUnitCode),
              x))
                t.hasOwnProperty(a) && (r[a] = W(a, t[a], x[a]));
              (0, i.isArray)(e.mediaTypes.video.playerSize[0])
                ? ((r.w = parseInt(e.mediaTypes.video.playerSize[0][0], 10)),
                  (r.h = parseInt(e.mediaTypes.video.playerSize[0][1], 10)))
                : (0, i.isNumber)(e.mediaTypes.video.playerSize[0]) &&
                  ((r.w = parseInt(e.mediaTypes.video.playerSize[0], 10)),
                  (r.h = parseInt(e.mediaTypes.video.playerSize[1], 10)));
            } else
              (r = f),
                (0, i.logWarn)(
                  u +
                    'Error: Video config params missing for adunit: ' +
                    e.params.adUnit +
                    ' with mediaType set as video. Ignoring video impression in the adunit.',
                );
            return r;
          }
          function B(e, r) {
            var t,
              a,
              o = {},
              l = {},
              m = e.hasOwnProperty('sizes') ? e.sizes : [],
              c = '',
              g = [],
              b = r?.paapi?.enabled;
            if (
              ((function (e, r) {
                r.params.deals &&
                  ((0, i.isArray)(r.params.deals)
                    ? r.params.deals.forEach(function (r) {
                        (0, i.isStr)(r) && r.length > 3
                          ? (e.pmp ||
                              (e.pmp = { private_auction: 0, deals: [] }),
                            e.pmp.deals.push({ id: r }))
                          : (0, i.logWarn)(
                              u +
                                'Error: deal-id present in array bid.params.deals should be a strings with more than 3 charaters length, deal-id ignored: ' +
                                r,
                            );
                      })
                    : (0, i.logWarn)(
                        u +
                          'Error: bid.params.deals should be an array of strings.',
                      ));
              })(
                (o = {
                  id: e.bidId,
                  tagid: e.params.adUnit || void 0,
                  bidfloor: S('kadfloor', e.params.kadfloor),
                  secure: 1,
                  ext: { pmZoneId: S('pmzoneid', e.params.pmzoneid) },
                  bidfloorcur: e.params.currency
                    ? S('currency', e.params.currency)
                    : h,
                  displaymanager: 'Prebid.js',
                  displaymanagerver: '9.0.0',
                }),
                e,
              ),
              (function (e, r) {
                var t,
                  a = '';
                if (r.params.dctr)
                  if (((a = r.params.dctr), (0, i.isStr)(a) && a.length > 0)) {
                    var s = a.split('|');
                    (a = ''),
                      s.forEach((e) => {
                        a += e.length > 0 ? e.trim() + '|' : '';
                      }),
                      (t = a.length),
                      '|' === a.substring(t, t - 1) &&
                        (a = a.substring(0, t - 1)),
                      (e.ext.key_val = a.trim());
                  } else
                    (0, i.logWarn)(
                      u +
                        'Ignoring param : dctr with value : ' +
                        a +
                        ', expects string-value, found empty or non-string value',
                    );
              })(o, e),
              (function (e, r) {
                var t =
                    (r.rtd && r.rtd.jwplayer && r.rtd.jwplayer.targeting) ||
                    void 0,
                  a = '';
                if (void 0 !== t && '' !== t && t.hasOwnProperty('segments')) {
                  var i,
                    s = t.segments.length;
                  a += 'jw-id=' + t.content.id;
                  for (var n = 0; n < s; n++)
                    a += '|jw-' + t.segments[n] + '=1';
                  (i = e.ext) && void 0 === i.key_val
                    ? (i.key_val = a)
                    : (i.key_val += '|' + a);
                }
              })(o, e),
              e.hasOwnProperty('mediaTypes'))
            )
              for (c in e.mediaTypes)
                switch (c) {
                  case d.D4:
                    (t = k(e)) !== f && (o.banner = t);
                    break;
                  case d.s6:
                    (l.request = JSON.stringify($(e.nativeParams))),
                      E
                        ? ((0, i.logWarn)(
                            u +
                              'Error: Error in Native adunit ' +
                              e.params.adUnit +
                              '. Ignoring the adunit. Refer to http://prebid.org/dev-docs/show-native-ads.html for more details.',
                          ),
                          (E = !1))
                        : (o.native = l);
                    break;
                  case d.G_:
                    (a = j(e)) !== f && (o.video = a);
                }
            else
              (t = {
                pos: 0,
                w: e.params.width,
                h: e.params.height,
                topframe: (0, i.inIframe)() ? 0 : 1,
              }),
                (0, i.isArray)(m) &&
                  m.length > 1 &&
                  ((m = m.splice(1, m.length - 1)).forEach((e) => {
                    g.push({ w: e[0], h: e[1] });
                  }),
                  (t.format = g)),
                (o.banner = t);
            return (
              (function (e, r) {
                const t = { ...(0, s.A)(r, 'ortb2Imp.ext.data') };
                Object.keys(t).forEach((r) => {
                  'pbadslot' === r
                    ? 'string' == typeof t[r] &&
                      t[r] &&
                      (0, n.J)(e, 'ext.data.pbadslot', t[r])
                    : 'adserver' === r
                      ? ['name', 'adslot'].forEach((r) => {
                          const a = (0, s.A)(t, `adserver.${r}`);
                          'string' == typeof a &&
                            a &&
                            ((0, n.J)(
                              e,
                              `ext.data.adserver.${r.toLowerCase()}`,
                              a,
                            ),
                            'adslot' === r &&
                              (0, n.J)(e, 'ext.dfp_ad_unit_code', a));
                        })
                      : (0, n.J)(e, `ext.data.${r}`, t[r]);
                });
                const a = (0, s.A)(r, 'ortb2Imp.ext.gpid');
                a && (0, n.J)(e, 'ext.gpid', a);
              })(o, e),
              (function (e, r) {
                let t = -1;
                'function' != typeof r.getFloor ||
                  p.$W.getConfig('pubmatic.disableFloors') ||
                  [d.D4, d.G_, d.s6].forEach((a) => {
                    if (e.hasOwnProperty(a)) {
                      let s = [];
                      'banner' === a &&
                        (e[a].w && e[a].h && s.push([e[a].w, e[a].h]),
                        (0, i.isArray)(e[a].format) &&
                          e[a].format.forEach((e) => s.push([e.w, e.h]))),
                        0 === s.length && s.push('*'),
                        s.forEach((s) => {
                          let n = r.getFloor({
                            currency: e.bidfloorcur,
                            mediaType: a,
                            size: s,
                          });
                          if (
                            ((0, i.logInfo)(
                              u,
                              'floor from floor module returned for mediatype:',
                              a,
                              ' and size:',
                              s,
                              ' is: currency',
                              n.currency,
                              'floor',
                              n.floor,
                            ),
                            'object' == typeof n &&
                              n.currency === e.bidfloorcur &&
                              !isNaN(parseInt(n.floor)))
                          ) {
                            let e = parseFloat(n.floor);
                            (0, i.logInfo)(
                              u,
                              'floor from floor module:',
                              e,
                              'previous floor value',
                              t,
                              'Min:',
                              Math.min(e, t),
                            ),
                              (t = -1 === t ? e : Math.min(e, t)),
                              (0, i.logInfo)(u, 'new floor value:', t);
                          }
                        });
                    }
                  });
                e.bidfloor &&
                  ((0, i.logInfo)(
                    u,
                    'floor from floor module:',
                    t,
                    'impObj.bidfloor',
                    e.bidfloor,
                    'Max:',
                    Math.max(t, e.bidfloor),
                  ),
                  (t = Math.max(t, e.bidfloor)));
                (e.bidfloor = !isNaN(t) && t > 0 ? t : f),
                  (0, i.logInfo)(u, 'new impObj.bidfloor value:', e.bidfloor);
              })(o, e),
              (function (e, r, t) {
                t
                  ? ((e.ext = e.ext || {}),
                    void 0 !== r?.ortb2Imp?.ext?.ae &&
                      (e.ext.ae = r.ortb2Imp.ext.ae))
                  : e.ext?.ae && delete e.ext.ae;
              })(o, e, b),
              o.hasOwnProperty(d.D4) ||
              o.hasOwnProperty(d.s6) ||
              o.hasOwnProperty(d.G_)
                ? o
                : f
            );
          }
          function M(e, r) {
            (r = r
              .filter(function (e) {
                return (
                  'string' == typeof e ||
                  ((0, i.logWarn)(
                    u +
                      'acat: Each category should be a string, ignoring category: ' +
                      e,
                  ),
                  !1)
                );
              })
              .map((e) => e.trim())
              .filter((e, r, t) => t.indexOf(e) === r)).length > 0 &&
              ((0, i.logWarn)(u + 'acat: Selected: ', r), (e.ext.acat = r));
          }
          function q(e) {
            return !0 === (0, i.isArray)(e) && e.length > 0;
          }
          const J = {
            code: g,
            gvlid: 76,
            supportedMediaTypes: [d.D4, d.G_, d.s6],
            isBidRequestValid: (e) => {
              if (e && e.params) {
                if (!(0, i.isStr)(e.params.publisherId))
                  return (
                    (0, i.logWarn)(
                      u +
                        'Error: publisherId is mandatory and cannot be numeric (wrap it in quotes in your config). Call to OpenBid will not be sent for ad unit: ' +
                        JSON.stringify(e),
                    ),
                    !1
                  );
                if (
                  e.hasOwnProperty('mediaTypes') &&
                  e.mediaTypes.hasOwnProperty(d.G_)
                ) {
                  let r = (0, s.A)(e.mediaTypes, 'video.mimes'),
                    t = (0, s.A)(e, 'params.video.mimes');
                  if (!1 === q(r) && !1 === q(t))
                    return (
                      (0, i.logWarn)(
                        u +
                          'Error: For video ads, bid.mediaTypes.video.mimes OR bid.params.video.mimes should be present and must be a non-empty array. Call to OpenBid will not be sent for ad unit:' +
                          JSON.stringify(e),
                      ),
                      !1
                    );
                  if (!e.mediaTypes[d.G_].hasOwnProperty('context'))
                    return (
                      (0, i.logError)(
                        `${u}: no context specified in bid. Rejecting bid: `,
                        e,
                      ),
                      !1
                    );
                  if (
                    'outstream' === e.mediaTypes[d.G_].context &&
                    !(0, i.isStr)(e.params.outstreamAU) &&
                    !e.hasOwnProperty('renderer') &&
                    !e.mediaTypes[d.G_].hasOwnProperty('renderer')
                  )
                    return e.mediaTypes.hasOwnProperty(d.D4) ||
                      e.mediaTypes.hasOwnProperty(d.s6)
                      ? (delete e.mediaTypes[d.G_],
                        (0, i.logWarn)(
                          `${u}: for "outstream" bids either outstreamAU parameter must be provided or ad unit supplied renderer is required. Rejecting mediatype Video of bid: `,
                          e,
                        ),
                        !0)
                      : ((0, i.logError)(
                          `${u}: for "outstream" bids either outstreamAU parameter must be provided or ad unit supplied renderer is required. Rejecting bid: `,
                          e,
                        ),
                        !1);
                }
                return !0;
              }
              return !1;
            },
            buildRequests: (e, r) => {
              var t;
              r && r.refererInfo && (t = r.refererInfo);
              var a,
                o = (function (e) {
                  return {
                    pageURL: e?.page || window.location.href,
                    refURL: e?.ref || window.document.referrer,
                  };
                })(t),
                l = (function (e) {
                  return {
                    id: '' + new Date().getTime(),
                    at: 1,
                    cur: [h],
                    imp: [],
                    site: { page: e.pageURL, ref: e.refURL, publisher: {} },
                    device: {
                      ua: navigator.userAgent,
                      js: 1,
                      dnt:
                        'yes' == navigator.doNotTrack ||
                        '1' == navigator.doNotTrack ||
                        '1' == navigator.msDoNotTrack
                          ? 1
                          : 0,
                      h: screen.height,
                      w: screen.width,
                      language: navigator.language,
                      connectiontype: U(),
                    },
                    user: {},
                    ext: {},
                  };
                })(o),
                c = '',
                g = [],
                b = [],
                y = [],
                w = (0, i.generateUUID)();
              if (
                (e.forEach((e) => {
                  if (
                    ((e.params.wiid = e.params.wiid || r.auctionId || w),
                    ((a = (0, i.deepClone)(e)).params.adSlot =
                      a.params.adSlot || ''),
                    z(a),
                    (a.mediaTypes && a.mediaTypes.hasOwnProperty('video')) ||
                      a.params.hasOwnProperty('video'))
                  );
                  else if (
                    !(
                      (a.hasOwnProperty('mediaTypes') &&
                        a.mediaTypes.hasOwnProperty(d.s6)) ||
                      0 !== a.params.width ||
                      0 !== a.params.height
                    )
                  )
                    return void (0, i.logWarn)(
                      u + 'Skipping the non-standard adslot: ',
                      a.params.adSlot,
                      JSON.stringify(a),
                    );
                  (o.pubId = o.pubId || a.params.publisherId),
                    ((o = (function (e, r) {
                      var t, a, s;
                      for (t in (r.kadpageurl || (r.kadpageurl = r.pageURL), v))
                        v.hasOwnProperty(t) &&
                          (a = e[t]) &&
                          ('object' == typeof (s = v[t]) && (a = s.f(a, r)),
                          (0, i.isStr)(a)
                            ? (r[t] = a)
                            : (0, i.logWarn)(
                                u +
                                  'Ignoring param : ' +
                                  t +
                                  ' with value : ' +
                                  v[t] +
                                  ', expects string-value, found ' +
                                  typeof a,
                              ));
                      return r;
                    })(a.params, o)).transactionId = a.ortb2Imp?.ext?.tid),
                    '' === c
                      ? (c = a.params.currency || f)
                      : a.params.hasOwnProperty('currency') &&
                        c !== a.params.currency &&
                        (0, i.logWarn)(
                          u +
                            'Currency specifier ignored. Only one currency permitted.',
                        ),
                    (a.params.currency = c),
                    a.params.hasOwnProperty('dctr') &&
                      (0, i.isStr)(a.params.dctr) &&
                      g.push(a.params.dctr),
                    a.params.hasOwnProperty('bcat') &&
                      (0, i.isArray)(a.params.bcat) &&
                      (b = b.concat(a.params.bcat)),
                    a.params.hasOwnProperty('acat') &&
                      (0, i.isArray)(a.params.acat) &&
                      (y = y.concat(a.params.acat));
                  var t = B(a, r);
                  t && l.imp.push(t);
                }),
                0 == l.imp.length)
              )
                return;
              (l.site.publisher.id = o.pubId.trim()),
                (A = o.pubId.trim()),
                (l.ext.wrapper = {}),
                (l.ext.wrapper.profile = parseInt(o.profId) || f),
                (l.ext.wrapper.version = parseInt(o.verId) || f),
                (l.ext.wrapper.wiid = o.wiid || r.auctionId),
                (l.ext.wrapper.wv = 'prebid_prebid_9.0.0'),
                (l.ext.wrapper.transactionId = o.transactionId),
                (l.ext.wrapper.wp = 'pbjs');
              const x = r
                ? m.u.get(r.bidderCode, 'allowAlternateBidderCodes')
                : void 0;
              if (void 0 !== x) {
                if (((l.ext.marketplace = {}), r && 1 == x)) {
                  let e = m.u.get(r.bidderCode, 'allowedAlternateBidderCodes');
                  (0, i.isArray)(e)
                    ? ((e = e
                        .map((e) => e.trim().toLowerCase())
                        .filter((e) => !!e)
                        .filter(i.uniques)),
                      (_ = e.includes('*') ? C : [..._, ...e]))
                    : (_ = C);
                }
                l.ext.marketplace.allowedbidders = _.filter(i.uniques);
              }
              (l.user.gender = o.gender ? o.gender.trim() : f),
                (l.user.geo = {}),
                (l.user.yob = S('yob', o.yob)),
                (l.site.page = o.kadpageurl.trim() || l.site.page.trim()),
                (l.site.domain = (function (e) {
                  let r = document.createElement('a');
                  return (r.href = e), r.hostname;
                })(l.site.page)),
                'object' == typeof p.$W.getConfig('content') &&
                  (l.site.content = p.$W.getConfig('content')),
                'object' == typeof p.$W.getConfig('device') &&
                  (l.device = Object.assign(
                    l.device,
                    p.$W.getConfig('device'),
                  )),
                (l.device.language =
                  l.device.language && l.device.language.split('-')[0]),
                (0, n.J)(l, 'source.tid', r?.ortb2?.source?.tid),
                -1 !== window.location.href.indexOf('pubmaticTest=true') &&
                  (l.test = 1),
                e[0].schain && (0, n.J)(l, 'source.ext.schain', e[0].schain),
                r &&
                  r.gdprConsent &&
                  ((0, n.J)(l, 'user.ext.consent', r.gdprConsent.consentString),
                  (0, n.J)(
                    l,
                    'regs.ext.gdpr',
                    r.gdprConsent.gdprApplies ? 1 : 0,
                  )),
                r &&
                  r.uspConsent &&
                  (0, n.J)(l, 'regs.ext.us_privacy', r.uspConsent),
                r?.gppConsent?.gppString
                  ? ((0, n.J)(l, 'regs.gpp', r.gppConsent.gppString),
                    (0, n.J)(
                      l,
                      'regs.gpp_sid',
                      r.gppConsent.applicableSections,
                    ))
                  : r?.ortb2?.regs?.gpp &&
                    ((0, n.J)(l, 'regs.gpp', r.ortb2.regs.gpp),
                    (0, n.J)(l, 'regs.gpp_sid', r.ortb2.regs.gpp_sid)),
                !0 === p.$W.getConfig('coppa') && (0, n.J)(l, 'regs.coppa', 1),
                r?.ortb2?.regs?.ext?.dsa &&
                  (0, n.J)(l, 'regs.ext.dsa', r.ortb2.regs.ext.dsa),
                (function (e, r) {
                  let t = (0, s.A)(r, '0.userIdAsEids');
                  (0, i.isArray)(t) &&
                    t.length > 0 &&
                    (0, n.J)(e, 'user.eids', t);
                })(l, e);
              const I = (r && r.ortb2) || {},
                { user: R, device: O, site: T, bcat: E, badv: W } = I;
              if (T) {
                const { page: e, domain: r, ref: t } = l.site;
                (0, i.mergeDeep)(l, { site: T }),
                  (l.site.page = e),
                  (l.site.domain = r),
                  (l.site.ref = t);
              }
              if (
                (R && (0, i.mergeDeep)(l, { user: R }),
                W && (0, i.mergeDeep)(l, { badv: W }),
                E && (b = b.concat(E)),
                O?.sua && (l.device.sua = O?.sua),
                O?.ext?.cdep && (0, n.J)(l, 'device.ext.cdep', O.ext.cdep),
                R?.geo && O?.geo
                  ? ((l.device.geo = { ...l.device.geo, ...O.geo }),
                    (l.user.geo = { ...l.user.geo, ...R.geo }))
                  : (R?.geo || O?.geo) &&
                    (l.user.geo = l.device.geo =
                      R?.geo
                        ? { ...l.user.geo, ...R.geo }
                        : { ...l.user.geo, ...O.geo }),
                I.ext?.prebid?.bidderparams?.[r.bidderCode]?.acat)
              ) {
                const e = I.ext.prebid.bidderparams[r.bidderCode].acat;
                M(l, e);
              } else y.length && M(l, y);
              return (
                (function (e, r) {
                  (r = r
                    .filter(function (e) {
                      return (
                        'string' == typeof e ||
                        ((0, i.logWarn)(
                          u +
                            'bcat: Each category should be a string, ignoring category: ' +
                            e,
                        ),
                        !1)
                      );
                    })
                    .map((e) => e.trim())
                    .filter(function (e, r, t) {
                      if (e.length > 3) return t.indexOf(e) === r;
                      (0, i.logWarn)(
                        u +
                          'bcat: Each category should have a value of a length of more than 3 characters, ignoring category: ' +
                          e,
                      );
                    })).length > 0 &&
                    ((0, i.logWarn)(u + 'bcat: Selected: ', r), (e.bcat = r));
                })(l, b),
                (l.tmax = r?.timeout
                  ? r.timeout
                  : window?.PWT?.versionDetails?.timeout),
                (l.ext.epoch = new Date().getTime()),
                'object' == typeof p.$W.getConfig('app') &&
                  ((l.app = p.$W.getConfig('app')),
                  (l.app.publisher = l.site.publisher),
                  (l.app.ext = l.site.ext || f),
                  'object' != typeof l.app.content &&
                    (l.app.content = l.site.content || f),
                  delete l.site),
                {
                  method: 'POST',
                  url: 'https://hbopenbid.pubmatic.com/translator?source=prebid-client',
                  data: JSON.stringify(l),
                  bidderRequest: r,
                }
              );
            },
            interpretResponse: (e, r) => {
              const t = [];
              var a = h;
              let n = JSON.parse(r.data),
                o = n.site && n.site.ref ? n.site.ref : '';
              try {
                e.body &&
                  e.body.seatbid &&
                  (0, i.isArray)(e.body.seatbid) &&
                  ((a = e.body.cur || a),
                  e.body.seatbid.forEach((e) => {
                    e.bid &&
                      (0, i.isArray)(e.bid) &&
                      e.bid.forEach((p) => {
                        let l = {
                          requestId: p.impid,
                          cpm: parseFloat((p.price || 0).toFixed(2)),
                          width: p.w,
                          height: p.h,
                          creativeId: p.crid || p.id,
                          dealId: p.dealid,
                          currency: a,
                          netRevenue: true,
                          ttl: 300,
                          referrer: o,
                          ad: p.adm,
                          pm_seat: e.seat || null,
                          pm_dspid: p.ext && p.ext.dspid ? p.ext.dspid : null,
                          partnerImpId: p.id || '',
                        };
                        n.imp &&
                          n.imp.length > 0 &&
                          n.imp.forEach((e) => {
                            if (p.impid === e.id)
                              switch (
                                ((function (e, r) {
                                  if (e.ext && null != e.ext.bidtype)
                                    r.mediaType = T[e.ext.bidtype];
                                  else {
                                    (0, i.logInfo)(
                                      u +
                                        'bid.ext.bidtype does not exist, checking alternatively for mediaType',
                                    );
                                    var t = e.adm,
                                      a = '',
                                      s = new RegExp(/VAST\s+version/);
                                    if (t.indexOf('span class="PubAPIAd"') >= 0)
                                      r.mediaType = d.D4;
                                    else if (s.test(t)) r.mediaType = d.G_;
                                    else
                                      try {
                                        (a = JSON.parse(
                                          t.replace(/\\/g, ''),
                                        )) &&
                                          a.native &&
                                          (r.mediaType = d.s6);
                                      } catch (e) {
                                        (0, i.logWarn)(
                                          u +
                                            'Error: Cannot parse native reponse for ad response: ' +
                                            t,
                                        );
                                      }
                                  }
                                })(p, l),
                                l.mediaType)
                              ) {
                                case d.D4:
                                  break;
                                case d.G_:
                                  (l.width = p.hasOwnProperty('w')
                                    ? p.w
                                    : e.video.w),
                                    (l.height = p.hasOwnProperty('h')
                                      ? p.h
                                      : e.video.h),
                                    (l.vastXml = p.adm),
                                    (function (e, r) {
                                      let t, a, i;
                                      if (
                                        r.bidderRequest &&
                                        r.bidderRequest.bids
                                      ) {
                                        for (
                                          let s = 0;
                                          s < r.bidderRequest.bids.length;
                                          s++
                                        )
                                          r.bidderRequest.bids[s].bidId ===
                                            e.requestId &&
                                            ((t =
                                              r.bidderRequest.bids[s].params),
                                            (a =
                                              r.bidderRequest.bids[s]
                                                .mediaTypes[d.G_].context),
                                            (i =
                                              r.bidderRequest.bids[s]
                                                .adUnitCode));
                                        a &&
                                          'outstream' === a &&
                                          t &&
                                          t.outstreamAU &&
                                          i &&
                                          ((e.rendererCode = t.outstreamAU),
                                          (e.renderer = O.newRenderer(
                                            e.rendererCode,
                                            i,
                                          )));
                                      }
                                    })(l, r),
                                    (function (e, r, t) {
                                      if (!r?.ext?.prebiddealpriority) return;
                                      const a = (0, i.getBidRequest)(
                                          e.requestId,
                                          [t.bidderRequest],
                                        ),
                                        n = (0, s.A)(a, 'mediaTypes.video');
                                      if (n?.context != d.LM) return;
                                      const o =
                                        r?.ext?.video?.duration ||
                                        n?.maxduration;
                                      e.video = {
                                        context: d.LM,
                                        durationSeconds: o,
                                        dealTier: r.ext.prebiddealpriority,
                                      };
                                    })(l, p, r);
                                  break;
                                case d.s6:
                                  !(function (e, r) {
                                    if (e.hasOwnProperty('adm')) {
                                      var t = '';
                                      try {
                                        t = JSON.parse(
                                          e.adm.replace(/\\/g, ''),
                                        );
                                      } catch (e) {
                                        return void (0, i.logWarn)(
                                          u +
                                            'Error: Cannot parse native reponse for ad response: ' +
                                            r.adm,
                                        );
                                      }
                                      (r.native = { ortb: { ...t.native } }),
                                        (r.mediaType = d.s6),
                                        r.width || (r.width = 0),
                                        r.height || (r.height = 0);
                                    }
                                  })(p, l);
                              }
                          }),
                          p.ext &&
                            p.ext.deal_channel &&
                            (l.dealChannel = R[p.ext.deal_channel] || null),
                          (function (e, r, t) {
                            (e.meta = {}),
                              r.ext &&
                                r.ext.dspid &&
                                ((e.meta.networkId = r.ext.dspid),
                                (e.meta.demandSource = r.ext.dspid)),
                              r.ext &&
                                r.ext.dchain &&
                                (e.meta.dchain = r.ext.dchain);
                            const a = t || (r.ext && r.ext.advid);
                            a &&
                              ((e.meta.advertiserId = a),
                              (e.meta.agencyId = a),
                              (e.meta.buyerId = a)),
                              r.adomain &&
                                q(r.adomain) &&
                                ((e.meta.advertiserDomains = r.adomain),
                                (e.meta.clickUrl = r.adomain[0]),
                                (e.meta.brandId = r.adomain[0])),
                              r.cat &&
                                q(r.cat) &&
                                ((e.meta.secondaryCatIds = r.cat),
                                (e.meta.primaryCatId = r.cat[0])),
                              r.ext &&
                                r.ext.dsa &&
                                Object.keys(r.ext.dsa).length &&
                                (e.meta.dsa = r.ext.dsa);
                          })(l, p, e.seat),
                          e.ext &&
                            e.ext.buyid &&
                            (l.adserverTargeting = {
                              hb_buyid_pubmatic: e.ext.buyid,
                            }),
                          p.ext &&
                            p.ext.marketplace &&
                            (l.bidderCode = p.ext.marketplace),
                          t.push(l);
                      });
                  }));
                let p = (0, s.A)(e.body, 'ext.fledge_auction_configs');
                if (p)
                  return (
                    (p = Object.entries(p).map((e) => {
                      let [r, t] = e;
                      return {
                        bidId: r,
                        config: Object.assign({ auctionSignals: {} }, t),
                      };
                    })),
                    { bids: t, paapi: p }
                  );
              } catch (e) {
                (0, i.logError)(e);
              }
              return t;
            },
            getUserSyncs: (e, r, t, a, i) => {
              let s = '' + A;
              return (
                t &&
                  ((s += '&gdpr=' + (t.gdprApplies ? 1 : 0)),
                  (s +=
                    '&gdpr_consent=' +
                    encodeURIComponent(t.consentString || ''))),
                a && (s += '&us_privacy=' + encodeURIComponent(a)),
                i?.gppString &&
                  i?.applicableSections?.length &&
                  ((s += '&gpp=' + encodeURIComponent(i.gppString)),
                  (s +=
                    '&gpp_sid=' +
                    encodeURIComponent(i?.applicableSections?.join(',')))),
                !0 === p.$W.getConfig('coppa') && (s += '&coppa=1'),
                e.iframeEnabled
                  ? [
                      {
                        type: 'iframe',
                        url:
                          'https://ads.pubmatic.com/AdServer/js/user_sync.html?kdntuid=1&p=' +
                          s,
                      },
                    ]
                  : [
                      {
                        type: 'image',
                        url:
                          'https://image8.pubmatic.com/AdServer/ImgSync?p=' + s,
                      },
                    ]
              );
            },
          };
          (0, o.a$)(J), (0, a.E)('pubmaticBidAdapter');
        },
      },
      (e) => {
        e.O(0, [60802, 51085], () => {
          return (r = 63990), e((e.s = r));
          var r;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [58683],
      {
        8959: (e, t, i) => {
          var n = i(7873),
            a = i(70433),
            o = i(91069),
            s = i(68044),
            r = i(88910),
            d = i(11445),
            l = i(78969),
            p = i(51252);
          let u,
            c,
            g = [],
            m = { bids: [], floorDetail: {}, pageDetail: {}, deviceDetail: {} };
          var f = Object.assign(
            (0, r.Ay)({ emptyUrl: '', analyticsType: 'endpoint' }),
            {
              track(e) {
                let { eventType: t, args: i } = e;
                if (void 0 !== i)
                  if (t === l.qY.BID_TIMEOUT)
                    i.forEach((e) => {
                      b(e, 'timeout');
                    });
                  else if (t === l.qY.AUCTION_INIT) {
                    (m.auctionInit = i), (m.floorDetail = {}), (m.bids = []);
                    const e = (0, a.A)(i, 'bidderRequests.0.bids.0.floorData');
                    void 0 !== e && Object.assign(m.floorDetail, e),
                      (c = i.timestamp);
                  } else
                    t === l.qY.BID_RESPONSE
                      ? b(i, 'response')
                      : t === l.qY.BID_WON &&
                        v({ winningBid: b(i, 'bidwon') }, 'bidwon');
                t === l.qY.AUCTION_END && v(m, 'auctionEnd');
              },
            },
          );
          function b(e, t) {
            if (void 0 !== e) {
              let i = {
                adUnitCode: e.adUnitCode,
                gptSlotCode: (0, p.p)(e.adUnitCode).gptSlot || null,
                auctionId: e.auctionId,
                bidderCode: e.bidder,
                cpm: e.cpm,
                creativeId: e.creativeId,
                currency: e.currency,
                floorData: e.floorData,
                mediaType: e.mediaType,
                netRevenue: e.netRevenue,
                requestTimestamp: e.requestTimestamp,
                responseTimestamp: e.responseTimestamp,
                status: e.status,
                statusMessage: e.statusMessage,
                timeToRespond: e.timeToRespond,
                transactionId: e.transactionId,
              };
              if ('bidwon' === t)
                return (
                  Object.assign(i, {
                    bidId: e.requestId,
                    floorProvider: m.floorDetail?.floorProvider || null,
                    floorFetchStatus: m.floorDetail?.fetchStatus || null,
                    floorLocation: m.floorDetail?.location || null,
                    floorModelVersion: m.floorDetail?.modelVersion || null,
                    floorSkipRate: m.floorDetail?.skipRate || 0,
                    isFloorSkipped: m.floorDetail?.skipped || !1,
                    isWinningBid: !0,
                    placementId: e.params
                      ? (0, a.A)(e, 'params.0.placementId')
                      : null,
                    renderedSize: e.size,
                    renderStatus: 4,
                  }),
                  i
                );
              Object.assign(i, {
                bidId: 'timeout' === t ? e.bidId : e.requestId,
                renderStatus: 'timeout' === t ? 3 : 2,
                sizes: (0, o.parseSizesInput)(e.size).toString(),
              }),
                m.bids.push(i);
            }
          }
          function v(e, t) {
            if (f.shouldFireEventRequest(u.samplingRate)) {
              let i = (0, o.getWindowLocation)();
              const a = (function () {
                try {
                  return window.top.sessionStorage;
                } catch (e) {
                  return null;
                }
              })();
              (e.initOptions = u),
                (e.pageDetail = {}),
                Object.assign(e.pageDetail, {
                  host: i.host,
                  path: i.pathname,
                  search: i.search,
                }),
                void 0 !== e &&
                  void 0 !== e.auctionInit &&
                  ((e.pageDetail.adUnits = e.auctionInit.adUnitCodes),
                  (e.initOptions.auctionId = e.auctionInit.auctionId),
                  delete e.auctionInit,
                  (e.pmcDetail = {}),
                  Object.assign(e.pmcDetail, {
                    bidDensity: a ? a.getItem('pbx:dpbid') : null,
                    maxBid: a ? a.getItem('pbx:mxbid') : null,
                    auctionId: a ? a.getItem('pbx:aucid') : null,
                  })),
                (e.deviceDetail = {}),
                Object.assign(e.deviceDetail, {
                  platform: navigator.platform,
                  deviceType:
                    /ipad|android 3.0|xoom|sch-i800|playbook|tablet|kindle/i.test(
                      navigator.userAgent.toLowerCase(),
                    )
                      ? 'tablet'
                      : /iphone|ipod|android|blackberry|opera|mini|windows\sce|palm|smartphone|iemobile/i.test(
                            navigator.userAgent.toLowerCase(),
                          )
                        ? 'mobile'
                        : 'desktop',
                  deviceOS:
                    -1 != navigator.userAgent.indexOf('Android')
                      ? 'Android'
                      : -1 != navigator.userAgent.indexOf('like Mac')
                        ? 'iOS'
                        : -1 != navigator.userAgent.indexOf('Win')
                          ? 'Windows'
                          : -1 != navigator.userAgent.indexOf('Mac')
                            ? 'Macintosh'
                            : -1 != navigator.userAgent.indexOf('Linux')
                              ? 'Linux'
                              : -1 != navigator.appVersion.indexOf('X11')
                                ? 'Unix'
                                : 'Others',
                  browser:
                    (/Chrome/.test(navigator.userAgent) &&
                      /Google Inc/.test(navigator.vendor)) ||
                    navigator.userAgent.match('CriOS')
                      ? 'Chrome'
                      : /Firefox/.test(navigator.userAgent)
                        ? 'Firefox'
                        : /Edg/.test(navigator.userAgent)
                          ? 'Microsoft Edge'
                          : /Safari/.test(navigator.userAgent) &&
                              /Apple Computer/.test(navigator.vendor)
                            ? 'Safari'
                            : /Trident/.test(navigator.userAgent) ||
                                /MSIE/.test(navigator.userAgent)
                              ? 'Internet Explorer'
                              : 'Others',
                });
              let r = (0, o.buildUrl)({
                protocol: 'https',
                hostname: (u && u.hostName) || 'api.pbxai.com',
                pathname:
                  'bidwon' == t ? '/analytics/bidwon' : '/analytics/auction',
                search: {
                  auctionTimestamp: c,
                  pubxaiAnalyticsVersion: 'v1.2.0',
                  prebidVersion: (0, n.m)().version,
                },
              });
              'bidwon' == t
                ? (0, s.RD)(r, void 0, JSON.stringify(e), {
                    method: 'POST',
                    contentType: 'text/json',
                  })
                : 'auctionEnd' == t &&
                  -1 === g.indexOf(e.initOptions.auctionId) &&
                  ((0, s.RD)(r, void 0, JSON.stringify(e), {
                    method: 'POST',
                    contentType: 'text/json',
                  }),
                  g.push(e.initOptions.auctionId));
            }
          }
          (f.shouldFireEventRequest = function () {
            let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : 1;
            return Math.floor(Math.random() * e + 1) === parseInt(e);
          }),
            (f.originEnableAnalytics = f.enableAnalytics),
            (f.enableAnalytics = function (e) {
              (u = e.options), f.originEnableAnalytics(e);
            }),
            d.Ay.registerAnalyticsAdapter({ adapter: f, code: 'pubxai' });
          (0, n.E)('pubxaiAnalyticsAdapter');
        },
      },
      (e) => {
        e.O(0, [2630, 33005, 60802, 51085], () => {
          return (t = 8959), e((e.s = t));
          var t;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [53206],
      {
        26848: (e, t, r) => {
          var i = r(7873),
            n = r(91069),
            s = r(70433),
            o = r(57377),
            a = r(71371),
            d = r(43272);
          const p = [a.D4, a.G_],
            c = '6.0.0',
            m = 'USD',
            u = 'hb-multi',
            l = 'hb-multi-test',
            g = { IFRAME: 'iframe', PIXEL: 'pixel' },
            y = {
              code: 'rise',
              aliases: [
                { code: 'risexchange', gvlid: 1043 },
                { code: 'openwebxchange', gvlid: 280 },
              ],
              gvlid: 1043,
              version: c,
              supportedMediaTypes: p,
              isBidRequestValid: function (e) {
                return e.params
                  ? !!e.params.org ||
                      ((0, n.logWarn)(
                        'org is a mandatory param for Rise adapter',
                      ),
                      !1)
                  : ((0, n.logWarn)('no params have been set to Rise adapter'),
                    !1);
              },
              buildRequests: function (e, t) {
                const r = {},
                  i = e[0],
                  o = i.params.testMode,
                  p = i.params.rtbDomain;
                return (
                  (r.params = (function (e, t) {
                    const r = window.location.hostname,
                      { syncEnabled: i, filterSettings: o } =
                        d.$W.getConfig('userSync') || {},
                      { bidderCode: a } = t,
                      p = e.params,
                      m = t.timeout,
                      u = {
                        wrapper_type: 'prebidjs',
                        wrapper_vendor: 'pbjs',
                        wrapper_version: '9.0.0',
                        adapter_version: c,
                        auction_start: (0, n.timestamp)(),
                        publisher_id: p.org,
                        publisher_name: r,
                        site_domain: r,
                        dnt:
                          'yes' == navigator.doNotTrack ||
                          '1' == navigator.doNotTrack ||
                          '1' == navigator.msDoNotTrack
                            ? 1
                            : 0,
                        device_type: I(navigator.userAgent),
                        ua: navigator.userAgent,
                        is_wrapper: !!p.isWrapper,
                        session_id:
                          p.sessionId ||
                          (0, n.getBidIdParameter)('bidderRequestId', e),
                        tmax: m,
                      },
                      l = (0, n.getBidIdParameter)('userId', e);
                    l && (u.userIds = JSON.stringify(l));
                    const y = t.ortb2 || {};
                    y.site && (u.site_metadata = JSON.stringify(y.site));
                    y.user && (u.user_metadata = JSON.stringify(y.user));
                    if (i) {
                      const e = (function (e, t) {
                        const r = ['all', 'iframe'],
                          i = 'image';
                        if (e && r.some((r) => h(e[r], t))) return g.IFRAME;
                        if (!e || !e[i] || h(e[i], t)) return g.PIXEL;
                      })(o, a);
                      e && (u.cs_method = e);
                    }
                    t.uspConsent && (u.us_privacy = t.uspConsent);
                    t &&
                      t.gdprConsent &&
                      t.gdprConsent.gdprApplies &&
                      ((u.gdpr = t.gdprConsent.gdprApplies),
                      (u.gdpr_consent = t.gdprConsent.consentString));
                    t && t.gppConsent
                      ? ((u.gpp = t.gppConsent.gppString),
                        (u.gpp_sid = t.gppConsent.applicableSections))
                      : t.ortb2?.regs?.gpp &&
                        ((u.gpp = t.ortb2.regs.gpp),
                        (u.gpp_sid = t.ortb2.regs.gpp_sid));
                    p.ifa && (u.ifa = p.ifa);
                    e.schain &&
                      (u.schain = (function (e) {
                        if ((0, n.isEmpty)(e)) return '';
                        let t = `${e.ver},${e.complete}`;
                        return (
                          e.nodes.forEach((e) => {
                            (t += '!'),
                              (t += `${b(e.asi)},`),
                              (t += `${b(e.sid)},`),
                              (t += `${e.hp ? encodeURIComponent(e.hp) : ''},`),
                              (t += `${b(e.rid)},`),
                              (t += `${b(e.name)},`),
                              (t += `${b(e.domain)}`);
                          }),
                          t
                        );
                      })(e.schain));
                    t &&
                      t.refererInfo &&
                      ((u.referrer = (0, s.A)(t, 'refererInfo.ref')),
                      (u.page_url =
                        (0, s.A)(t, 'refererInfo.page') ||
                        (0, s.A)(window, 'location.href')));
                    return u;
                  })(i, t)),
                  (r.bids = (function (e, t) {
                    const r = [];
                    e.length &&
                      e.forEach((e) => {
                        r.push(
                          (function (e, t) {
                            const { params: r } = e,
                              i = (function (e) {
                                return e.mediaTypes && e.mediaTypes.banner;
                              })(e)
                                ? a.D4
                                : a.G_,
                              o = (function (e, t) {
                                let r = [];
                                (0, s.A)(e, `mediaTypes.${t}.sizes`)
                                  ? (r = e.mediaTypes[t].sizes)
                                  : Array.isArray(e.sizes) &&
                                    e.sizes.length > 0 &&
                                    (r = e.sizes);
                                return r;
                              })(e, i);
                            isNaN(r.floorPrice) && (r.floorPrice = 0);
                            const d = {
                                mediaType: i,
                                adUnitCode: (0, n.getBidIdParameter)(
                                  'adUnitCode',
                                  e,
                                ),
                                sizes: o,
                                floorPrice: Math.max(f(e, i), r.floorPrice),
                                bidId: (0, n.getBidIdParameter)('bidId', e),
                                bidderRequestId: (0, n.getBidIdParameter)(
                                  'bidderRequestId',
                                  e,
                                ),
                                loop: (0, n.getBidIdParameter)(
                                  'bidderRequestsCount',
                                  e,
                                ),
                                transactionId: e.ortb2Imp?.ext?.tid,
                                coppa: 0,
                              },
                              p = (0, s.A)(e, `mediaTypes.${i}.pos`);
                            p && (d.pos = p);
                            const c = (0, s.A)(e, 'ortb2Imp.ext.gpid');
                            c && (d.gpid = c);
                            const m =
                              r.placementId ||
                              (0, s.A)(e, `mediaTypes.${i}.name`);
                            m && (d.placementId = m);
                            const u = (0, s.A)(e, `mediaTypes.${i}.mimes`);
                            u && (d.mimes = u);
                            const l = (0, s.A)(e, `mediaTypes.${i}.api`);
                            l && (d.api = l);
                            const g = (0, s.A)(e, 'ortb2.device.sua');
                            g && (d.sua = g);
                            const y = (0, s.A)(e, 'ortb2.regs.coppa');
                            y && (d.coppa = 1);
                            if (i === a.G_) {
                              const t = (0, s.A)(
                                e,
                                'mediaTypes.video.playbackmethod',
                              );
                              let r;
                              Array.isArray(t) && (0, n.isInteger)(t[0])
                                ? (r = t[0])
                                : (0, n.isInteger)(t) && (r = t),
                                r && (d.playbackMethod = r);
                              const i = (0, s.A)(
                                e,
                                'mediaTypes.video.placement',
                              );
                              i && (d.placement = i);
                              const o = (0, s.A)(
                                e,
                                'mediaTypes.video.minduration',
                              );
                              o && (d.minDuration = o);
                              const a = (0, s.A)(
                                e,
                                'mediaTypes.video.maxduration',
                              );
                              a && (d.maxDuration = a);
                              const p = (0, s.A)(e, 'mediaTypes.video.skip');
                              p && (d.skip = p);
                              const c = (0, s.A)(
                                e,
                                'mediaTypes.video.linearity',
                              );
                              c && (d.linearity = c);
                              const m = (0, s.A)(
                                e,
                                'mediaTypes.video.protocols',
                              );
                              m && (d.protocols = m);
                              const u = (0, s.A)(e, 'mediaTypes.video.plcmt');
                              u && (d.plcmt = u);
                            }
                            return d;
                          })(e),
                        );
                      });
                    return r;
                  })(e)),
                  { method: 'POST', url: v(o, p), data: r }
                );
              },
              interpretResponse: function (e) {
                let { body: t } = e;
                const r = [];
                return (
                  t.bids &&
                    t.bids.forEach((e) => {
                      const t = {
                        requestId: e.requestId,
                        cpm: e.cpm,
                        currency: e.currency || m,
                        width: e.width,
                        height: e.height,
                        ttl: e.ttl || 360,
                        creativeId: e.creativeId,
                        netRevenue: e.netRevenue || !0,
                        nurl: e.nurl,
                        mediaType: e.mediaType,
                        meta: { mediaType: e.mediaType },
                      };
                      e.mediaType === a.G_
                        ? (t.vastXml = e.vastXml)
                        : e.mediaType === a.D4 && (t.ad = e.ad),
                        e.adomain &&
                          e.adomain.length &&
                          (t.meta.advertiserDomains = e.adomain),
                        r.push(t);
                    }),
                  r
                );
              },
              getUserSyncs: function (e, t) {
                const r = [];
                for (const i of t)
                  if (
                    (e.iframeEnabled &&
                      i.body.params.userSyncURL &&
                      r.push({
                        type: 'iframe',
                        url: i.body.params.userSyncURL,
                      }),
                    e.pixelEnabled &&
                      (0, n.isArray)(i.body.params.userSyncPixels))
                  ) {
                    const e = i.body.params.userSyncPixels.map((e) => ({
                      type: 'image',
                      url: e,
                    }));
                    r.push(...e);
                  }
                return r;
              },
              onBidWon: function (e) {
                null != e &&
                  ((0, n.logInfo)('onBidWon:', e),
                  e.hasOwnProperty('nurl') &&
                    e.nurl.length > 0 &&
                    (0, n.triggerPixel)(e.nurl));
              },
            };
          function f(e, t) {
            if (!(0, n.isFn)(e.getFloor)) return 0;
            let r = e.getFloor({ currency: m, mediaType: t, size: '*' });
            return r.currency === m && r.floor ? r.floor : 0;
          }
          function b(e) {
            return (0, n.isEmpty)(e) ? '' : encodeURIComponent(e);
          }
          function h(e, t) {
            if (!e) return !1;
            const r = 'include' === e.filter,
              i = (0, n.isArray)(e.bidders) ? e.bidders : [t];
            return r && (0, n.contains)(i, t);
          }
          function v(e, t) {
            const r = t ? `https://${t}/` : 'https://hb.yellowblue.io/';
            return e ? r + l : r + u;
          }
          function I(e) {
            return /ipad|android 3.0|xoom|sch-i800|playbook|tablet|kindle/i.test(
              e.toLowerCase(),
            )
              ? '5'
              : /iphone|ipod|android|blackberry|opera|mini|windows\sce|palm|smartphone|iemobile/i.test(
                    e.toLowerCase(),
                  )
                ? '4'
                : /smart[-_\s]?tv|hbbtv|appletv|googletv|hdmi|netcast|viera|nettv|roku|\bdtv\b|sonydtv|inettvbrowser|\btv\b/i.test(
                      e.toLowerCase(),
                    )
                  ? '3'
                  : '1';
          }
          (0, o.a$)(y), (0, i.E)('riseBidAdapter');
        },
      },
      (e) => {
        e.O(0, [60802, 51085], () => {
          return (t = 26848), e((e.s = t));
          var t;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [31079],
      {
        25330: (t, e, n) => {
          var o = n(7873),
            r = n(43272),
            a = n(16833),
            i = n(91069),
            s = n(75023),
            c = n(78969),
            u = n(11445),
            f = n(16916),
            l = n(15901),
            g = n(16894),
            d = n(45569),
            D = n(96318);
          const h = (0, n(2604).ZI)((t) => u.Ay.resolveAlias(t));
          let p,
            E,
            m = [],
            T = [],
            y = [];
          const R = (function () {
            let t = !1;
            return function () {
              t ||
                (Object.entries({
                  [c.qY.AUCTION_INIT]: ['onAuctionInitEvent'],
                  [c.qY.AUCTION_END]: ['onAuctionEndEvent', v],
                  [c.qY.BID_RESPONSE]: ['onBidResponseEvent'],
                  [c.qY.BID_REQUESTED]: ['onBidRequestEvent'],
                  [c.qY.BID_ACCEPTED]: ['onBidAcceptedEvent'],
                }).forEach((t) => {
                  let [e, [n, o]] = t;
                  s.on(e, (t) => {
                    o && o(t),
                      T.forEach((e) => {
                        try {
                          e[n] && e[n](t, e.config, E);
                        } catch (t) {
                          (0, i.logError)(
                            `RTD provider '${e.name}': error in '${n}':`,
                            t,
                          );
                        }
                      });
                  });
                }),
                (t = !0));
            };
          })();
          function A() {
            return {
              gdpr: f.mW.getConsentData(),
              usp: f.t6.getConsentData(),
              gpp: f.ad.getConsentData(),
              coppa: !!r.$W.getConfig('coppa'),
            };
          }
          function I() {
            E = A();
            let t = [];
            y.forEach((e) => {
              const n = (0, l.I6)(m, (t) => t.name === e.name);
              n &&
                n.init &&
                n.init(e, E) &&
                t.push(Object.assign(n, { config: e }));
            }),
              (T = t),
              (0, i.logInfo)(
                `Real time data module enabled, using submodules: ${T.map(
                  (t) => t.name,
                ).join(', ')}`,
              );
          }
          const b = (0, g.Ak)('rtd', function (t, e) {
            E = A();
            const n = [],
              o = [];
            T.forEach((t) => {
              if ('function' != typeof t.getBidRequestData) return;
              n.push(t);
              const e = t.config;
              e && e.waitForIt && o.push(t);
            });
            const r = o.length && p.auctionDelay && p.auctionDelay > 0;
            let a,
              i = o.length,
              s = !1;
            const c = [];
            if (!n.length) return f();
            function u() {
              s ||
                (this.config && this.config.waitForIt && i--,
                0 === i && setTimeout(f, 0));
            }
            function f() {
              s ||
                ((s = !0),
                clearTimeout(a),
                c.forEach((t) => t()),
                t.call(this, e));
            }
            (a = setTimeout(f, r ? p.auctionDelay : 0)),
              n.forEach((t) => {
                const n = (0, D.Qo)(e.ortb2Fragments || {}, h(d.zu, t.name));
                c.push(n.verify),
                  t.getBidRequestData(
                    { ...e, ortb2Fragments: n.obj },
                    u.bind(t),
                    t.config,
                    E,
                  );
              });
          });
          function v(t) {
            const e = T.filter((t) => 'function' == typeof t.getTargetingData);
            if (!e.length) return;
            const n = t.adUnitCodes;
            if (!n) return;
            let o = [];
            for (let r = e.length - 1; r >= 0; r--) {
              const a = e[r].getTargetingData(n, e[r].config, E, t);
              a && 'object' == typeof a
                ? o.push(a)
                : (0, i.logWarn)(
                    'invalid getTargetingData response for sub module',
                    e[r].name,
                  );
            }
            const r = (function (t) {
              if (!Array.isArray(t) || !t.length) return {};
              return t.reduce((t, e) => {
                for (let n in e)
                  if (e.hasOwnProperty(n))
                    if (t.hasOwnProperty(n)) {
                      const o = e[n];
                      for (let e in o) o.hasOwnProperty(e) && (t[n][e] = o[e]);
                    } else t[n] = e[n];
                return t;
              }, {});
            })(o);
            return (
              t.adUnits.forEach((t) => {
                const e = t.code && r[t.code];
                e &&
                  ((0, i.logInfo)('RTD set ad unit targeting of', e, 'for', t),
                  (t[c.iD.ADSERVER_TARGETING] = Object.assign(
                    t[c.iD.ADSERVER_TARGETING] || {},
                    e,
                  )));
              }),
              t.adUnits
            );
          }
          function q(t) {
            T.forEach((t) => {
              if ('function' == typeof t.onDataDeletionRequest)
                try {
                  t.onDataDeletionRequest(t.config);
                } catch (e) {
                  (0, i.logError)(
                    `Error executing ${t.name}.onDataDeletionRequest`,
                    e,
                  );
                }
            });
            for (
              var e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), o = 1;
              o < e;
              o++
            )
              n[o - 1] = arguments[o];
            t.apply(this, n);
          }
          (0, a.xG)('realTimeData', function (t) {
            return (
              m.push(t),
              f.o2.register(d.zu, t.name, t.gvlid),
              function () {
                const e = m.indexOf(t);
                e >= 0 && (m.splice(e, 1), I());
              }
            );
          }),
            (function (t) {
              const e = t.getConfig('realTimeData', (t) => {
                let { realTimeData: n } = t;
                n.dataProviders
                  ? (e(),
                    (p = n),
                    (y = n.dataProviders),
                    R(),
                    (0, a.Yn)('startAuction').before(b, 20),
                    u.Ay.callDataDeletionRequest.before(q),
                    I())
                  : (0, i.logError)('missing parameters for real time module');
              });
            })(r.$W),
            (0, o.E)('rtdModule');
        },
      },
      (t) => {
        t.O(0, [45881, 60802, 51085], () => {
          return (e = 25330), t((t.s = e));
          var e;
        });
        t.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [62711],
      {
        99293: (e, t, r) => {
          var i = r(7873),
            n = r(89766),
            o = r(34610),
            s = r(57377),
            a = r(43272),
            d = r(71371),
            c = r(15901),
            p = r(95789),
            u = r(91069),
            l = r(63172),
            m = r(70433),
            g = r(28656);
          const b = 'https://video-outstream.rubiconproject.com/apex-2.2.1.js';
          let f = a.$W.getConfig('rubicon') || {};
          a.$W.getConfig('rubicon', (e) => {
            (0, u.mergeDeep)(f, e.rubicon);
          });
          var x = {
            1: '468x60',
            2: '728x90',
            5: '120x90',
            7: '125x125',
            8: '120x600',
            9: '160x600',
            10: '300x600',
            13: '200x200',
            14: '250x250',
            15: '300x250',
            16: '336x280',
            17: '240x400',
            19: '300x100',
            31: '980x120',
            32: '250x360',
            33: '180x500',
            35: '980x150',
            37: '468x400',
            38: '930x180',
            39: '750x100',
            40: '750x200',
            41: '750x300',
            42: '2x4',
            43: '320x50',
            44: '300x50',
            48: '300x300',
            53: '1024x768',
            54: '300x1050',
            55: '970x90',
            57: '970x250',
            58: '1000x90',
            59: '320x80',
            60: '320x150',
            61: '1000x1000',
            64: '580x500',
            65: '640x480',
            66: '930x600',
            67: '320x480',
            68: '1800x1000',
            72: '320x320',
            73: '320x160',
            78: '980x240',
            79: '980x300',
            80: '980x400',
            83: '480x300',
            85: '300x120',
            90: '548x150',
            94: '970x310',
            95: '970x100',
            96: '970x210',
            101: '480x320',
            102: '768x1024',
            103: '480x280',
            105: '250x800',
            108: '320x240',
            113: '1000x300',
            117: '320x100',
            125: '800x250',
            126: '200x600',
            144: '980x600',
            145: '980x150',
            152: '1000x250',
            156: '640x320',
            159: '320x250',
            179: '250x600',
            195: '600x300',
            198: '640x360',
            199: '640x200',
            213: '1030x590',
            214: '980x360',
            221: '1x1',
            229: '320x180',
            230: '2000x1400',
            232: '580x400',
            234: '6x6',
            251: '2x2',
            256: '480x820',
            257: '400x600',
            258: '500x200',
            259: '998x200',
            261: '480x480',
            264: '970x1000',
            265: '1920x1080',
            274: '1800x200',
            278: '320x500',
            282: '320x400',
            288: '640x380',
            484: '720x1280',
            524: '1x2',
            548: '500x1000',
            550: '980x480',
            552: '300x200',
            558: '640x640',
            562: '300x431',
            564: '320x431',
            566: '320x300',
            568: '300x150',
            570: '300x125',
            572: '250x350',
            574: '620x891',
            576: '610x877',
            578: '980x552',
            580: '505x656',
            622: '192x160',
            632: '1200x450',
            634: '340x450',
          };
          (0, u._each)(x, (e, t) => (x[e] = t));
          const y = (0, n.A)({
              request(e, t, r, n) {
                const { bidRequests: o } = n,
                  s = e(t, r, n);
                var d;
                (s.cur = ['USD']),
                  (s.test = a.$W.getConfig('debug') ? 1 : 0),
                  (0, l.J)(s, 'ext.prebid.cache', {
                    vastxml: { returnCreative: !0 === f.returnVast },
                  }),
                  (0, l.J)(s, 'ext.prebid.bidders', {
                    rubicon: { integration: f.int_type || 'pbjs' },
                  }),
                  (0, l.J)(s, 'ext.prebid.targeting.pricegranularity', {
                    ranges: {
                      low: [{ max: 5, increment: 0.5 }],
                      medium: [{ max: 20, increment: 0.1 }],
                      high: [{ max: 20, increment: 0.01 }],
                      auto: [
                        { max: 5, increment: 0.05 },
                        { min: 5, max: 10, increment: 0.1 },
                        { min: 10, max: 20, increment: 0.5 },
                      ],
                      dense: [
                        { max: 3, increment: 0.01 },
                        { min: 3, max: 8, increment: 0.05 },
                        { min: 8, max: 20, increment: 0.5 },
                      ],
                      custom:
                        (d = a.$W).getConfig('customPriceBucket') &&
                        d.getConfig('customPriceBucket').buckets,
                    }[d.getConfig('priceGranularity')],
                  });
                let c = (0, i.m)().installedModules;
                !c ||
                  (c.length && -1 === c.indexOf('rubiconAnalyticsAdapter')) ||
                  (0, l.J)(s, 'ext.prebid.analytics', {
                    rubicon: { 'client-analytics': !0 },
                  }),
                  (function (e, t, r) {
                    let i = {};
                    const n = (0, g.D)(r, ...t.map((e) => e.params.keywords));
                    t.forEach((t) => {
                      const r = {
                          user: { ext: { data: { ...t.params.visitor } } },
                          site: { ext: { data: { ...t.params.inventory } } },
                        },
                        n = e.imp.find(
                          (e) =>
                            e.ext?.prebid?.bidder?.rubicon?.video?.language,
                        );
                      n &&
                        (r.site.content = {
                          language:
                            n.ext?.prebid?.bidder?.rubicon?.video?.language,
                        }),
                        (i = (0, u.mergeDeep)(i, t.ortb2 || {}, r));
                      const o = a.$W.getConfig('user.id');
                      i.user.id = i.user.id || o;
                    }),
                      (0, u.mergeDeep)(e, i),
                      n &&
                        n.length &&
                        (0, l.J)(e, 'site.keywords', n.join(','));
                    delete e?.ext?.prebid?.storedrequest;
                  })(s, o, r.ortb2),
                  delete s?.ext?.prebid?.storedrequest,
                  !0 === f.disableFloors && delete s.ext.prebid.floors;
                return (
                  o.filter((e) => 'object' == typeof e.floorData).length > 0 &&
                    (s.ext.prebid.floors = { enabled: !1 }),
                  s
                );
              },
              imp(e, t, r) {
                const i = k(t);
                if (i.includes(d.D4) && 1 == i.length) return;
                const n = e(t, r);
                return (
                  (n.id = t.adUnitCode),
                  delete n.banner,
                  'atf' === t.params.position && n.video && (n.video.pos = 1),
                  'btf' === t.params.position && n.video && (n.video.pos = 3),
                  delete n.ext?.prebid?.storedrequest,
                  !0 === t.params.bidonmultiformat &&
                    i.length > 1 &&
                    (0, l.J)(n, 'ext.prebid.bidder.rubicon.formats', i),
                  (function (e, t) {
                    'USD' != t.bidfloorcur &&
                      (delete t.bidfloor, delete t.bidfloorcur);
                    if (!t.bidfloor) {
                      let r = parseFloat((0, m.A)(e, 'params.floor'));
                      isNaN(r) || ((t.bidfloor = r), (t.bidfloorcur = 'USD'));
                    }
                  })(t, n),
                  n
                );
              },
              bidResponse(e, t, r) {
                const i = e(t, r);
                i.meta.mediaType = (0, m.A)(t, 'ext.prebid.type');
                const { bidRequest: n } = r;
                let [o, s] =
                  'outstream' === n.mediaTypes.video?.context
                    ? A(n, d.G_)
                    : [void 0, void 0];
                return (
                  (i.width = t.w || o || i.playerWidth),
                  (i.height = t.h || s || i.playerHeight),
                  i.mediaType === d.G_ &&
                    'outstream' === n.mediaTypes.video.context &&
                    (i.renderer = (function (e) {
                      const t = p.A4.install({
                        id: e.adId,
                        url: f.rendererUrl || b,
                        config: f.rendererConfig || {},
                        loaded: !1,
                        adUnitCode: e.adUnitCode,
                      });
                      try {
                        t.setRender(v);
                      } catch (e) {
                        (0, u.logWarn)(
                          'Prebid Error calling setRender on renderer',
                          e,
                        );
                      }
                      return t;
                    })(i)),
                  (0, m.A)(t, 'ext.bidder.rp.advid') &&
                    (0, l.J)(i, 'meta.advertiserId', t.ext.bidder.rp.advid),
                  i
                );
              },
              context: { netRevenue: !1 !== f.netRevenue, ttl: 360 },
              processors: o.m,
            }),
            _ = {
              code: 'rubicon',
              gvlid: 52,
              supportedMediaTypes: [d.D4, d.G_, d.s6],
              isBidRequestValid: function (e) {
                let t = !0;
                if ('object' != typeof e.params) return !1;
                for (
                  let t = 0, r = ['accountId', 'siteId', 'zoneId'];
                  t < r.length;
                  t++
                )
                  if (
                    ((e.params[r[t]] = parseInt(e.params[r[t]])),
                    isNaN(e.params[r[t]]))
                  )
                    return (
                      (0, u.logError)(
                        'Rubicon: wrong format of accountId or siteId or zoneId.',
                      ),
                      !1
                    );
                let r = k(e, !0);
                if (!r.length) return !1;
                r.includes(d.G_) &&
                  (t = (function (e) {
                    let t = !0,
                      r = Object.prototype.toString.call([]),
                      i = Object.prototype.toString.call(0);
                    var n = { mimes: r, protocols: r, linearity: i };
                    return (
                      Object.keys(n).forEach(function (r) {
                        Object.prototype.toString.call(
                          (0, m.A)(e, 'mediaTypes.video.' + r),
                        ) !== n[r] &&
                          ((t = !1),
                          (0, u.logError)(
                            'Rubicon: mediaTypes.video.' +
                              r +
                              ' is required and must be of type: ' +
                              n[r],
                          ));
                      }),
                      t
                    );
                  })(e));
                const i = [d.D4, d.s6].filter((e) => r.includes(e)).length > 0;
                return i ? t && i : t;
              },
              buildRequests: function (e, t) {
                let r,
                  i = [],
                  n = [];
                if (
                  ((r = e.filter((e) => {
                    const t = k(e) || [],
                      { length: r } = t,
                      { bidonmultiformat: i, video: n } = e.params || {};
                    return (
                      (1 === r && (t.includes(d.G_) || t.includes(d.s6))) ||
                      (2 === r && !t.includes(d.D4)) ||
                      (n && t.includes(d.G_)) ||
                      (i && (t.includes(d.G_) || t.includes(d.s6)))
                    );
                  })),
                  r && r.length)
                ) {
                  const e = y.toORTB({ bidRequests: r, bidderRequest: t });
                  n.push({
                    method: 'POST',
                    url: `https://${
                      f.videoHost || 'prebid-server'
                    }.rubiconproject.com/openrtb2/auction`,
                    data: e,
                    bidRequest: r,
                  });
                }
                const o = e.filter((e) => {
                  const t = k(e) || [],
                    { bidonmultiformat: r, video: i } = e.params || {};
                  return (
                    t.includes(d.D4) &&
                    (1 === t.length ||
                      r ||
                      (!r && !i) ||
                      (!r && i && !t.includes(d.G_)))
                  );
                });
                if (!0 !== f.singleRequest)
                  i = n.concat(
                    o.map((e) => {
                      const r = _.createSlotParams(e, t);
                      return {
                        method: 'GET',
                        url: `https://${
                          f.bannerHost || 'fastlane'
                        }.rubiconproject.com/a/api/fastlane.json`,
                        data:
                          _.getOrderedParams(r).reduce((e, t) => {
                            const i = r[t];
                            return ((0, u.isStr)(i) && '' !== i) ||
                              (0, u.isNumber)(i)
                              ? `${e}${I(t, i)}&`
                              : e;
                          }, '') + `slots=1&rand=${Math.random()}`,
                        bidRequest: e,
                      };
                    }),
                  );
                else {
                  const e = o.reduce(
                      (e, t) => (
                        (e[t.params.siteId] = e[t.params.siteId] || []).push(t),
                        e
                      ),
                      {},
                    ),
                    r = 10;
                  i = n.concat(
                    Object.keys(e).reduce((i, n) => {
                      var o, s;
                      return (
                        ((o = e[n]),
                        (s = r),
                        o
                          .map((e, t) =>
                            t % s == 0 ? o.slice(t, t + s) : null,
                          )
                          .filter((e) => e)).forEach((e) => {
                          const r = _.combineSlotUrlParams(
                            e.map((e) => _.createSlotParams(e, t)),
                          );
                          i.push({
                            method: 'GET',
                            url: `https://${
                              f.bannerHost || 'fastlane'
                            }.rubiconproject.com/a/api/fastlane.json`,
                            data:
                              _.getOrderedParams(r).reduce((e, t) => {
                                const i = r[t];
                                return ((0, u.isStr)(i) && '' !== i) ||
                                  (0, u.isNumber)(i)
                                  ? `${e}${I(t, i)}&`
                                  : e;
                              }, '') +
                              `slots=${e.length}&rand=${Math.random()}`,
                            bidRequest: e,
                          });
                        }),
                        i
                      );
                    }, []),
                  );
                }
                return i;
              },
              getOrderedParams: function (e) {
                const t = /^tg_v/,
                  r = /^tg_i/,
                  i = /^eid_|^tpid_/,
                  n = [
                    'account_id',
                    'site_id',
                    'zone_id',
                    'size_id',
                    'alt_size_ids',
                    'p_pos',
                    'gdpr',
                    'gdpr_consent',
                    'us_privacy',
                    'gpp',
                    'gpp_sid',
                    'rp_schain',
                  ]
                    .concat(Object.keys(e).filter((e) => i.test(e)))
                    .concat([
                      'x_liverampidl',
                      'ppuid',
                      'rf',
                      'p_geo.latitude',
                      'p_geo.longitude',
                      'kw',
                    ])
                    .concat(Object.keys(e).filter((e) => t.test(e)))
                    .concat(Object.keys(e).filter((e) => r.test(e)))
                    .concat([
                      'tk_flint',
                      'x_source.tid',
                      'l_pb_bid_id',
                      'p_screen_res',
                      'o_ae',
                      'o_cdep',
                      'rp_floor',
                      'rp_secure',
                      'tk_user_key',
                    ]);
                return n.concat(
                  Object.keys(e).filter((e) => -1 === n.indexOf(e)),
                );
              },
              combineSlotUrlParams: function (e) {
                if (1 === e.length) return e[0];
                const t = e.reduce(function (t, r, i) {
                    return (
                      Object.keys(r).forEach(function (n) {
                        t.hasOwnProperty(n) || (t[n] = new Array(e.length)),
                          t[n].splice(i, 1, r[n]);
                      }),
                      t
                    );
                  }, {}),
                  r = new RegExp('^([^;]*)(;\\1)+$');
                return (
                  Object.keys(t).forEach(function (e) {
                    const i = t[e].join(';'),
                      n = i.match(r);
                    t[e] = n ? n[1] : i;
                  }),
                  t
                );
              },
              createSlotParams: function (e, t) {
                e.startTime = new Date().getTime();
                const r = e.params,
                  i = A(e, 'banner'),
                  [n, o] = r.latLong || [],
                  s = {
                    account_id: r.accountId,
                    site_id: r.siteId,
                    zone_id: r.zoneId,
                    size_id: i[0],
                    alt_size_ids: i.slice(1).join(',') || void 0,
                    rp_floor:
                      (r.floor = parseFloat(r.floor)) >= 0.01
                        ? r.floor
                        : void 0,
                    rp_secure: '1',
                    tk_flint: `${f.int_type || 'pbjs_lite'}_v9.0.0`,
                    'x_source.tid': t.ortb2?.source?.tid,
                    'x_imp.ext.tid': e.ortb2Imp?.ext?.tid,
                    l_pb_bid_id: e.bidId,
                    o_cdep: e.ortb2?.device?.ext?.cdep,
                    p_screen_res: [
                      window.screen.width,
                      window.screen.height,
                    ].join('x'),
                    tk_user_key: r.userId,
                    'p_geo.latitude': isNaN(parseFloat(n))
                      ? void 0
                      : parseFloat(n).toFixed(4),
                    'p_geo.longitude': isNaN(parseFloat(o))
                      ? void 0
                      : parseFloat(o).toFixed(4),
                    'tg_fl.eid': e.code,
                    rf: h(e, t),
                  };
                if ('function' == typeof e.getFloor && !f.disableFloors) {
                  let t;
                  try {
                    t = e.getFloor({
                      currency: 'USD',
                      mediaType: 'banner',
                      size: '*',
                    });
                  } catch (e) {
                    (0, u.logError)('Rubicon: getFloor threw an error: ', e);
                  }
                  s.rp_hard_floor =
                    'object' != typeof t ||
                    'USD' !== t.currency ||
                    isNaN(parseInt(t.floor))
                      ? void 0
                      : t.floor;
                }
                !0 === r.bidonmultiformat &&
                  (0, m.A)(e, 'mediaTypes') &&
                  Object.keys(e.mediaTypes).length > 1 &&
                  (s.p_formats = Object.keys(e.mediaTypes).join(','));
                let p =
                  { 1: 'atf', 3: 'btf' }[
                    (0, m.A)(e, 'mediaTypes.banner.pos')
                  ] || '';
                s.p_pos =
                  'atf' === r.position || 'btf' === r.position ? r.position : p;
                const l = a.$W.getConfig('user.id');
                return (
                  l && (s.ppuid = l),
                  e?.ortb2Imp?.ext?.ae && (s.o_ae = 1),
                  (function (e, t) {
                    if (!1 === f.readTopics) return;
                    let r = [1, 2, 5, 6, 7, 507].concat(
                        f.sendSiteSegtax?.map((e) => Number(e)) || [],
                      ),
                      i = [4, 508].concat(
                        f.sendUserSegtax?.map((e) => Number(e)) || [],
                      ),
                      n = e.ortb2?.user?.data || [],
                      o = e.ortb2?.site?.content?.data || [];
                    n.forEach(j(t, 'v', i)), o.forEach(j(t, 'i', r));
                  })(t, s),
                  e.userIdAsEids &&
                    e.userIdAsEids.forEach((e) => {
                      try {
                        if ('adserver.org' === e.source)
                          (s.tpid_tdid = e.uids[0].id),
                            (s['eid_adserver.org'] = e.uids[0].id);
                        else if ('liveintent.com' === e.source)
                          (s['tpid_liveintent.com'] = e.uids[0].id),
                            (s['eid_liveintent.com'] = e.uids[0].id),
                            e.ext &&
                              Array.isArray(e.ext.segments) &&
                              e.ext.segments.length &&
                              (s['tg_v.LIseg'] = e.ext.segments.join(','));
                        else if ('liveramp.com' === e.source)
                          s.x_liverampidl = e.uids[0].id;
                        else if ('id5-sync.com' === e.source)
                          s['eid_id5-sync.com'] = `${e.uids[0].id}^${
                            e.uids[0].atype
                          }^${(e.uids[0].ext && e.uids[0].ext.linkType) || ''}`;
                        else {
                          const t =
                            'rubiconproject.com' === e.source
                              ? e.uids[0].id
                              : `${e.uids[0].id}^${e.uids[0].atype || ''}`;
                          s[`eid_${e.source}`] = t;
                        }
                        if (!s.ppuid) {
                          const t = (0, c.I6)(
                            e.uids,
                            (e) => e.ext && 'ppuid' === e.ext.stype,
                          );
                          t && t.id && (s.ppuid = t.id);
                        }
                      } catch (t) {
                        (0, u.logWarn)('Rubicon: error reading eid:', e, t);
                      }
                    }),
                  t.gdprConsent &&
                    ('boolean' == typeof t.gdprConsent.gdprApplies &&
                      (s.gdpr = Number(t.gdprConsent.gdprApplies)),
                    (s.gdpr_consent = t.gdprConsent.consentString)),
                  t.uspConsent &&
                    (s.us_privacy = encodeURIComponent(t.uspConsent)),
                  t.gppConsent?.gppString &&
                    ((s.gpp = t.gppConsent.gppString),
                    (s.gpp_sid = t.gppConsent?.applicableSections?.toString())),
                  (s.rp_maxbids = t.bidLimit || 1),
                  (function (e, t, r) {
                    const i = {
                      user: { ext: { data: { ...e.params.visitor } } },
                      site: { ext: { data: { ...e.params.inventory } } },
                    };
                    e.params.keywords &&
                      (i.site.keywords = (0, u.isArray)(e.params.keywords)
                        ? e.params.keywords.join(',')
                        : e.params.keywords);
                    let n = (0, u.mergeDeep)({}, e.ortb2 || {}, i),
                      o = (0, m.A)(e.ortb2Imp, 'ext') || {},
                      s = (0, m.A)(e.ortb2Imp, 'ext.data') || {};
                    const a = (0, m.A)(e, 'ortb2Imp.ext.gpid'),
                      c = (0, m.A)(n, 'regs.ext.dsa'),
                      p = { user: [4], site: [1, 2, 5, 6] },
                      l = {
                        user: 'tg_v.',
                        site: 'tg_i.',
                        adserver: 'tg_i.dfp_ad_unit_code',
                        pbadslot: 'tg_i.pbadslot',
                        keywords: 'kw',
                      },
                      g = function (e, t, r) {
                        return 'data' === t && Array.isArray(e)
                          ? e
                              .filter(
                                (e) =>
                                  e.segment &&
                                  (0, m.A)(e, 'ext.segtax') &&
                                  p[r] &&
                                  -1 !==
                                    p[r].indexOf((0, m.A)(e, 'ext.segtax')),
                              )
                              .map((e) => {
                                let t = e.segment
                                  .filter((e) => e.id)
                                  .reduce((e, t) => (e.push(t.id), e), []);
                                if (t.length > 0) return t.toString();
                              })
                              .toString()
                          : ('object' != typeof e || Array.isArray(e)) &&
                              void 0 !== e
                            ? Array.isArray(e)
                              ? e
                                  .filter((e) => {
                                    if ('object' != typeof e && void 0 !== e)
                                      return e.toString();
                                    (0, u.logWarn)(
                                      'Rubicon: Filtered value: ',
                                      e,
                                      'for key',
                                      t,
                                      ': Expected value to be string, integer, or an array of strings/ints',
                                    );
                                  })
                                  .toString()
                              : e.toString()
                            : void 0;
                      },
                      b = function (e, t, i) {
                        let n =
                            !(
                              arguments.length > 3 && void 0 !== arguments[3]
                            ) || arguments[3],
                          o = g(e, i, t),
                          s =
                            l[i] && n
                              ? `${l[i]}`
                              : 'data' === i
                                ? `${l[t]}iab`
                                : `${l[t]}${i}`;
                        r[s] = r[s] ? r[s].concat(',', o) : o;
                      };
                    if (t === d.D4) {
                      ['site', 'user'].forEach((e) => {
                        Object.keys(n[e]).forEach((t) => {
                          'site' === e && 'content' === t && n[e][t].data
                            ? b(n[e][t].data, e, 'data')
                            : 'ext' !== t
                              ? b(n[e][t], e, t)
                              : n[e][t].data &&
                                Object.keys(n[e].ext.data).forEach((t) => {
                                  b(n[e].ext.data[t], e, t, !1);
                                });
                        });
                      }),
                        Object.keys(s).forEach((e) => {
                          'adserver' !== e
                            ? b(s[e], 'site', e)
                            : 'gam' === s[e].name && b(s[e].adslot, name, e);
                        }),
                        a && (r.p_gpid = a),
                        c &&
                          Object.keys(c).length &&
                          (0, u.pick)(c, [
                            'dsainfo',
                            (e) => (r.dsainfo = e),
                            'dsarequired',
                            (e) => (r.dsarequired = e),
                            'pubrender',
                            (e) => (r.dsapubrender = e),
                            'datatopub',
                            (e) => (r.dsadatatopubs = e),
                            'transparency',
                            (e) => {
                              Array.isArray(e) &&
                                e.length &&
                                (r.dsatransparency = e.reduce((e, t) => {
                                  const r = t.domain || '';
                                  if (!r) return e;
                                  const i = t.dsaparams || t.params;
                                  return Array.isArray(i) && 0 !== i.length
                                    ? (e && (e += '~~'),
                                      e + `${r}~${i.join('_')}`)
                                    : e;
                                }, ''));
                            },
                          ]),
                        r['tg_i.pbadslot'] && delete r['tg_i.dfp_ad_unit_code'];
                      const e = (0, m.A)(n, 'device.sua');
                      e &&
                        !1 !== f.chEnabled &&
                        (0, u.pick)(e, [
                          'architecture',
                          (e) => (r.m_ch_arch = e),
                          'bitness',
                          (e) => (r.m_ch_bitness = e),
                          'browsers',
                          (e) => {
                            if (!Array.isArray(e)) return;
                            const [t, i] = e.reduce(
                              (e, t) => (
                                e[0].push(
                                  `"${t?.brand}"|v="${t?.version?.[0]}"`,
                                ),
                                e[1].push(
                                  `"${t?.brand}"|v="${t?.version?.join?.(
                                    '.',
                                  )}"`,
                                ),
                                e
                              ),
                              [[], []],
                            );
                            (r.m_ch_ua = t?.join?.(',')),
                              (r.m_ch_full_ver = i?.join?.(','));
                          },
                          'mobile',
                          (e) => (r.m_ch_mobile = `?${e}`),
                          'model',
                          (e) => (r.m_ch_model = e),
                          'platform',
                          (e) => {
                            (r.m_ch_platform = e?.brand),
                              (r.m_ch_platform_ver = e?.version?.join?.('.'));
                          },
                        ]);
                    } else
                      Object.keys(o).length &&
                        (0, u.mergeDeep)(r.imp[0].ext, o),
                        a && (r.imp[0].ext.gpid = a),
                        (0, u.mergeDeep)(r, n);
                  })(e, d.D4, s),
                  !0 === a.$W.getConfig('coppa') && (s.coppa = 1),
                  e.schain &&
                    S(e.schain) &&
                    (s.rp_schain = _.serializeSupplyChain(e.schain)),
                  s
                );
              },
              serializeSupplyChain: function (e) {
                if (!S(e)) return '';
                const { ver: t, complete: r, nodes: i } = e;
                return `${t},${r}!${_.serializeSupplyChainNodes(i)}`;
              },
              serializeSupplyChainNodes: function (e) {
                const t = ['asi', 'sid', 'hp', 'rid', 'name', 'domain'];
                return e
                  .map((e) =>
                    t.map((t) => encodeURIComponent(e[t] || '')).join(','),
                  )
                  .join('!');
              },
              interpretResponse: function (e, t) {
                e = e.body;
                const { data: r } = t;
                if (!e || 'object' != typeof e) return [];
                if (e.seatbid) {
                  const t = (0, m.A)(e, 'ext.errors.rubicon');
                  Array.isArray(t) &&
                    t.length > 0 &&
                    (0, u.logWarn)('Rubicon: Error in video response');
                  return y.fromORTB({ request: r, response: e }).bids;
                }
                let i,
                  n = e.ads,
                  o = 0;
                const { bidRequest: s } = t;
                if (
                  ('object' == typeof s &&
                    !Array.isArray(s) &&
                    k(s).includes(d.G_) &&
                    'object' == typeof n &&
                    (n = n[s.adUnitCode]),
                  !Array.isArray(n) || n.length < 1)
                )
                  return [];
                let a = n
                    .reduce((t, r, n) => {
                      if (
                        (r.impression_id && i === r.impression_id
                          ? o++
                          : (i = r.impression_id),
                        'ok' !== r.status)
                      )
                        return t;
                      const a = Array.isArray(s) ? s[n - o] : s;
                      if (a && 'object' == typeof a) {
                        let e = {
                          requestId: a.bidId,
                          currency: 'USD',
                          creativeId:
                            r.creative_id ||
                            `${r.network || ''}-${r.advertiser || ''}`,
                          cpm: r.cpm || 0,
                          dealId: r.deal,
                          ttl: 360,
                          netRevenue: !1 !== f.netRevenue,
                          rubicon: {
                            advertiserId: r.advertiser,
                            networkId: r.network,
                          },
                          meta: {
                            advertiserId: r.advertiser,
                            networkId: r.network,
                            mediaType: d.D4,
                          },
                        };
                        r.creative_type && (e.mediaType = r.creative_type),
                          r.dsa &&
                            Object.keys(r.dsa).length &&
                            (e.meta.dsa = r.dsa),
                          r.adomain &&
                            (e.meta.advertiserDomains = Array.isArray(r.adomain)
                              ? r.adomain
                              : [r.adomain]),
                          r.creative_type === d.G_
                            ? ((e.width = a.params.video.playerWidth),
                              (e.height = a.params.video.playerHeight),
                              (e.vastUrl = r.creative_depot_url),
                              (e.impression_id = r.impression_id),
                              (e.videoCacheKey = r.impression_id))
                            : ((e.ad =
                                ((c = r.script),
                                `<html>\n<head><script type='text/javascript'>inDapIF=true;<\/script></head>\n<body style='margin : 0; padding: 0;'>\n\x3c!-- Rubicon Project Ad Tag --\x3e\n<div data-rp-impression-id='${r.impression_id}'>\n<script type='text/javascript'>${c}<\/script>\n</div>\n</body>\n</html>`)),
                              ([e.width, e.height] = x[r.size_id]
                                .split('x')
                                .map((e) => Number(e)))),
                          (e.rubiconTargeting = (
                            Array.isArray(r.targeting) ? r.targeting : []
                          ).reduce((e, t) => ((e[t.key] = t.values[0]), e), {
                            rpfl_elemid: a.adUnitCode,
                          })),
                          t.push(e);
                      } else
                        (0, u.logError)(
                          `Rubicon: bidRequest undefined at index position:${n}`,
                          s,
                          e,
                        );
                      var c;
                      return t;
                    }, [])
                    .sort((e, t) => (t.cpm || 0) - (e.cpm || 0)),
                  c = e.component_auction_config?.map((e) => ({
                    config: e,
                    bidId: e.bidId,
                  }));
                return c ? { bids: a, paapi: c } : a;
              },
              getUserSyncs: function (e, t, r, i, n) {
                if (!R && e.iframeEnabled) {
                  let e = {};
                  return (
                    r &&
                      ('boolean' == typeof r.gdprApplies &&
                        (e.gdpr = Number(r.gdprApplies)),
                      'string' == typeof r.consentString &&
                        (e.gdpr_consent = r.consentString)),
                    i && (e.us_privacy = encodeURIComponent(i)),
                    n?.gppString &&
                      ((e.gpp = n.gppString),
                      (e.gpp_sid = n.applicableSections?.toString())),
                    (e = Object.keys(e).length ? `?${(0, u.formatQS)(e)}` : ''),
                    (R = !0),
                    {
                      type: 'iframe',
                      url:
                        `https://${
                          f.syncHost || 'eus'
                        }.rubiconproject.com/usync.html` + e,
                    }
                  );
                }
              },
            };
          function h(e, t) {
            let r;
            return (
              (r = e.params.referrer ? e.params.referrer : t.refererInfo.page),
              e.params.secure ? r.replace(/^http:/i, 'https:') : r
            );
          }
          function v(e) {
            const t = document.getElementById(e.adUnitCode);
            !(function (e) {
              const t = e.querySelector("div[id^='google_ads']");
              t && t.style.setProperty('display', 'none');
            })(t),
              (function (e) {
                const t = e.querySelector("script[id^='sas_script']"),
                  r = t && t.nextSibling;
                r &&
                  'iframe' === r.localName &&
                  r.style.setProperty('display', 'none');
              })(t);
            const r = {
              ...{
                align: 'center',
                position: 'append',
                closeButton: !1,
                label: void 0,
                collapse: !0,
              },
              ...e.renderer.getConfig(),
            };
            e.renderer.push(() => {
              window.MagniteApex.renderAd({
                width: e.width,
                height: e.height,
                vastUrl: e.vastUrl,
                placement: {
                  attachTo: t,
                  align: r.align,
                  position: r.position,
                },
                closeButton: r.closeButton,
                label: r.label,
                collapse: r.collapse,
              });
            });
          }
          function A(e, t) {
            let r = e.params;
            if (t === d.G_) {
              let t = [];
              return (
                r.video && r.video.playerWidth && r.video.playerHeight
                  ? (t = [r.video.playerWidth, r.video.playerHeight])
                  : Array.isArray((0, m.A)(e, 'mediaTypes.video.playerSize')) &&
                      1 === e.mediaTypes.video.playerSize.length
                    ? (t = e.mediaTypes.video.playerSize[0])
                    : Array.isArray(e.sizes) &&
                      e.sizes.length > 0 &&
                      Array.isArray(e.sizes[0]) &&
                      e.sizes[0].length > 1 &&
                      (t = e.sizes[0]),
                t
              );
            }
            let i = [];
            return (
              Array.isArray(r.sizes)
                ? (i = r.sizes)
                : void 0 !== (0, m.A)(e, 'mediaTypes.banner.sizes')
                  ? (i = $(e.mediaTypes.banner.sizes))
                  : Array.isArray(e.sizes) && e.sizes.length > 0
                    ? (i = $(e.sizes))
                    : (0, u.logWarn)('Rubicon: no sizes are setup or found'),
              (function (e) {
                const t = [15, 2, 9];
                return e.sort((e, r) => {
                  const i = t.indexOf(e),
                    n = t.indexOf(r);
                  return i > -1 || n > -1
                    ? -1 === i
                      ? 1
                      : -1 === n
                        ? -1
                        : i - n
                    : e - r;
                });
              })(i)
            );
          }
          function j(e, t, r) {
            return (i) => {
              const n = Number(i.ext?.segtax);
              r.includes(n) &&
                (e[`tg_${t}.tax${n}`] = i.segment?.map((e) => e.id).join(','));
            };
          }
          function $(e) {
            return (0, u.parseSizesInput)(e).reduce((e, t) => {
              let r = parseInt(x[t], 10);
              return r && e.push(r), e;
            }, []);
          }
          function k(e) {
            let t =
                arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
              r = [];
            if (
              (function (e) {
                let t = void 0 !== (0, m.A)(e, `mediaTypes.${d.G_}`),
                  r = void 0 !== (0, m.A)(e, `mediaTypes.${d.D4}`),
                  i = void 0 !== (0, m.A)(e, 'params.bidonmultiformat'),
                  n = 'object' != typeof (0, m.A)(e, 'params.video');
                return (
                  !(!t || !i) ||
                  (r && n && (t = !1),
                  t && n && (0, l.J)(e, 'params.video', {}),
                  t)
                );
              })(e)
            ) {
              if (
                -1 ===
                ['outstream', 'instream'].indexOf(
                  (0, m.A)(e, `mediaTypes.${d.G_}.context`),
                )
              )
                return (
                  t &&
                    (0, u.logError)(
                      'Rubicon: mediaTypes.video.context must be outstream or instream',
                    ),
                  r
                );
              if (A(e, d.G_).length < 2)
                return (
                  t &&
                    (0, u.logError)(
                      'Rubicon: could not determine the playerSize of the video',
                    ),
                  r
                );
              t &&
                (0, u.logMessage)(
                  'Rubicon: making video request for adUnit',
                  e.adUnitCode,
                ),
                r.push(d.G_);
            }
            if (
              (void 0 !== (0, m.A)(e, `mediaTypes.${d.s6}`) && r.push(d.s6),
              void 0 !== (0, m.A)(e, `mediaTypes.${d.D4}`))
            ) {
              if (0 === A(e, d.D4).length)
                return (
                  t &&
                    (0, u.logError)(
                      'Rubicon: could not determine the sizes for banner request',
                    ),
                  r
                );
              t &&
                (0, u.logMessage)(
                  'Rubicon: making banner request for adUnit',
                  e.adUnitCode,
                ),
                r.push(d.D4);
            }
            return r;
          }
          function S(e) {
            let t = !1;
            const r = ['asi', 'sid', 'hp'];
            return e.nodes
              ? ((t = e.nodes.reduce(
                  (e, t) => (e ? r.every((e) => t.hasOwnProperty(e)) : e),
                  !0,
                )),
                t || (0, u.logError)('Rubicon: required schain params missing'),
                t)
              : t;
          }
          function I(e, t) {
            return 'rp_schain' === e
              ? `rp_schain=${t}`
              : `${e}=${encodeURIComponent(t)}`;
          }
          var R = !1;
          (0, s.a$)(_), (0, i.E)('rubiconBidAdapter');
        },
      },
      (e) => {
        e.O(0, [60802, 58498, 97247, 47618, 51085], () => {
          return (t = 99293), e((e.s = t));
          var t;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [45496],
      {
        25862: (e, o, t) => {
          var n = t(7873),
            r = t(91069),
            d = t(16833),
            i = t(16916),
            a = t(12938),
            u = t(45569),
            c = t(2339);
          const l = (0, a.vM)({ moduleType: u.fW, moduleName: 'sharedId' }),
            s = 'cookie',
            m = 'html5',
            f = '_pubcid_optout',
            g = 'PublisherCommonId';
          function p(e, o) {
            if (o === s) return l.getCookie(e);
            if (o === m && l.hasLocalStorage()) {
              const o = l.getDataFromLocalStorage(`${e}_exp`);
              if (!o) return l.getDataFromLocalStorage(e);
              if (new Date(o).getTime() - Date.now() > 0)
                return l.getDataFromLocalStorage(e);
            }
          }
          function I(e, o) {
            return function (t, n) {
              o
                ? b(o, e, () => {
                    t(n() || e);
                  })()
                : t(e);
            };
          }
          function b(e) {
            let o =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : '',
              t = arguments.length > 2 ? arguments[2] : void 0;
            if (!e) return;
            const n = (0, r.parseUrl)(e);
            n.search.id = encodeURIComponent('pubcid:' + o);
            const d = (0, r.buildUrl)(n);
            return function () {
              (0, r.triggerPixel)(d, t);
            };
          }
          function v() {
            return !!(
              (l.cookiesAreEnabled() && p(f, s)) ||
              (l.hasLocalStorage() && p(f, m))
            );
          }
          const h = {
            name: 'sharedId',
            aliasName: 'pubCommonId',
            gvlid: i.B1,
            decode(e, o) {
              if (v())
                return void (0, r.logInfo)('PubCommonId decode: Has opted-out');
              (0, r.logInfo)(' Decoded value PubCommonId ' + e);
              return { pubcid: e };
            },
            getId: function () {
              let e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                o = arguments.length > 2 ? arguments[2] : void 0;
              if (v()) return void (0, r.logInfo)('PubCommonId: Has opted-out');
              if (i.et.getCoppa())
                return void (0, r.logInfo)(
                  'PubCommonId: IDs not provided for coppa requests, exiting PubCommonId',
                );
              const { params: { create: t = !0, pixelUrl: n } = {} } = e;
              let d = o;
              if (!d) {
                try {
                  'object' == typeof window[g] && (d = window[g].getId());
                } catch (e) {}
                d ||
                  (d =
                    t && (0, r.hasDeviceAccess)()
                      ? (0, r.generateUUID)()
                      : void 0);
              }
              return { id: d, callback: I(d, n) };
            },
            extendId: function () {
              let e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                o = arguments.length > 2 ? arguments[2] : void 0;
              if (v())
                return (
                  (0, r.logInfo)('PubCommonId: Has opted-out'), { id: void 0 }
                );
              if (i.et.getCoppa())
                return void (0, r.logInfo)(
                  'PubCommonId: IDs not provided for coppa requests, exiting PubCommonId',
                );
              const { params: { extend: t = !1, pixelUrl: n } = {} } = e;
              if (t) {
                if (n) {
                  return { callback: b(n, o) };
                }
                return { id: o };
              }
            },
            domainOverride: (0, c.w)(l, 'sharedId'),
            eids: { pubcid: { source: 'pubcid.org', atype: 1 } },
          };
          (0, d.bz)('userId', h), (0, n.E)('sharedIdSystem');
        },
      },
      (e) => {
        e.O(0, [12764, 60802, 51085], () => {
          return (o = 25862), e((e.s = o));
          var o;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [11606],
      {
        52090: (e, i, n) => {
          var t = n(7873),
            r = n(91069),
            a = n(15901),
            d = n(16833),
            o = n(42627);
          const s = {
              checkBidderSizeConfigFormat: function (e) {
                let i = !0;
                Array.isArray(e) && e.length > 0
                  ? e.forEach((e) => {
                      const n = Object.keys(e);
                      i =
                        !!(
                          (0, a.mK)(n, 'minViewPort') &&
                          (0, a.mK)(n, 'relevantMediaTypes') &&
                          (0, r.isArrayOfNums)(e.minViewPort, 2) &&
                          Array.isArray(e.relevantMediaTypes) &&
                          e.relevantMediaTypes.length > 0 &&
                          (e.relevantMediaTypes.length > 1
                            ? e.relevantMediaTypes.every((e) =>
                                (0, a.mK)(['banner', 'video', 'native'], e),
                              )
                            : ['none', 'banner', 'video', 'native'].indexOf(
                                e.relevantMediaTypes[0],
                              ) > -1)
                        ) &&
                        i &&
                        !0;
                    })
                  : (i = !1);
                return i;
              },
              getActiveSizeBucket: c,
              getFilteredMediaTypes: function (e) {
                let i, n, t;
                t = (0, r.deepClone)(e);
                let a = { banner: void 0, video: void 0, native: void 0 };
                try {
                  (i = (0, r.getWindowTop)().innerWidth),
                    (n = (0, r.getWindowTop)().innerHeight);
                } catch (e) {
                  (0, r.logWarn)(
                    'SizeMappingv2:: Unfriendly iframe blocks viewport size to be evaluated correctly',
                  ),
                    (i = window.innerWidth),
                    (n = window.innerHeight);
                }
                const d = [i, n];
                Object.keys(e).map((i) => {
                  const n = e[i].sizeConfig;
                  if (n) {
                    a[i] = c(n, d);
                    const r = n.filter(
                      (e) =>
                        e.minViewPort === a[i] &&
                        (function (e, i) {
                          switch (e) {
                            case 'banner':
                              return (
                                i.sizes &&
                                i.sizes.length > 0 &&
                                i.sizes[0].length > 0
                              );
                            case 'video':
                              return (
                                i.playerSize &&
                                i.playerSize.length > 0 &&
                                i.playerSize[0].length > 0
                              );
                            case 'native':
                              return i.active;
                            default:
                              return !1;
                          }
                        })(i, e),
                    );
                    t[i] = Object.assign({ filteredSizeConfig: r }, e[i]);
                    const o = { banner: 'sizes', video: 'playerSize' };
                    t[i].filteredSizeConfig.length > 0
                      ? 'native' !== i &&
                        (t[i][o[i]] = t[i].filteredSizeConfig[0][o[i]])
                      : delete t[i];
                  }
                });
                return {
                  sizeBucketToSizeMap: Object.keys(a)
                    .filter((e) => void 0 !== a[e])
                    .reduce(
                      (e, i) => (
                        (e[i] = {
                          activeSizeBucket: a[i],
                          activeSizeDimensions:
                            'banner' === i
                              ? t.banner
                                ? t.banner.sizes
                                : []
                              : 'video' === i
                                ? t.video
                                  ? t.video.playerSize
                                  : []
                                : 'NA',
                        }),
                        e
                      ),
                      {},
                    ),
                  activeViewport: d,
                  transformedMediaTypes: t,
                };
              },
              getAdUnitDetail: function (e, i, n) {
                const t = s.isLabelActivated(e, i, e.code, n),
                  {
                    sizeBucketToSizeMap: a,
                    activeViewport: d,
                    transformedMediaTypes: o,
                  } = t && s.getFilteredMediaTypes(e.mediaTypes);
                return (
                  t &&
                    (0, r.logInfo)(
                      `Size Mapping V2:: Ad Unit: ${e.code}(${n}) => Active size buckets after filtration: `,
                      a,
                    ),
                  {
                    activeViewport: d,
                    transformedMediaTypes: o,
                    isLabelActivated: t,
                  }
                );
              },
              getRelevantMediaTypesForBidder: function (e, i) {
                const n = new Set();
                if (s.checkBidderSizeConfigFormat(e)) {
                  const t = s.getActiveSizeBucket(e, i);
                  e.filter(
                    (e) => e.minViewPort === t,
                  )[0].relevantMediaTypes.forEach((e) => n.add(e));
                }
                return n;
              },
              isLabelActivated: function (e, i, n, t) {
                let d;
                const o = Object.keys(e).filter(
                  (e) => 'labelAny' === e || 'labelAll' === e,
                );
                o &&
                  o.length > 1 &&
                  (0, r.logWarn)(
                    'Size Mapping V2:: ' +
                      (e.code
                        ? `Ad Unit: ${e.code}(${t}) => Ad unit has multiple label operators. Using the first declared operator: ${o[0]}`
                        : `Ad Unit: ${n}(${t}), Bidder: ${e.bidder} => Bidder has multiple label operators. Using the first declared operator: ${o[0]}`),
                  );
                if (((d = o[0]), d && !i))
                  return (
                    (0, r.logWarn)(
                      'Size Mapping V2:: ' +
                        (e.code
                          ? `Ad Unit: ${e.code}(${t}) => Found '${d}' on ad unit, but 'labels' is not set. Did you pass 'labels' to pbjs.requestBids() ?`
                          : `Ad Unit: ${n}(${t}), Bidder: ${e.bidder} => Found '${d}' on bidder, but 'labels' is not set. Did you pass 'labels' to pbjs.requestBids() ?`),
                    ),
                    !0
                  );
                if ('labelAll' === d && Array.isArray(e[d]))
                  return 0 === e.labelAll.length
                    ? ((0, r.logWarn)(
                        `Size Mapping V2:: Ad Unit: ${e.code}(${t}) => Ad unit has declared property 'labelAll' with an empty array.`,
                      ),
                      !0)
                    : e.labelAll.every((e) => (0, a.mK)(i, e));
                if ('labelAny' === d && Array.isArray(e[d]))
                  return 0 === e.labelAny.length
                    ? ((0, r.logWarn)(
                        `Size Mapping V2:: Ad Unit: ${e.code}(${t}) => Ad unit has declared property 'labelAny' with an empty array.`,
                      ),
                      !0)
                    : e.labelAny.some((e) => (0, a.mK)(i, e));
                return !0;
              },
            },
            l = new WeakMap();
          function p(e) {
            return !!e.find((e) => {
              if (l.has(e)) return l.get(e);
              if (e.mediaTypes) {
                for (let i of Object.keys(e.mediaTypes))
                  if (e.mediaTypes[i].sizeConfig) return l.set(e, !0), !0;
                for (let i of e.bids && (0, r.isArray)(e.bids) ? e.bids : [])
                  if (i.sizeConfig) return l.set(e, !0), !0;
                return l.set(e, !1), !1;
              }
            });
          }
          function c(e, i) {
            let n = [];
            return (
              e
                .sort((e, i) => e.minViewPort[0] - i.minViewPort[0])
                .forEach((e) => {
                  i[0] >= e.minViewPort[0] &&
                    (n = i[1] >= e.minViewPort[1] ? e.minViewPort : []);
                }),
              n
            );
          }
          (0, d.Yn)('checkAdUnitSetup').before(function (e, i) {
            return p(i)
              ? ((i = (function (e) {
                  const i = function (e, i, n) {
                      let t = !0;
                      const d = {
                          banner: 'sizes',
                          video: 'playerSize',
                          native: 'active',
                        }[e],
                        s = {
                          banner: 'Removing mediaTypes.banner from ad unit.',
                          video:
                            'Removing mediaTypes.video.sizeConfig from ad unit.',
                          native:
                            'Removing mediaTypes.native.sizeConfig from ad unit.',
                        };
                      return Array.isArray(i)
                        ? (i.forEach((i, l) => {
                            const p = Object.keys(i);
                            if (
                              !(0, a.mK)(p, 'minViewPort') ||
                              !(0, a.mK)(p, d)
                            )
                              return (
                                (0, r.logError)(
                                  `Ad unit ${n}: Missing required property 'minViewPort' or 'sizes' from 'mediaTypes.${e}.sizeConfig[${l}]'. ${s[e]}`,
                                ),
                                void (t = !1)
                              );
                            if (!(0, r.isArrayOfNums)(i.minViewPort, 2))
                              return (
                                (0, r.logError)(
                                  `Ad unit ${n}: Invalid declaration of 'minViewPort' in 'mediaTypes.${e}.sizeConfig[${l}]'. ${s[e]}`,
                                ),
                                void (t = !1)
                              );
                            if ('banner' === e || 'video' === e) {
                              let a = !1;
                              if (Array.isArray(i[d])) {
                                const e = o.WH.validateSizes(i[d]);
                                i[d].length > 0 &&
                                  0 === e.length &&
                                  ((t = !1), (a = !0));
                              } else (t = !1), (a = !0);
                              if (a)
                                return void (0, r.logError)(
                                  `Ad unit ${n}: Invalid declaration of '${d}' in 'mediaTypes.${e}.sizeConfig[${l}]'. ${s[e]}`,
                                );
                            }
                            'native' === e &&
                              'boolean' != typeof i[d] &&
                              ((0, r.logError)(
                                `Ad unit ${n}: Invalid declaration of 'active' in 'mediaTypes.${e}.sizeConfig[${l}]'. ${s[e]}`,
                              ),
                              (t = !1));
                          }),
                          t)
                        : ((0, r.logError)(
                            `Ad unit ${n}: Invalid declaration of 'sizeConfig' in 'mediaTypes.${e}.sizeConfig'. ${s[e]}`,
                          ),
                          (t = !1),
                          t);
                    },
                    n = [];
                  return (
                    e.forEach((e) => {
                      if (null == (e = o.WH.validateAdUnit(e))) return;
                      const t = e.mediaTypes;
                      let a, d, s;
                      t.banner &&
                        (t.banner.sizes
                          ? (a = o.WH.validateBannerMediaType(e))
                          : t.banner.sizeConfig
                            ? ((a = (0, r.deepClone)(e)),
                              i('banner', t.banner.sizeConfig, e.code)
                                ? a.mediaTypes.banner.sizeConfig.forEach(
                                    (e) => {
                                      Array.isArray(e.sizes[0]) ||
                                        (e.sizes = [e.sizes]);
                                    },
                                  )
                                : delete a.mediaTypes.banner)
                            : ((0, r.logError)(
                                `Ad unit ${e.code}: 'mediaTypes.banner' does not contain either 'sizes' or 'sizeConfig' property. Removing 'mediaTypes.banner' from ad unit.`,
                              ),
                              (a = (0, r.deepClone)(e)),
                              delete a.mediaTypes.banner)),
                        t.video &&
                          (t.video.playerSize
                            ? (d = a
                                ? o.WH.validateVideoMediaType(a)
                                : o.WH.validateVideoMediaType(e))
                            : t.video.sizeConfig &&
                              ((d = a || (0, r.deepClone)(e)),
                              i('video', t.video.sizeConfig, e.code)
                                ? d.mediaTypes.video.sizeConfig.forEach((e) => {
                                    Array.isArray(e.playerSize[0]) ||
                                      (e.playerSize = [e.playerSize]);
                                  })
                                : delete d.mediaTypes.video.sizeConfig)),
                        t.native &&
                          ((s = d
                            ? o.WH.validateNativeMediaType(d)
                            : a
                              ? o.WH.validateNativeMediaType(a)
                              : o.WH.validateNativeMediaType(e)),
                          t.native.sizeConfig) &&
                          (i('native', t.native.sizeConfig, e.code) ||
                            delete s.mediaTypes.native.sizeConfig);
                      const l = Object.assign({}, a, d, s);
                      n.push(l);
                    }),
                    n
                  );
                })(i)),
                e.bail(i))
              : e.call(this, i);
          }),
            (0, d.Yn)('setupAdUnitMediaTypes').before(function (e, i, n) {
              return p(i)
                ? e.bail(
                    (function (e, i) {
                      const n = {};
                      return e.reduce((e, t) => {
                        const a =
                          (n.hasOwnProperty(t.code) || (n[t.code] = 1),
                          n[t.code]++);
                        if (
                          t.mediaTypes &&
                          (0, r.isValidMediaTypes)(t.mediaTypes)
                        ) {
                          const {
                            activeViewport: n,
                            transformedMediaTypes: d,
                            isLabelActivated: o,
                          } = s.getAdUnitDetail(t, i, a);
                          o
                            ? 0 === Object.keys(d).length
                              ? (0, r.logInfo)(
                                  `Size Mapping V2:: Ad Unit: ${t.code}(${a}) => Ad unit disabled since there are no active media types after sizeConfig filtration.`,
                                )
                              : ((t.mediaTypes = d),
                                (t.bids = t.bids.reduce((e, o) => {
                                  if (s.isLabelActivated(o, i, t.code, a))
                                    if (o.sizeConfig) {
                                      const i =
                                        s.getRelevantMediaTypesForBidder(
                                          o.sizeConfig,
                                          n,
                                        );
                                      if (0 === i.size)
                                        (0, r.logError)(
                                          `Size Mapping V2:: Ad Unit: ${t.code}(${a}), Bidder: ${o.bidder} => 'sizeConfig' is not configured properly. This bidder won't be eligible for sizeConfig checks and will remain active.`,
                                        ),
                                          e.push(o);
                                      else if (i.has('none'))
                                        (0, r.logInfo)(
                                          `Size Mapping V2:: Ad Unit: ${t.code}(${a}), Bidder: ${o.bidder} => 'relevantMediaTypes' is set to 'none' in sizeConfig for current viewport size. This bidder is disabled.`,
                                        );
                                      else {
                                        let n = !1;
                                        const s = Object.fromEntries(
                                          Object.entries(d).filter((e) => {
                                            let [t, r] = e;
                                            return !!i.has(t) || ((n = !0), !1);
                                          }),
                                        );
                                        Object.keys(s).length > 0
                                          ? (n && (o.mediaTypes = s), e.push(o))
                                          : (0, r.logInfo)(
                                              `Size Mapping V2:: Ad Unit: ${t.code}(${a}), Bidder: ${o.bidder} => 'relevantMediaTypes' does not match with any of the active mediaTypes at the Ad Unit level. This bidder is disabled.`,
                                            );
                                      }
                                    } else e.push(o);
                                  else
                                    (0, r.logInfo)(
                                      `Size Mapping V2:: Ad Unit: ${t.code}(${a}), Bidder: ${o.bidder} => Label check for this bidder has failed. This bidder is disabled.`,
                                    );
                                  return e;
                                }, [])),
                                e.push(t))
                            : (0, r.logInfo)(
                                `Size Mapping V2:: Ad Unit: ${t.code}(${a}) => Ad unit is disabled due to failing label check.`,
                              );
                        } else
                          (0, r.logWarn)(
                            `Size Mapping V2:: Ad Unit: ${t.code} => Ad unit has declared invalid 'mediaTypes' or has not declared a 'mediaTypes' property`,
                          );
                        return e;
                      }, []);
                    })(i, n),
                  )
                : e.call(this, i, n);
            }),
            (0, t.E)('sizeMappingV2');
        },
      },
      (e) => {
        e.O(0, [60802, 51085], () => {
          return (i = 52090), e((e.s = i));
          var i;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [4085],
      {
        43297: (e, n, t) => {
          var r = t(7873),
            o = t(91069),
            u = t(70433),
            s = t(43272),
            p = t(11445),
            i = t(16916),
            l = t(75023),
            c = t(78969),
            a = t(45569),
            d = t(2604),
            f = t(95139),
            g = t(76811);
          const h = { purpose: {}, feature: {} },
            v = { purpose: !1, feature: 'specialFeatureOptins' },
            m = {
              storage: {
                type: 'purpose',
                default: {
                  purpose: 'storage',
                  enforcePurpose: !0,
                  enforceVendor: !0,
                  vendorExceptions: [],
                },
                id: 1,
              },
              basicAds: {
                type: 'purpose',
                id: 2,
                default: {
                  purpose: 'basicAds',
                  enforcePurpose: !0,
                  enforceVendor: !0,
                  vendorExceptions: [],
                },
              },
              personalizedAds: { type: 'purpose', id: 4 },
              measurement: { type: 'purpose', id: 7 },
              transmitPreciseGeo: { type: 'feature', id: 1 },
            },
            y = new Set(),
            B = new Set(),
            E = new Set(),
            k = new Set(),
            q = new Set(),
            A = new Set();
          let $ = !1,
            b = !1;
          const C = [a.tW, a.fW, a.Tn, a.zu],
            D = 'TCF2',
            w = [],
            O = [2],
            W = [2, 7, 9, 10];
          function P(e, n, t, r) {
            const o = (0, u.A)(e, `vendorData.${n}`);
            return !!o?.consents?.[t] || (r && !!o?.legitimateInterests?.[t]);
          }
          function S(e, n, t, r) {
            let o;
            if (!1 !== v[n]) o = !!(0, u.A)(e, `vendorData.${v[n]}.${t}`);
            else {
              const [n, u] = r === i.B1 ? ['publisher', W] : ['purpose', O];
              o = P(e, n, t, u.includes(t));
            }
            return { purpose: o, vendor: P(e, 'vendor', r, O.includes(t)) };
          }
          function T(e, n, t, r) {
            const o = m[e.purpose];
            if ((e.vendorExceptions || []).includes(t)) return !0;
            const u =
                e.enforceVendor &&
                !(r === i.B1 || (e.softVendorExceptions || []).includes(t)),
              { purpose: s, vendor: p } = S(n, o.type, o.id, r);
            return (!e.enforcePurpose || s) && (!u || p);
          }
          function x(e, n) {
            let t =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : null,
              r =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : () => null;
            return function (u) {
              const p = i.mW.getConsentData(),
                l = u[d.iK];
              if (
                (function (e, n, t) {
                  return null == e && i.mW.enabled
                    ? ((0, o.logWarn)(
                        `Attempting operation that requires purpose ${n} consent while consent data is not available${
                          t ? ` (module: ${t})` : ''
                        }. Assuming no consent was given.`,
                      ),
                      !0)
                    : e && e.gdprApplies;
                })(p, e, l)
              ) {
                const e = (function (e, n, t) {
                  if (n) {
                    const r = s.$W.getConfig('gvlMapping');
                    if (r && r[n]) return r[n];
                    if (e === a.tp) return i.B1;
                    {
                      let { gvlid: r, modules: u } = i.o2.get(n);
                      if (null == r && Object.keys(u).length > 0)
                        for (const t of C)
                          if (u.hasOwnProperty(t)) {
                            (r = u[t]),
                              t !== e &&
                                (0, o.logWarn)(
                                  `Multiple GVL IDs found for module '${n}'; using the ${t} module's ID (${r}) instead of the ${e}'s ID (${u[e]})`,
                                );
                            break;
                          }
                      return null == r && t && (r = t()), r || null;
                    }
                  }
                  return null;
                })(u[d.Dk], l, r(u));
                let c = !!n(p, l, e);
                if (!c) return t && t.add(l), { allow: c };
              }
            };
          }
          function F(e) {
            return x(
              e,
              (n, t, r) => !!T(h.purpose[e], n, t, r),
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : null,
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : () => null,
            );
          }
          function M(e) {
            return function (n) {
              if (n[d.Dk] !== a.tp) return e(n);
            };
          }
          const V =
            ((j = F(1, y)),
            function (e) {
              if (e[d.Dk] !== a.tp || b) return j(e);
            });
          var j;
          const I = F(1, y),
            N = F(1, y),
            z = M(F(2, B)),
            G = F(7, E, (e) =>
              (function (e, n) {
                const t = p.Ay.getAnalyticsAdapter(e);
                return ((r) => {
                  if ('function' != typeof r) return r;
                  try {
                    return r.call(t.adapter, n);
                  } catch (n) {
                    (0, o.logError)(`Error invoking ${e} adapter.gvlid()`, n);
                  }
                })(t?.adapter?.gvlid);
              })(e[d.iK], e[d.TQ]),
            ),
            K = F(4, k),
            L = M(
              (() => {
                const e = x(
                    '2-10',
                    function (e, n, t) {
                      for (let r = 2; r <= 10; r++) {
                        if (h.purpose[r]?.vendorExceptions?.includes(n))
                          return !0;
                        const { purpose: o, vendor: u } = S(e, 'purpose', r, t);
                        if (
                          o &&
                          (u || h.purpose[r]?.softVendorExceptions?.includes(n))
                        )
                          return !0;
                      }
                      return !1;
                    },
                    q,
                  ),
                  n = F(4, q);
                return function () {
                  return (h.purpose[4]?.eidsRequireP4Consent ? n : e).apply(
                    this,
                    arguments,
                  );
                };
              })(),
            ),
            R = x(
              'Special Feature 1',
              (e, n, t) => T(h.feature[1], e, n, t),
              A,
            );
          l.on(c.qY.AUCTION_END, function () {
            const e = function (e) {
                return Array.from(e.keys()).filter((e) => null != e);
              },
              n = {
                storageBlocked: e(y),
                biddersBlocked: e(B),
                analyticsBlocked: e(E),
                ufpdBlocked: e(k),
                eidsBlocked: e(q),
                geoBlocked: e(A),
              };
            l.emit(c.qY.TCF2_ENFORCEMENT, n),
              [y, B, E, k, q, A].forEach((e) => e.clear());
          }),
            s.$W.getConfig('consentManagement', (e) =>
              (function (e) {
                let n = (0, u.A)(e, 'gdpr.rules');
                n || (0, o.logWarn)('TCF2: enforcing P1 and P2 by default'),
                  (n = Object.fromEntries(
                    (n || []).map((e) => [e.purpose, e]),
                  )),
                  (b = !!(0, u.A)(e, 'strictStorageEnforcement')),
                  Object.entries(m).forEach((e) => {
                    let [t, r] = e;
                    h[r.type][r.id] = n[t] ?? r.default;
                  }),
                  $ ||
                    (null != h.purpose[1] &&
                      (($ = !0),
                      w.push((0, f.qB)(g.Ue, D, V)),
                      w.push((0, f.qB)(g.Ml, D, I)),
                      w.push((0, f.qB)(g.yl, D, N))),
                    null != h.purpose[2] && w.push((0, f.qB)(g.uc, D, z)),
                    null != h.purpose[4] &&
                      w.push((0, f.qB)(g.DL, D, K), (0, f.qB)(g.qX, D, K)),
                    null != h.purpose[7] && w.push((0, f.qB)(g.mo, D, G)),
                    null != h.feature[1] && w.push((0, f.qB)(g.hE, D, R)),
                    w.push((0, f.qB)(g.hq, D, L)));
              })(e.consentManagement),
            ),
            (0, r.E)('tcfControl');
        },
      },
      (e) => {
        e.O(0, [60802, 51085], () => {
          return (n = 43297), e((e.s = n));
          var n;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [94183],
      {
        63429: (e, r, t) => {
          var i = t(7873),
            a = t(63172),
            s = t(91069),
            n = t(70433),
            o = t(43272),
            p = t(57377),
            d = t(71371);
          const u = 'ttd',
            m = 1,
            c = 2;
          function l(e) {
            return {
              ttdprebid: {
                ver: 'TTD-PREBID-2023.09.05',
                pbjs: '9.0.0',
                keywords: e.site?.keywords
                  ? e.site.keywords.split(',').map((e) => e.trim())
                  : [],
              },
            };
          }
          function g(e) {
            let r = {};
            return (
              e.gdprConsent &&
                'boolean' == typeof e.gdprConsent.gdprApplies &&
                a.J(r, 'ext.gdpr', e.gdprConsent.gdprApplies ? 1 : 0),
              e.uspConsent && a.J(r, 'ext.us_privacy', e.uspConsent),
              !0 === o.$W.getConfig('coppa') && (r.coppa = 1),
              e.ortb2?.regs && s.mergeDeep(r, e.ortb2.regs),
              r
            );
          }
          function b(e, r) {
            let t = { tid: r?.ortb2?.source?.tid };
            return e[0].schain && a.J(t, 'ext.schain', e[0].schain), t;
          }
          function f(e) {
            const r =
              navigator.language ||
              navigator.browserLanguage ||
              navigator.userLanguage ||
              navigator.systemLanguage;
            let t = {
              ua: navigator.userAgent,
              dnt: s.getDNT() ? 1 : 0,
              language: r,
              connectiontype: y(),
            };
            return s.mergeDeep(t, e.device), t;
          }
          function y() {
            const e = navigator.connection || navigator.webkitConnection;
            if (!e) return 0;
            switch (e.type) {
              case 'ethernet':
                return 1;
              case 'wifi':
                return 2;
              case 'cellular':
                switch (e.effectiveType) {
                  case 'slow-2g':
                  case '2g':
                    return 4;
                  case '3g':
                    return 5;
                  case '4g':
                    return 6;
                  default:
                    return 3;
                }
              default:
                return 0;
            }
          }
          function h(e, r) {
            let t = {};
            e.gdprConsent && a.J(t, 'ext.consent', e.gdprConsent.consentString),
              s.isStr(n.A(e, 'bids.0.userId.tdid')) &&
                (t.buyeruid = e.bids[0].userId.tdid);
            var i = n.A(e, 'bids.0.userIdAsEids');
            return (
              i && i.length && a.J(t, 'ext.eids', i), s.mergeDeep(t, r.user), t
            );
          }
          function v(e, r) {
            var t = s.mergeDeep(
                {
                  page: n.A(e, 'refererInfo.page'),
                  ref: n.A(e, 'refererInfo.ref'),
                  publisher: { id: n.A(e, 'bids.0.params.publisherId') },
                },
                r.site,
              ),
              i = e.refererInfo.domain;
            return i && a.J(t, 'publisher.domain', i), t;
          }
          function I(e) {
            let r = { id: e.bidId };
            const t = n.A(e, 'ortb2Imp.ext.gpid') || e.params.placementId;
            t && (r.tagid = t);
            const i = n.A(e, 'mediaTypes.video');
            let a = {};
            n.A(e, 'mediaTypes.banner') &&
              (a[d.D4] = (function (e) {
                const r = (function (e) {
                    const r = s
                      .parseSizesInput(e)
                      .filter((e) => e)
                      .map((e) => e.split('x'))
                      .map((e) => ({
                        width: parseInt(e[0]),
                        height: parseInt(e[1]),
                      }));
                    return r;
                  })(e.mediaTypes.banner.sizes).map((e) => ({
                    w: e.width,
                    h: e.height,
                  })),
                  t = parseInt(n.A(e, 'mediaTypes.banner.pos')),
                  i = n.A(e, 'params.banner.expdir');
                let a = {};
                t && (a.pos = t);
                i && Array.isArray(i) && (a.expdir = i);
                const o = Object.assign({ w: r[0].w, h: r[0].h, format: r }, a),
                  p = n.A(e, 'ortb2Imp.battr');
                p && (o.battr = p);
                return o;
              })(e)),
              i &&
                (a[d.G_] = (function (e) {
                  {
                    let r = n.A(e, 'mediaTypes.video.minduration');
                    const t = n.A(e, 'mediaTypes.video.maxduration'),
                      i = n.A(e, 'mediaTypes.video.playerSize'),
                      a = n.A(e, 'mediaTypes.video.api'),
                      o = n.A(e, 'mediaTypes.video.mimes'),
                      p = n.A(e, 'mediaTypes.video.placement'),
                      d = n.A(e, 'mediaTypes.video.plcmt'),
                      u = n.A(e, 'mediaTypes.video.protocols'),
                      m = n.A(e, 'mediaTypes.video.playbackmethod'),
                      c = n.A(e, 'mediaTypes.video.pos'),
                      l = n.A(e, 'mediaTypes.video.startdelay'),
                      g = n.A(e, 'mediaTypes.video.skip'),
                      b = n.A(e, 'mediaTypes.video.skipmin'),
                      f = n.A(e, 'mediaTypes.video.skipafter'),
                      y = n.A(e, 'mediaTypes.video.minbitrate'),
                      h = n.A(e, 'mediaTypes.video.maxbitrate');
                    (r && s.isInteger(r)) || (r = 0);
                    let v = {
                      minduration: r,
                      maxduration: t,
                      api: a,
                      mimes: o,
                      placement: p,
                      protocols: u,
                    };
                    void 0 !== i &&
                      (s.isArray(i[0])
                        ? ((v.w = parseInt(i[0][0])), (v.h = parseInt(i[0][1])))
                        : s.isNumber(i[0]) &&
                          ((v.w = parseInt(i[0])), (v.h = parseInt(i[1])))),
                      m && (v.playbackmethod = m),
                      d && (v.plcmt = d),
                      c && (v.pos = c),
                      l && s.isInteger(l) && (v.startdelay = l),
                      !g || (0 !== g && 1 !== g) || (v.skip = g),
                      b && s.isInteger(b) && (v.skipmin = b),
                      f && s.isInteger(f) && (v.skipafter = f),
                      y && s.isInteger(y) && (v.minbitrate = y),
                      h && s.isInteger(h) && (v.maxbitrate = h);
                    const I = n.A(e, 'ortb2Imp.battr');
                    return I && (v.battr = I), v;
                  }
                })(e)),
              Object.assign(r, a);
            let o = (function (e) {
              if (e.params.bidfloor) return e.params.bidfloor;
              if (!s.isFn(e.getFloor)) return null;
              let r = e.getFloor({
                currency: 'USD',
                mediaType: '*',
                size: '*',
              });
              return s.isPlainObject(r) &&
                !isNaN(r.floor) &&
                'USD' === r.currency
                ? r.floor
                : null;
            })(e);
            o && ((r.bidfloor = parseFloat(o)), (r.bidfloorcur = 'USD'));
            const p = n.A(e, 'ortb2Imp.secure');
            return (
              (r.secure = (0, s.isNumber)(p) ? p : 1),
              s.mergeDeep(r, e.ortb2Imp),
              r
            );
          }
          const A = {
            code: u,
            gvlid: 21,
            aliases: ['thetradedesk'],
            supportedMediaTypes: [d.D4, d.G_],
            isBidRequestValid: function (e) {
              if (!e || !e.params)
                return s.logWarn(u + ': Missing bid parameters'), !1;
              if (!e.params.supplySourceId)
                return (
                  s.logWarn(
                    u + ': Missing required parameter params.supplySourceId',
                  ),
                  !1
                );
              if (!/^[\w+]+$/.test(e.params.supplySourceId))
                return (
                  s.logWarn(
                    u +
                      ': supplySourceId must only contain alphabetic characters',
                  ),
                  !1
                );
              if (!e.params.publisherId)
                return (
                  s.logWarn(
                    u + ': Missing required parameter params.publisherId',
                  ),
                  !1
                );
              if (e.params.publisherId.length > 32)
                return (
                  s.logWarn(
                    u + ': params.publisherId must be 32 characters or less',
                  ),
                  !1
                );
              if (e.params.bidfloor && isNaN(parseFloat(e.params.bidfloor)))
                return !1;
              const r = n.A(e, 'ortb2Imp.ext.gpid');
              if (!e.params.placementId && !r)
                return (
                  s.logWarn(
                    u +
                      ': one of params.placementId or gpid (via the GPT module https://docs.prebid.org/dev-docs/modules/gpt-pre-auction.html) must be passed',
                  ),
                  !1
                );
              const t = n.A(e, 'mediaTypes.banner'),
                i = n.A(e, 'mediaTypes.video');
              if (!t && !i)
                return (
                  s.logWarn(
                    u +
                      ': one of mediaTypes.banner or mediaTypes.video must be passed',
                  ),
                  !1
                );
              if (i) {
                if (!i.maxduration || !s.isInteger(i.maxduration))
                  return (
                    s.logWarn(
                      u +
                        ': mediaTypes.video.maxduration must be set to the maximum video ad duration in seconds',
                    ),
                    !1
                  );
                if (!i.api || 0 === i.api.length)
                  return (
                    s.logWarn(
                      u +
                        ': mediaTypes.video.api should be an array of supported api frameworks. See the Open RTB v2.5 spec for valid values',
                    ),
                    !1
                  );
                if (!i.mimes || 0 === i.mimes.length)
                  return (
                    s.logWarn(
                      u +
                        ': mediaTypes.video.mimes should be an array of supported mime types',
                    ),
                    !1
                  );
                if (!i.protocols)
                  return (
                    s.logWarn(
                      u +
                        ': mediaTypes.video.protocols should be an array of supported protocols. See the Open RTB v2.5 spec for valid values',
                    ),
                    !1
                  );
              }
              return !0;
            },
            buildRequests: function (e, r) {
              const t = r.ortb2 || {};
              let i = {
                id: r.bidderRequestId,
                imp: e.map((e) => I(e)),
                site: v(r, t),
                device: f(t),
                user: h(r, t),
                at: 1,
                cur: ['USD'],
                regs: g(r),
                source: b(e, r),
                ext: l(t),
              };
              return (
                t && t.bcat && (i.bcat = t.bcat),
                t && t.badv && (i.badv = t.badv),
                t && t.app && (i.app = t.app),
                t && t.pmp && (i.pmp = t.pmp),
                {
                  method: 'POST',
                  url:
                    'https://direct.adsrvr.org/bid/bidder/' +
                    r.bids[0].params.supplySourceId,
                  data: i,
                  options: { withCredentials: !0 },
                }
              );
            },
            interpretResponse: function (e, r) {
              let t = n.A(e, 'body.seatbid');
              const i = n.A(e, 'body.cur');
              if (!t || 0 === t.length) return [];
              let a = [],
                o = n.A(r, 'data.imp');
              return (
                t.forEach((e) => {
                  e.bid.forEach((e) => {
                    let r = o.find((r) => r.id === e.impid);
                    const t = e.price || 0;
                    let n = {
                      requestId: e.impid,
                      cpm: t,
                      creativeId: e.crid,
                      dealId: e.dealid || null,
                      currency: i || 'USD',
                      netRevenue: !0,
                      ttl: e.ttl || 360,
                      meta: {},
                    };
                    e.adomain &&
                      e.adomain.length > 0 &&
                      (n.meta.advertiserDomains = e.adomain),
                      e.ext.mediatype === m
                        ? Object.assign(n, {
                            width: e.w,
                            height: e.h,
                            ad: s.replaceAuctionPrice(e.adm, t),
                            mediaType: d.D4,
                          })
                        : e.ext.mediatype === c &&
                          (Object.assign(n, {
                            width: r.video.w,
                            height: r.video.h,
                            mediaType: d.G_,
                          }),
                          e.nurl
                            ? (n.vastUrl = s.replaceAuctionPrice(e.nurl, t))
                            : (n.vastXml = s.replaceAuctionPrice(e.adm, t))),
                      a.push(n);
                  });
                }),
                a
              );
            },
            getUserSyncs: function (e, r) {
              let t =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : {},
                i =
                  arguments.length > 3 && void 0 !== arguments[3]
                    ? arguments[3]
                    : '';
              const a = [];
              let s = `&gdpr=${
                  t.gdprApplies ? 1 : 0
                }&gdpr_consent=${encodeURIComponent(t.consentString)}`,
                n = `https://match.adsrvr.org/track/usersync?us_privacy=${encodeURIComponent(
                  i,
                )}${s}`;
              return (
                e.pixelEnabled
                  ? a.push({ type: 'image', url: n + '&ust=image' })
                  : e.iframeEnabled &&
                    a.push({ type: 'iframe', url: n + '&ust=iframe' }),
                a
              );
            },
          };
          (0, p.a$)(A), (0, i.E)('ttdBidAdapter');
        },
      },
      (e) => {
        e.O(0, [60802, 51085], () => {
          return (r = 63429), e((e.s = r));
          var r;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [73469],
      {
        34836: (e, t, n) => {
          var o = n(7873),
            r = n(15901),
            s = n(43272),
            i = n(75023),
            a = n(16916),
            c = n(11445),
            u = n(78969),
            l = n(16833),
            d = n(91069),
            g = n(70433);
          const f = new Map();
          function m(e) {
            const t = {};
            function n(e) {
              const n = JSON.stringify([e.source?.toLowerCase(), e.ext]);
              t.hasOwnProperty(n) ? t[n].uids.push(...e.uids) : (t[n] = e);
            }
            return (
              Object.entries(e).forEach((e) => {
                let [t, o] = e;
                o = Array.isArray(o) ? o : [o];
                ('pubProvidedId' === t
                  ? (0, d.deepClone)(o)
                  : o.map((e) =>
                      (function (e, t) {
                        const n = f.get(t);
                        if (n && e) {
                          let t = {};
                          t.source = (0, d.isFn)(n.getSource)
                            ? n.getSource(e)
                            : n.source;
                          const o = (0, d.isFn)(n.getValue) ? n.getValue(e) : e;
                          if ((0, d.isStr)(o)) {
                            const r = { id: o, atype: n.atype };
                            if ((0, d.isFn)(n.getUidExt)) {
                              const t = n.getUidExt(e);
                              t && (r.ext = t);
                            }
                            if (((t.uids = [r]), (0, d.isFn)(n.getEidExt))) {
                              const o = n.getEidExt(e);
                              o && (t.ext = o);
                            }
                            return t;
                          }
                        }
                        return null;
                      })(e, t),
                    )
                )
                  .filter((e) => null != e)
                  .forEach(n);
              }),
              Object.values(t)
            );
          }
          var b = n(12938),
            h = n(63172),
            y = n(51692),
            p = n(25555),
            I = n(1e3),
            S = n(16894),
            E = n(5973),
            w = n(45569),
            v = n(95139),
            D = n(76811),
            k = n(83441),
            O = n(38230);
          const j = 'User ID',
            A = b.X0,
            $ = b.qk,
            C = '_pbjs_id_optout',
            T = (0, b.CK)('userId'),
            P = { isAllowed: v.io };
          let N,
            U,
            x,
            L,
            _,
            F,
            q = !1,
            W = [],
            M = [],
            G = {},
            R = [];
          const J = (() => {
            let e;
            return () => (null == e && (e = (0, S.K7)()), e);
          })();
          function B(e) {
            return J()
              .fork()
              .renameWith((t) => [`userId.mod.${t}`, `userId.mods.${e}.${t}`]);
          }
          function K(e, t) {
            t = t || e.storageMgr;
            const n =
                'function' == typeof e.submodule.domainOverride
                  ? e.submodule.domainOverride()
                  : null,
              o = e.config.storage.name;
            return function (e, r, s) {
              t.setCookie(o + (e || ''), r, s, 'Lax', n);
            };
          }
          function V(e, t) {
            const n = e.config.storage;
            try {
              const o = new Date(Date.now() + 864e5 * n.expires).toUTCString(),
                r = (0, d.isPlainObject)(t) ? JSON.stringify(t) : t;
              e.enabledStorageTypes.forEach((t) => {
                switch (t) {
                  case A:
                    !(function (e, t, n) {
                      const o = e.config.storage,
                        r = K(e);
                      r(null, t, n),
                        r('_cst', me(), n),
                        'number' == typeof o.refreshInSeconds &&
                          r('_last', new Date().toUTCString(), n);
                    })(e, r, o);
                    break;
                  case $:
                    !(function (e, t, n) {
                      const o = e.config.storage,
                        r = e.storageMgr;
                      r.setDataInLocalStorage(`${o.name}_exp`, n),
                        r.setDataInLocalStorage(`${o.name}_cst`, me()),
                        r.setDataInLocalStorage(o.name, encodeURIComponent(t)),
                        'number' == typeof o.refreshInSeconds &&
                          r.setDataInLocalStorage(
                            `${o.name}_last`,
                            new Date().toUTCString(),
                          );
                    })(e, r, o);
                }
              });
            } catch (e) {
              (0, d.logError)(e);
            }
          }
          function Y(e) {
            we(e),
              e.enabledStorageTypes.forEach((t) => {
                switch (t) {
                  case A:
                    !(function (e) {
                      const t = K(e, T),
                        n = new Date(Date.now() - 864e5).toUTCString();
                      ['', '_last', '_cst'].forEach((e) => {
                        try {
                          t(e, '', n);
                        } catch (e) {
                          (0, d.logError)(e);
                        }
                      });
                    })(e);
                    break;
                  case $:
                    !(function (e) {
                      ['', '_last', '_exp', '_cst'].forEach((t) => {
                        try {
                          T.removeDataFromLocalStorage(
                            e.config.storage.name + t,
                          );
                        } catch (e) {
                          (0, d.logError)(e);
                        }
                      });
                    })(e);
                }
              });
          }
          function z(e) {
            let t = (0, d.getPrebidInternal)().setEidPermissions;
            'function' == typeof t &&
              (0, d.isArray)(e) &&
              t(
                (function (e) {
                  let t = [];
                  return (
                    e
                      .filter(
                        (e) =>
                          (0, d.isPlainObject)(e.idObj) &&
                          Object.keys(e.idObj).length,
                      )
                      .forEach((e) => {
                        Object.keys(e.idObj).forEach((n) => {
                          const o = f.get(n) || {};
                          (0, g.A)(e, 'config.bidders') &&
                            Array.isArray(e.config.bidders) &&
                            o.source &&
                            t.push({
                              source: o.source,
                              bidders: e.config.bidders,
                            });
                        });
                      }),
                    t
                  );
                })(e),
              );
          }
          function Q(e) {
            let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : void 0;
            const n = e.config.storage,
              o = t ? `${n.name}_${t}` : n.name;
            let r;
            try {
              e.enabledStorageTypes.find((t) => {
                switch (t) {
                  case A:
                    r = (function (e, t) {
                      return e.storageMgr.getCookie(t);
                    })(e, o);
                    break;
                  case $:
                    r = (function (e, t) {
                      const n = e.storageMgr,
                        o = e.config.storage,
                        r = n.getDataFromLocalStorage(`${o.name}_exp`);
                      return '' === r
                        ? n.getDataFromLocalStorage(t)
                        : r && new Date(r).getTime() - Date.now() > 0
                          ? decodeURIComponent(n.getDataFromLocalStorage(t))
                          : void 0;
                    })(e, o);
                }
                return !!r;
              }),
                'string' == typeof r &&
                  '{' === r.trim().charAt(0) &&
                  (r = JSON.parse(r));
            } catch (e) {
              (0, d.logError)(e);
            }
            return r;
          }
          function X(e, t, n) {
            t = J().fork().startTiming('userId.callbacks.total').stopBefore(t);
            const o = (0, d.delayExecution)(() => {
              clearTimeout(U), t();
            }, e.length);
            e.forEach(function (e) {
              const t = B(e.submodule.name)
                .startTiming('callback')
                .stopBefore(o);
              try {
                e.callback(
                  function (o) {
                    o
                      ? (e.config.storage && V(e, o),
                        (e.idObj = e.submodule.decode(o, e.config)),
                        he(H(n)))
                      : (0, d.logInfo)(
                          `${j}: ${e.submodule.name} - request id responded with an empty value`,
                        ),
                      t();
                  },
                  Q.bind(null, e),
                );
              } catch (n) {
                (0, d.logError)(
                  `Error in userID module '${e.submodule.name}':`,
                  n,
                ),
                  t();
              }
              e.callback = void 0;
            });
          }
          function H(e) {
            return Array.isArray(e) && e.length ? ee(e) : {};
          }
          function Z(e, t, n) {
            return Object.fromEntries(
              Object.entries(
                e.reduce((e, o) => {
                  const r = t(o);
                  return (
                    r &&
                      Object.keys(r).forEach((t) => {
                        const s = G[t]?.indexOf(n(o)),
                          i = {
                            priority: (0, d.isNumber)(s) ? s : -1,
                            value: r[t],
                          };
                        if (e[t]) {
                          const n = i.priority > e[t].priority ? i : e[t];
                          e[t] = n;
                        } else e[t] = i;
                      }),
                    e
                  );
                }, {}),
              ).map((e) => {
                let [t, n] = e;
                return [t, n.value];
              }),
            );
          }
          function ee(e) {
            return Z(
              e.filter(
                (e) =>
                  (0, d.isPlainObject)(e.idObj) && Object.keys(e.idObj).length,
              ),
              (e) => e.idObj,
              (e) => e.submodule.name,
            );
          }
          function te(e, t) {
            [e].some((e) => !Array.isArray(e) || !e.length) ||
              e.forEach((e) => {
                e.bids &&
                  (0, d.isArray)(e.bids) &&
                  e.bids.forEach((e) => {
                    const n = (function (e, t) {
                      return Array.isArray(e) && e.length && t
                        ? ee(
                            e.filter(
                              (e) =>
                                !e.config.bidders ||
                                !(0, d.isArray)(e.config.bidders) ||
                                (0, r.mK)(e.config.bidders, t),
                            ),
                          )
                        : {};
                    })(t, e.bidder);
                    Object.keys(n).length &&
                      ((e.userId = n), (e.userIdAsEids = m(n)));
                  });
              });
          }
          const ne = {};
          let oe;
          function re() {
            let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : ae() || [];
            const t = _ && e.find((e) => e.source === _);
            if (t && 'string' == typeof (0, g.A)(t, 'uids.0.id')) {
              const e = t.uids[0].id.replace(/[\W_]/g, '');
              if (e.length >= 32 && e.length <= 150) return e;
              (0, d.logWarn)(
                `User ID - Googletag Publisher Provided ID for ${_} is not between 32 and 150 characters - ${e}`,
              );
            }
          }
          const se = (0, S.Ak)('userId', function (e, t) {
            let { delay: n = p.k.timeout, getIds: r = fe } =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : {};
            p.k.race([r().catch(() => null), n(L)]).then(() => {
              te(t.adUnits || (0, o.m)().adUnits, N),
                J().join((0, S.BO)(t.metrics), {
                  propagate: !1,
                  includeGroups: !0,
                }),
                e.call(this, t);
            });
          });
          function ie() {
            return H(N);
          }
          function ae() {
            return m(ie());
          }
          function ce(e) {
            return m(
              (function (e, t) {
                if (!Array.isArray(e) || !e.length) return {};
                const n = ee(e),
                  o = Object.keys(n).find((e) => {
                    const n = f.get(e);
                    return (
                      n?.source === t ||
                      ((0, d.isFn)(n?.getSource) && n.getSource() === t)
                    );
                  });
                return o ? { [o]: n[o] } : [];
              })(N, e),
            )[0];
          }
          function ue(e, t, n) {
            return oe().then(() => {
              let o = {};
              if ((0, d.isFn)(n)) {
                (0, d.logInfo)(
                  `${j} - Getting encrypted signal from custom function : ${n.name} & source : ${e} `,
                );
                const t = n(e);
                o[e] = t ? le(t) : null;
              } else {
                const n = ce(e);
                (0, d.logInfo)(
                  `${j} - Getting encrypted signal for eids :${JSON.stringify(
                    n,
                  )}`,
                ),
                  (0, d.isEmpty)(n) ||
                    (o[n.source] = !0 === t ? le(n) : n.uids[0].id);
              }
              return (
                (0, d.logInfo)(`${j} - Fetching encrypted eids: ${o[e]}`), o[e]
              );
            });
          }
          function le(e) {
            let t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              n = '';
            if (1 === t)
              n =
                'object' == typeof e
                  ? window.btoa(JSON.stringify(e))
                  : window.btoa(e);
            return `${t}||${n}`;
          }
          function de() {
            if (!(0, d.isGptPubadsDefined)()) return;
            window.googletag.secureSignalProviders =
              window.googletag.secureSignalProviders || [];
            const e = s.$W.getConfig('userSync.encryptedSignalSources');
            if (e) {
              const t = e.registerDelay || 0;
              setTimeout(() => {
                e.sources &&
                  e.sources.forEach((e) => {
                    let { source: t, encrypt: n, customFunc: o } = e;
                    t.forEach((e) => {
                      window.googletag.secureSignalProviders.push({
                        id: e,
                        collectorFunction: () => ue(e, n, o),
                      });
                    });
                  });
              }, t);
            } else
              (0, d.logWarn)(
                `${j} - ESP : encryptedSignalSources config not defined under userSync Object`,
              );
          }
          function ge() {
            let { submoduleNames: e } =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {},
              t = arguments.length > 1 ? arguments[1] : void 0;
            return oe({ refresh: !0, submoduleNames: e }).then(
              () => (t && (0, d.isFn)(t) && t(), ie()),
            );
          }
          function fe() {
            return oe().then(
              () => ie(),
              (e) =>
                e === ne
                  ? Promise.resolve().then(fe)
                  : ((0, d.logError)('Error initializing userId', e),
                    p.k.reject(e)),
            );
          }
          function me() {
            let e = Number(a.SL.hash);
            const t = [];
            for (; e > 0; ) t.push(String.fromCharCode(255 & e)), (e >>>= 8);
            return btoa(t.join());
          }
          function be(e, t, n) {
            const o = a.mW.getConsentData();
            if (e.config.storage) {
              let n,
                r = Q(e),
                s = !1;
              if ('number' == typeof e.config.storage.refreshInSeconds) {
                const t = new Date(Q(e, 'last'));
                s =
                  t &&
                  Date.now() - t.getTime() >
                    1e3 * e.config.storage.refreshInSeconds;
              }
              if (
                !r ||
                s ||
                t ||
                (function (e) {
                  const t = Q(e, 'cst');
                  return !t || t !== me();
                })(e)
              ) {
                const t = Object.assign(
                  { enabledStorageTypes: e.enabledStorageTypes },
                  e.config,
                );
                n = e.submodule.getId(t, o, r);
              } else
                'function' == typeof e.submodule.extendId &&
                  (n = e.submodule.extendId(e.config, o, r));
              (0, d.isPlainObject)(n) &&
                (n.id && (V(e, n.id), (r = n.id)),
                'function' == typeof n.callback && (e.callback = n.callback)),
                r && (e.idObj = e.submodule.decode(r, e.config));
            } else if (e.config.value) e.idObj = e.config.value;
            else {
              const t = e.submodule.getId(e.config, o, void 0);
              (0, d.isPlainObject)(t) &&
                ('function' == typeof t.callback && (e.callback = t.callback),
                t.id && (e.idObj = e.submodule.decode(t.id, e.config)));
            }
            he(H(n));
          }
          function he() {
            let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : ie();
            if (e && _) {
              const t = re(m(e));
              t &&
                ((0, d.isGptPubadsDefined)()
                  ? window.googletag.pubads().setPublisherProvidedId(t)
                  : ((window.googletag = window.googletag || {}),
                    (window.googletag.cmd = window.googletag.cmd || []),
                    window.googletag.cmd.push(function () {
                      window.googletag.pubads().setPublisherProvidedId(t);
                    })));
            }
          }
          function ye(e, t) {
            let n =
              arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
            return J()
              .fork()
              .measureTime('userId.init.modules', function () {
                if (!t.length) return [];
                if (
                  (t.forEach((e) => we(e)),
                  !(t = t.filter(
                    (e) =>
                      (!e.config.storage || !!e.enabledStorageTypes.length) &&
                      P.isAllowed(D.yl, (0, k.s)(w.fW, e.config.name)),
                  )).length)
                )
                  return (0, d.logWarn)(`${j} - no ID module configured`), [];
                const o = t.reduce(
                  (e, o) =>
                    B(o.submodule.name).measureTime('init', () => {
                      try {
                        be(o, n, t), e.push(o);
                      } catch (e) {
                        (0, d.logError)(
                          `Error in userID module '${o.submodule.name}':`,
                          e,
                        );
                      }
                      return e;
                    }),
                  [],
                );
                return o.length && z(o), o.forEach(pe.bind(null, e)), o;
              });
          }
          function pe(e, t) {
            let n = !1;
            for (let o = 0; o < e.length; o++)
              if (
                t.config.name.toLowerCase() === e[o].config.name.toLowerCase()
              ) {
                (n = !0), (e[o] = t);
                break;
              }
            n || e.push(t);
          }
          function Ie(e) {
            return e?.storage?.type?.trim().split(/\s*&\s*/) || [];
          }
          function Se(e) {
            return Array.isArray(e)
              ? e.reduce(
                  (e, t) => (
                    !t ||
                      (0, d.isEmptyStr)(t.name) ||
                      ((t.storage &&
                        !(0, d.isEmptyStr)(t.storage.type) &&
                        !(0, d.isEmptyStr)(t.storage.name) &&
                        (function (e) {
                          return Ie(e).every((e) => Ee.has(e));
                        })(t)) ||
                      (0, d.isPlainObject)(t.value)
                        ? e.push(t)
                        : t.storage || t.value || e.push(t)),
                    e
                  ),
                  [],
                )
              : [];
          }
          const Ee = new Set([$, A]);
          function we(e) {
            if (e.enabledStorageTypes) return;
            const t = Ie(e.config);
            e.enabledStorageTypes = t.filter((t) => {
              switch (t) {
                case $:
                  return (function (e) {
                    return !(
                      !e.storageMgr.localStorageIsEnabled() ||
                      (T.getDataFromLocalStorage(C) &&
                        ((0, d.logInfo)(
                          `${j} - opt-out localStorage found, storage disabled`,
                        ),
                        1))
                    );
                  })(e);
                case A:
                  return (function (e) {
                    return !(
                      !e.storageMgr.cookiesAreEnabled() ||
                      (T.getCookie(C) &&
                        ((0, d.logInfo)(
                          `${j} - opt-out cookie found, storage disabled`,
                        ),
                        1))
                    );
                  })(e);
              }
              return !1;
            });
          }
          function ve(e) {
            f.clear(),
              Object.entries(
                Z(
                  e,
                  (e) => e.eids,
                  (e) => e.name,
                ),
              ).forEach((e) => {
                let [t, n] = e;
                return f.set(t, n);
              });
          }
          function De() {
            ve(R);
            const e = Se(M);
            if (!e.length) return;
            const t = R.filter((e) => !(0, r.I6)(W, (t) => t.name === e.name));
            W.splice(0, W.length),
              t
                .map((t) => {
                  const n = (0, r.I6)(
                    e,
                    (e) =>
                      e.name &&
                      (e.name.toLowerCase() === t.name.toLowerCase() ||
                        (t.aliasName &&
                          e.name.toLowerCase() === t.aliasName.toLowerCase())),
                  );
                  return (
                    n && t.name !== n.name && (n.name = t.name),
                    n
                      ? {
                          submodule: t,
                          config: n,
                          callback: void 0,
                          idObj: void 0,
                          storageMgr: (0, b.vM)({
                            moduleType: w.fW,
                            moduleName: n.name,
                          }),
                        }
                      : null
                  );
                })
                .filter((e) => null !== e)
                .forEach((e) => W.push(e)),
              !q &&
                W.length &&
                ((0, o.m)().requestBids.before(se, 40),
                c.Ay.callDataDeletionRequest.before(ke),
                y.Q.after((e) => e(re())),
                (0, d.logInfo)(
                  `${j} - usersync config updated for ${W.length} submodules: `,
                  W.map((e) => e.submodule.name),
                ),
                (q = !0));
          }
          function ke(e) {
            for (
              var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), o = 1;
              o < t;
              o++
            )
              n[o - 1] = arguments[o];
            (0, d.logInfo)(
              'UserID: received data deletion request; deleting all stored IDs...',
            ),
              W.forEach((e) => {
                if ('function' == typeof e.submodule.onDataDeletionRequest)
                  try {
                    e.submodule.onDataDeletionRequest(e.config, e.idObj, ...n);
                  } catch (t) {
                    (0, d.logError)(
                      `Error calling onDataDeletionRequest for ID submodule ${e.submodule.name}`,
                      t,
                    );
                  }
                Y(e);
              }),
              e.apply(this, n);
          }
          function Oe(e) {
            return function () {
              return Promise.resolve(e.apply(this, arguments));
            };
          }
          !(function (e) {
            let { delay: t = p.k.timeout } =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {};
            (_ = void 0),
              (W = []),
              (M = []),
              (q = !1),
              (N = []),
              (oe = (function () {
                let { delay: e = p.k.timeout } =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {};
                const t = (0, p.v)(),
                  n = (0, p.v)();
                let o,
                  r,
                  s = !1;
                function c(e) {
                  return (
                    (r = J().fork()),
                    null != o && o.reject(ne),
                    (o = (0, p.v)()),
                    p.k
                      .race([e, o.promise])
                      .finally(r.startTiming('userId.total'))
                  );
                }
                let g = N,
                  f = W;
                function m(e) {
                  return function () {
                    if (g === N && f === W) return e(...arguments);
                  };
                }
                function b() {
                  return a.SL.promise.finally(
                    r.startTiming('userId.init.consent'),
                  );
                }
                let h = c(
                  p.k
                    .all([l.Gc, t.promise])
                    .then(b)
                    .then(
                      m(() => {
                        ye(g, f);
                      }),
                    )
                    .then(() =>
                      n.promise.finally(
                        r.startTiming('userId.callbacks.pending'),
                      ),
                    )
                    .then(
                      m(() => {
                        const e = g.filter((e) => (0, d.isFn)(e.callback));
                        if (e.length) return new p.k((t) => X(e, t, g));
                      }),
                    ),
                );
                return function () {
                  let {
                    refresh: o = !1,
                    submoduleNames: r = null,
                    ready: a = !1,
                  } = arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {};
                  return (
                    a &&
                      !s &&
                      ((s = !0),
                      t.resolve(),
                      L > 0
                        ? n.resolve()
                        : i.on(u.qY.AUCTION_END, function t() {
                            i.off(u.qY.AUCTION_END, t), e(x).then(n.resolve);
                          })),
                    o &&
                      s &&
                      (h = c(
                        h
                          .catch(() => null)
                          .then(b)
                          .then(
                            m(() => {
                              const e = ye(
                                g,
                                f.filter(
                                  (e) =>
                                    null == r || r.includes(e.submodule.name),
                                ),
                                !0,
                              ).filter((e) => null != e.callback);
                              if (e.length) return new p.k((t) => X(e, t, g));
                            }),
                          ),
                      )),
                    h
                  );
                };
              })({ delay: t })),
              null != F && F(),
              (R = []),
              (F = e.getConfig('userSync', (e) => {
                const t = e.userSync;
                t &&
                  ((_ = t.ppid),
                  t.userIds &&
                    ((M = t.userIds),
                    (x = (0, d.isNumber)(t.syncDelay)
                      ? t.syncDelay
                      : O.qh.syncDelay),
                    (L = (0, d.isNumber)(t.auctionDelay)
                      ? t.auctionDelay
                      : O.qh.auctionDelay),
                    De(),
                    (function (e, t) {
                      if (e) {
                        const n = {},
                          o = new Map(
                            t.map((e) =>
                              e.submodule.aliasName
                                ? [e.submodule.aliasName, e.submodule.name]
                                : [],
                            ),
                          );
                        Object.keys(e).forEach((t) => {
                          const r = (0, d.isArray)(e[t])
                            ? [...e[t]].reverse()
                            : [];
                          n[t] = r.map((e) => (o.has(e) ? o.get(e) : e));
                        }),
                          (G = n);
                      } else G = {};
                    })(t.idPriority, W),
                    oe({ ready: !0 })));
              })),
              ((0, o.m)().getUserIds = ie),
              ((0, o.m)().getUserIdsAsEids = ae),
              ((0, o.m)().getEncryptedEidsForSource = Oe(ue)),
              ((0, o.m)().registerSignalSources = de),
              ((0, o.m)().refreshUserIds = Oe(ge)),
              ((0, o.m)().getUserIdsAsync = Oe(fe)),
              ((0, o.m)().getUserIdsAsEidBySource = ce);
          })(s.$W),
            (0, l.xG)(
              'userId',
              function (e) {
                (e.findRootDomain = E.S),
                  (0, r.I6)(R, (t) => t.name === e.name) ||
                    (R.push(e),
                    a.o2.register(w.fW, e.name, e.gvlid),
                    De(),
                    oe({ refresh: !0, submoduleNames: [e.name] }));
              },
              { postInstallAllowed: !0 },
            ),
            (0, I.pS)({
              type: I.S3,
              name: 'userExtEids',
              fn: function (e, t, n) {
                const o = (0, g.A)(n, 'bidRequests.0.userIdAsEids');
                o &&
                  Object.keys(o).length > 0 &&
                  (0, h.J)(e, 'user.ext.eids', o);
              },
            }),
            (0, o.E)('userId');
        },
      },
      (e) => {
        e.O(0, [60802, 51085], () => {
          return (t = 34836), e((e.s = t));
          var t;
        });
        e.O();
      },
    ]);
    (self.pbjsChunk = self.pbjsChunk || []).push([
      [47957],
      {
        93043: (e, t, n) => {
          var i = n(7873),
            r = n(91069),
            o = n(70433),
            s = n(57377),
            d = n(71371),
            a = n(12938),
            c = n(12693),
            p = n(43272),
            u = n(29906);
          const l = 'prebid',
            g = 'vidazoo',
            m = '1.0.0',
            b = 9e5,
            f = 36e5,
            h = 'vidSid',
            I = 'vdzwopt',
            C = 'wsid_' + parseInt(Date.now() * Math.random()),
            y = (0, a.vM)({ bidderCode: g });
          function v() {
            try {
              return (0, r.parseUrl)(window.top.document.URL, {
                decodeSearchAsString: !0,
              }).search;
            } catch (e) {
              return '';
            }
          }
          function S() {
            return `https://${
              arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : l
            }.cootlogix.com`;
          }
          function D(e) {
            return (
              e.cId ||
              e.CID ||
              e.cID ||
              e.CId ||
              e.cid ||
              e.ciD ||
              e.Cid ||
              e.CiD
            );
          }
          function R(e) {
            return (
              e.pId ||
              e.PID ||
              e.pID ||
              e.PId ||
              e.pid ||
              e.piD ||
              e.Pid ||
              e.PiD
            );
          }
          function $(e) {
            return (
              e.subDomain ||
              e.SubDomain ||
              e.Subdomain ||
              e.subdomain ||
              e.SUBDOMAIN ||
              e.subDOMAIN
            );
          }
          function A(e, t, n, i, s) {
            const {
                params: d,
                bidId: a,
                userId: p,
                adUnitCode: u,
                schain: l,
                mediaTypes: S,
                ortb2Imp: D,
                bidderRequestId: $,
                bidRequestsCount: A,
                bidderRequestsCount: T,
                bidderWinsCount: z,
              } = e,
              { ext: q } = d;
            let { bidFloor: x } = d;
            const O = (function (e) {
                let t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : '_';
                const n = e.length;
                let i = 0,
                  r = 0;
                if (n > 0)
                  for (; r < n; ) i = ((i << 5) - i + e.charCodeAt(r++)) | 0;
                return t + i;
              })(t),
              _ = (function (e) {
                let t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : b;
                try {
                  const n = w(e);
                  let i,
                    r = 0;
                  n &&
                    n.value &&
                    Date.now() - n.created < t &&
                    ((r = n.value), (i = n.created));
                  const o = r + 1;
                  return U(e, o, i), o;
                } catch (e) {
                  return 0;
                }
              })(O),
              j = (function (e) {
                let t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : f;
                const n = `u_${e}`,
                  i = Date.now(),
                  r = w(n);
                let o;
                !r || !r.value || i - r.created > t
                  ? ((o = `${e}_${i.toString()}`), U(n, o))
                  : (o = r.value);
                return o;
              })(O),
              P = w(h) || '',
              F = R(d),
              W = (function () {
                let e = y.getDataFromLocalStorage(I);
                e || ((e = String(Date.now())), y.setDataInLocalStorage(I, e));
                return e;
              })(),
              E = c.u.get(g, 'storageAllowed'),
              L =
                (0, o.A)(e, 'ortb2Imp.ext.gpid') ||
                (0, o.A)(e, 'ortb2Imp.ext.data.pbadslot', ''),
              M = (0, o.A)(i, 'ortb2.site.cat', []),
              k = (0, o.A)(i, 'ortb2.site.pagecat', []),
              B = (0, o.A)(i, 'ortb2.site.content.data', []),
              N = (0, o.A)(i, 'ortb2.user.data', []);
            if ((0, r.isFn)(e.getFloor)) {
              const t = e.getFloor({
                currency: 'USD',
                mediaType: '*',
                size: '*',
              });
              'USD' === t.currency && (x = t.floor);
            }
            let G = {
              url: encodeURIComponent(t),
              uqs: v(),
              cb: Date.now(),
              bidFloor: x,
              bidId: a,
              referrer: i.refererInfo.ref,
              adUnitCode: u,
              publisherId: F,
              sessionId: P,
              sizes: n,
              dealId: _,
              uniqueDealId: j,
              bidderVersion: m,
              prebidVersion: '9.0.0',
              res: `${screen.width}x${screen.height}`,
              schain: l,
              mediaTypes: S,
              ptrace: W,
              isStorageAllowed: E,
              gpid: L,
              cat: M,
              contentData: B,
              userData: N,
              pagecat: k,
              transactionId: D?.ext?.tid,
              bidderRequestId: $,
              bidRequestsCount: A,
              bidderRequestsCount: T,
              bidderWinsCount: z,
              bidderTimeout: s,
              webSessionId: C,
            };
            !(function (e, t) {
              let n;
              (0, r._each)(t, (t, i) => {
                switch (((n = `uid.${i}`), i)) {
                  case 'lipb':
                    e[n] = t.lipbid;
                    break;
                  case 'id5id':
                    e[n] = t.uid;
                    break;
                  default:
                    e[n] = t;
                }
              });
            })(G, p);
            const V = (0, o.A)(i, 'ortb2.device.sua');
            if (
              (V && (G.sua = V),
              i.gdprConsent &&
                (i.gdprConsent.consentString &&
                  (G.gdprConsent = i.gdprConsent.consentString),
                void 0 !== i.gdprConsent.gdprApplies &&
                  (G.gdpr = i.gdprConsent.gdprApplies ? 1 : 0)),
              i.uspConsent && (G.usPrivacy = i.uspConsent),
              i.gppConsent
                ? ((G.gppString = i.gppConsent.gppString),
                  (G.gppSid = i.gppConsent.applicableSections))
                : i.ortb2?.regs?.gpp &&
                  ((G.gppString = i.ortb2.regs.gpp),
                  (G.gppSid = i.ortb2.regs.gpp_sid)),
              i.paapi?.enabled)
            ) {
              const e = (0, o.A)(i, 'ortb2Imp.ext.ae');
              e && (G.fledge = e);
            }
            return (
              (0, r._each)(q, (e, t) => {
                G['ext.' + t] = e;
              }),
              G
            );
          }
          function T(e, t, n, i, r) {
            const { params: o } = e,
              s = D(o),
              d = $(o),
              a = A(e, t, n, i, r);
            return {
              method: 'POST',
              url: `${S(d)}/prebid/multi/${s}`,
              data: a,
            };
          }
          function w(e) {
            try {
              return (function (e) {
                try {
                  return JSON.parse(e);
                } catch (t) {
                  return e;
                }
              })(y.getDataFromLocalStorage(e));
            } catch (e) {}
            return null;
          }
          function U(e, t, n) {
            try {
              const i = n || Date.now(),
                r = JSON.stringify({ value: t, created: i });
              y.setDataInLocalStorage(e, r);
            } catch (e) {}
          }
          const z = {
            code: g,
            version: m,
            gvlid: 744,
            supportedMediaTypes: [d.D4, d.G_],
            isBidRequestValid: function (e) {
              const t = e.params || {};
              return !(!D(t) || !R(t));
            },
            buildRequests: function (e, t) {
              const n = t.refererInfo.page || t.refererInfo.topmostLocation,
                i = p.$W.getConfig('bidderTimeout'),
                o = p.$W.getConfig('vidazoo.singleRequest'),
                s = [];
              if (o) {
                const o = e.filter((e) =>
                  (0, r.isArray)(e.mediaTypes)
                    ? e.mediaTypes.includes(d.D4)
                    : void 0 !== e.mediaTypes[d.D4],
                );
                if (o.length > 0) {
                  const e = (function (e, t, n, i) {
                    const { params: o } = e[0],
                      s = D(o),
                      d = $(o),
                      a = e.map((e) => {
                        const o = (0, r.parseSizesInput)(e.sizes);
                        return A(e, n, o, t, i);
                      }),
                      c = Math.min(
                        20,
                        p.$W.getConfig('vidazoo.chunkSize') || 10,
                      );
                    return (0, u.i)(a, c).map((e) => ({
                      method: 'POST',
                      url: `${S(d)}/prebid/multi/${s}`,
                      data: { bids: e },
                    }));
                  })(o, t, n, i);
                  s.push(...e);
                }
                e.filter((e) => void 0 !== e.mediaTypes[d.G_]).forEach((e) => {
                  const o = (0, r.parseSizesInput)(e.sizes),
                    d = T(e, n, o, t, i);
                  s.push(d);
                });
              } else
                e.forEach((e) => {
                  const o = (0, r.parseSizesInput)(e.sizes),
                    d = T(e, n, o, t, i);
                  s.push(d);
                });
              return s;
            },
            interpretResponse: function (e, t) {
              if (!e || !e.body) return [];
              const n = p.$W.getConfig('vidazoo.singleRequest'),
                i = (0, o.A)(t, 'data.bidId'),
                { results: r } = e.body;
              let s = [];
              try {
                return (
                  r.forEach((e, t) => {
                    const {
                      creativeId: r,
                      ad: o,
                      price: a,
                      exp: c,
                      width: p,
                      height: u,
                      currency: l,
                      bidId: g,
                      nurl: m,
                      advertiserDomains: b,
                      metaData: f,
                      mediaType: h = d.D4,
                    } = e;
                    if (!o || !a) return;
                    const I = {
                      requestId: n && g ? g : i,
                      cpm: a,
                      width: p,
                      height: u,
                      creativeId: r,
                      currency: l || 'USD',
                      netRevenue: !0,
                      ttl: c || 300,
                    };
                    m && (I.nurl = m),
                      f
                        ? Object.assign(I, { meta: f })
                        : Object.assign(I, {
                            meta: { advertiserDomains: b || [] },
                          }),
                      h === d.D4
                        ? Object.assign(I, { ad: o })
                        : Object.assign(I, { vastXml: o, mediaType: d.G_ }),
                      s.push(I);
                  }),
                  s
                );
              } catch (e) {
                return [];
              }
            },
            getUserSyncs: function (e, t) {
              let n =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : {},
                i =
                  arguments.length > 3 && void 0 !== arguments[3]
                    ? arguments[3]
                    : '',
                s =
                  arguments.length > 4 && void 0 !== arguments[4]
                    ? arguments[4]
                    : {},
                d = [];
              const { iframeEnabled: a, pixelEnabled: c } = e,
                { gdprApplies: p, consentString: u = '' } = n,
                { gppString: l, applicableSections: g } = s,
                m = t
                  .filter((e) => (0, o.A)(e, 'body.cid'))
                  .map((e) => e.body.cid)
                  .filter(r.uniques);
              let b = `?cid=${encodeURIComponent(m.join(','))}&gdpr=${
                p ? 1 : 0
              }&gdpr_consent=${encodeURIComponent(
                u || '',
              )}&us_privacy=${encodeURIComponent(i || '')}`;
              return (
                l &&
                  g?.length &&
                  ((b += '&gpp=' + encodeURIComponent(l)),
                  (b += '&gpp_sid=' + encodeURIComponent(g.join(',')))),
                a &&
                  d.push({
                    type: 'iframe',
                    url: `https://sync.cootlogix.com/api/sync/iframe/${b}`,
                  }),
                c &&
                  d.push({
                    type: 'image',
                    url: `https://sync.cootlogix.com/api/sync/image/${b}`,
                  }),
                d
              );
            },
            onBidWon: function (e) {
              if (!e.nurl) return;
              const t = {
                  adId: e.adId,
                  creativeId: e.creativeId,
                  auctionId: e.auctionId,
                  transactionId: e.transactionId,
                  adUnitCode: e.adUnitCode,
                  cpm: e.cpm,
                  currency: e.currency,
                  originalCpm: e.originalCpm,
                  originalCurrency: e.originalCurrency,
                  netRevenue: e.netRevenue,
                  mediaType: e.mediaType,
                  timeToRespond: e.timeToRespond,
                  status: e.status,
                },
                n = (0, r.formatQS)(t),
                i = e.nurl + (-1 === e.nurl.indexOf('?') ? '?' : '&') + n;
              (0, r.triggerPixel)(i);
            },
          };
          (0, s.a$)(z), (0, i.E)('vidazooBidAdapter');
        },
      },
      (e) => {
        e.O(0, [44982, 60802, 51085], () => {
          return (t = 93043), e((e.s = t));
          var t;
        });
        e.O();
      },
    ]);
  })(),
    pbjs.processQueue();
