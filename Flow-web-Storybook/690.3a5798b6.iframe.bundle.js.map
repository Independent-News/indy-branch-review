{"version":3,"file":"690.3a5798b6.iframe.bundle.js","mappings":";AA0BA;AACA;ACtBA;ADyCA;AASA;AEpDA;AFsDA;AACA;AEnDA;ACPA","sources":["webpack://@indy/flow-web/./app/component/library/Article/ProductCarousel/helpers/updateItems.js","webpack://@indy/flow-web/../src/components/ProductCarouselCard/ProductCarouselCard.constants.ts","webpack://@indy/flow-web/../src/components/ProductComparison/ProductComparison.constants.ts","webpack://@indy/flow-web/./app/component/library/Article/ProductCarousel/ProductCarousel.js"],"sourcesContent":["import {\n  TILE_WIDTH_MOBILE as CAROUSEL_TILE_WIDTH_MOBILE,\n  TILE_WIDTH_TABLET as CAROUSEL_TILE_WIDTH_TABLET,\n  TILE_WIDTH_LAPTOP as CAROUSEL_TILE_WIDTH_LAPTOP,\n} from '@indy/ui/ProductCarousel';\nimport {\n  TILE_WIDTH_MOBILE as COMPARISON_TILE_WIDTH_MOBILE,\n  TILE_WIDTH_MAX_LARGE_MOBILE as COMPARISON_TILE_WIDTH_MAX_LARGE_MOBILE,\n  TILE_WIDTH_MAX_TABLET as COMPARISON_TILE_WIDTH_MAX_TABLET,\n  TILE_WIDTH_MAX_LAPTOP as COMPARISON_TILE_WIDTH_MAX_LAPTOP,\n  TILE_WIDTH_LAPTOP as COMPARISON_TILE_WIDTH_LAPTOP,\n} from '@indy/ui/ProductComparison';\n\nimport { maxMobile, maxTablet, maxLaptop } from '#app/constants/devices';\n\nimport { minify } from '#app/util/taggedTemplates';\n\nimport { getImage } from './getImage';\n\nconst carouselImageWidths = [\n  CAROUSEL_TILE_WIDTH_MOBILE,\n  CAROUSEL_TILE_WIDTH_TABLET,\n  CAROUSEL_TILE_WIDTH_LAPTOP,\n];\n\nconst carouselImageSizes = minify`\n  ${maxTablet} ${CAROUSEL_TILE_WIDTH_MOBILE}px,\n  ${maxLaptop} ${CAROUSEL_TILE_WIDTH_TABLET}px,\n  ${CAROUSEL_TILE_WIDTH_LAPTOP}px\n`;\n\nexport const updateItemsForCarousel = (items) =>\n  items.map((item) => {\n    const isExternalECommLink = item.isEComm && item.isExternal;\n    const rel = isExternalECommLink ? 'noreferrer nofollow' : null;\n    const target = isExternalECommLink ? '_blank' : null;\n\n    return {\n      ...item,\n      image: getImage(item, carouselImageWidths, carouselImageSizes),\n      endpoint: item.priceComparisonEndpoint,\n      rel,\n      target,\n    };\n  });\n\nconst comparisonImageWidths = [\n  COMPARISON_TILE_WIDTH_MOBILE,\n  COMPARISON_TILE_WIDTH_MAX_LARGE_MOBILE, // split the difference between mobile and tablet\n  COMPARISON_TILE_WIDTH_MAX_TABLET,\n  COMPARISON_TILE_WIDTH_MAX_LAPTOP,\n  COMPARISON_TILE_WIDTH_LAPTOP,\n];\n\nconst comparisonImageSizes = minify`\n  ${maxMobile} ${COMPARISON_TILE_WIDTH_MOBILE}px,\n  (max-width: 576px) ${COMPARISON_TILE_WIDTH_MAX_LARGE_MOBILE}px,\n  ${maxTablet} ${COMPARISON_TILE_WIDTH_MAX_TABLET}px,\n  ${maxLaptop} ${COMPARISON_TILE_WIDTH_MAX_LAPTOP}px,\n  ${COMPARISON_TILE_WIDTH_LAPTOP}px\n`;\n\nexport const updateItemsForComparison = (items) =>\n  items.map((item) => {\n    const isExternalECommLink = item.isEComm && item.isExternal;\n    const rel = isExternalECommLink ? 'noreferrer nofollow' : null;\n    const target = isExternalECommLink ? '_blank' : null;\n\n    return {\n      ...item,\n      image: getImage(item, comparisonImageWidths, comparisonImageSizes),\n      endpoint: item.priceComparisonEndpoint,\n      rel,\n      target,\n    };\n  });\n","import * as spacing from '#theme/spacings';\n\nexport const FOOTER_SPACING = spacing.x2;\nexport const TILE_WIDTH_MOBILE = 140;\nexport const TILE_WIDTH_TABLET = 156;\nexport const TILE_WIDTH_LAPTOP = 190;\n\nexport const UNAVAILABLE_LABEL = 'Unavailable';\nexport const BUY_NOW_LABEL = 'Buy now';\n","export const PRODUCT_COMPARISON_RESET = 'product-comparison-reset';\n\nexport const TILE_WIDTH_MOBILE = 148;\nexport const TILE_WIDTH_MAX_LARGE_MOBILE = 257;\nexport const TILE_WIDTH_MAX_TABLET = 352;\nexport const TILE_WIDTH_TABLET = 276;\nexport const TILE_WIDTH_MAX_LAPTOP = 368;\nexport const TILE_WIDTH_LAPTOP = 330;\n","import ProductCarousel from '@indy/ui/ProductCarousel';\nimport ProductComparison, {\n  PRODUCT_COMPARISON_RESET,\n} from '@indy/ui/ProductComparison';\n\nimport PageStateContext from '#app/context/PageState';\n\nimport propTypes from './ProductCarousel.types';\nimport { fetchPriceFactory } from './helpers/fetchPriceFactory';\nimport {\n  updateItemsForCarousel,\n  updateItemsForComparison,\n} from './helpers/updateItems';\n\nconst noop = () => {};\n\nconst ProductCarouselHydrated = ({\n  items,\n  title = 'Our Top Picks',\n  offsetKey,\n  isComparison,\n  hasDynamicPricing,\n}) => {\n  const updatedItemsForCarousel = updateItemsForCarousel(items);\n  const updatedItemsForComparison = updateItemsForComparison(items);\n\n  if (isComparison) {\n    return (\n      <PageStateContext.Consumer>\n        {({\n          productComparison: { selectedItems, showModal },\n          productPrices,\n          dispatchers,\n        }) => (\n          <>\n            <ProductCarousel\n              fetchPrice={\n                hasDynamicPricing ? fetchPriceFactory(dispatchers) : null\n              }\n              initialIndex={0}\n              isComparison={true}\n              livePrices={productPrices}\n              products={updatedItemsForCarousel}\n              selectedItemIDs={selectedItems}\n              title={title}\n              offsetKey={offsetKey}\n              onToggleSelectedProduct={dispatchers.toggleSelectedProduct}\n              onBuyNowClick={dispatchers.clickProductCarouselBuyNow}\n              onReadReviewClick={dispatchers.clickProductCarouselReadReview}\n            />\n\n            <ProductComparison\n              dispatchers={dispatchers}\n              products={updatedItemsForComparison}\n              returnFocus={`#${PRODUCT_COMPARISON_RESET}`}\n              selectedItemIDs={selectedItems}\n              showModal={showModal}\n              livePrices={productPrices}\n              onBuyNowClick={dispatchers.clickProductComparisonBuyNow}\n              onReadReviewClick={dispatchers.clickProductComparisonReadReview}\n            />\n          </>\n        )}\n      </PageStateContext.Consumer>\n    );\n  }\n\n  return (\n    <PageStateContext.Consumer>\n      {({ productPrices, dispatchers }) => (\n        <ProductCarousel\n          fetchPrice={hasDynamicPricing ? fetchPriceFactory(dispatchers) : null}\n          initialIndex={0}\n          isComparison={false}\n          livePrices={productPrices}\n          products={updatedItemsForCarousel}\n          title={title}\n          offsetKey={offsetKey}\n          onToggleSelectedProduct={noop}\n          onBuyNowClick={dispatchers.clickProductCarouselBuyNow}\n          onReadReviewClick={dispatchers.clickProductCarouselReadReview}\n        />\n      )}\n    </PageStateContext.Consumer>\n  );\n};\n\nProductCarouselHydrated.propTypes = propTypes;\n\nexport default ProductCarouselHydrated;\n"],"names":[],"sourceRoot":""}