{"version":3,"file":"Other-Register-stories.b7bb28fc.iframe.bundle.js","mappings":";;;;;;;;;AAgCA","sources":["webpack://@indy/flow-web/./app/component/pages/Register.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { createGlobalStyle, styled } from 'styled-components';\n\nimport { withRequest } from '@brightsites/flow-core/lib/providers/RequestProvider';\n\nimport * as device from '#app/constants/devices';\nimport { ID_REGISTER_FORM_WRAPPER } from '#app/constants/ids';\n\nimport AmpAuth from '#app/component/library/AmpAuth';\nimport { Breadcrumb } from '#app/component/library/Breadcrumb';\nimport ConditionalFrame from '#app/component/library/ConditionalFrame';\nimport AmpDrawer from '#app/component/library/Header/LoginDrawerAmp';\nimport {\n  RegisterForm,\n  USER_FLOW_REGISTER,\n} from '#app/component/library/Register';\nimport RegisterFormHeader from '#app/component/library/StaticPage/Register/RegisterFormHeader';\nimport SubscribeOffer from '#app/component/library/StaticPage/Register/SubscribeOffer';\nimport { EnabledSubsType } from '#app/component/library/Subscribe/Subscribe.types';\n\nconst GlobalStyle = createGlobalStyle`\n  .tp-close.tp-active,\n  .tp-modal .tp-close {\n    display: none !important;\n  }\n\n  .tp-modal-open .tp-modal {\n    position: fixed !important;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 830px;\n  box-sizing: border-box;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px 20px 24px 20px;\n  margin: 0 auto;\n  color: ${(props) => props.theme.color.ink.base};\n  font-family: ${(props) => props.theme.fontFamily.secondaryFont};\n\n  @media ${device.maxMobileL} {\n    padding-top: 12px;\n    padding-right: 12px;\n    padding-left: 12px;\n  }\n\n  .already-registered {\n    padding-top: 16px;\n    color: ${(props) => props.theme.color.ink.base};\n    font-size: 16px;\n    line-height: 20px;\n\n    button {\n      color: ${(props) => props.theme.color.actionBrand.base};\n      font-weight: bold;\n\n      &:hover {\n        color: ${(props) => props.theme.color.actionBrand.alt};\n      }\n    }\n  }\n`;\n\nconst Register = (props) => {\n  const { className, req, enabledSubs } = props;\n  const { query } = req;\n\n  const isDonation = Object.keys(query).includes('donations');\n  const showSubOffer = enabledSubs.premium && !isDonation;\n\n  const ConditionalLoginDrawer =\n    query && Object.prototype.hasOwnProperty.call(query, 'noframe') ? (\n      <>\n        <AmpAuth />\n        <AmpDrawer />\n      </>\n    ) : null;\n\n  return (\n    <ConditionalFrame className={className}>\n      <GlobalStyle />\n      <Helmet>\n        <title>Register</title>\n      </Helmet>\n\n      <Breadcrumb currentPage=\"Register\" className=\"registration-breadcrumb\" />\n      <RegisterFormHeader />\n\n      <Wrapper id={ID_REGISTER_FORM_WRAPPER}>\n        <RegisterForm\n          alreadyHasAccountMessage=\"This account already exists.<br /> Please enter your password to log in.\"\n          submitButtonCopy=\"Create my account\"\n          regSourceMethod={query.regSourceMethod}\n          regSourceSection={query.regSourceSection}\n          userFlowType={USER_FLOW_REGISTER}\n          offerId={query.offerId}\n          termId={query.termId}\n        />\n      </Wrapper>\n      {showSubOffer && <SubscribeOffer />}\n      {ConditionalLoginDrawer}\n    </ConditionalFrame>\n  );\n};\n\nRegister.propTypes = {\n  className: PropTypes.string,\n  req: PropTypes.object,\n  enabledSubs: EnabledSubsType,\n  partialUserData: PropTypes.object,\n};\n\nexport default styled(withRequest(Register))`\n  .registration-breadcrumb {\n    display: flex;\n    justify-content: center;\n    padding: 22px 0 16px 0;\n  }\n`;\n"],"names":[],"sourceRoot":""}