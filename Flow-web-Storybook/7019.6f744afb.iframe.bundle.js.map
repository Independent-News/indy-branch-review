{"version":3,"file":"7019.6f744afb.iframe.bundle.js","mappings":";AAoDA;;AAEA;;AAEA;AAGA;;;;;AAOA;AACA;;AAEA","sources":["webpack://@indy/flow-web/./app/component/library/StaticPage/PaymentFlow/Confirmation/OnboardingJourney/Card/NewsletterFormCard.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useEffect, useRef, forwardRef } from 'react';\nimport { css, styled } from 'styled-components';\n\nimport { BUTTON_VARIANT_TERTIARY } from '@indy/ui/Button';\nimport {\n  MultiStepCardWithExtraSpacing,\n  CLASS_IS_ACTIVE,\n  InnerWrapper,\n  GoBackToPreviousStep,\n  Description,\n  TagLine,\n} from '@indy/ui/MultiStepCard';\n\nimport * as device from '#app/constants/devices';\n\nimport NewsletterForm from '../NewsletterForm';\nimport {\n  ONBOARDING_CONTINUE_BUTTON,\n  ONBOARDING_GO_BACK_BUTTON,\n} from '../Onboarding.constants';\n\nimport { ContinueButton } from './CardButtons';\n\nconst GoBackButton = styled(GoBackToPreviousStep).attrs({\n  variant: BUTTON_VARIANT_TERTIARY,\n})`\n  z-index: 2;\n  color: ${({ theme }) => theme.color.primary.base};\n`;\n\nconst Wrapper = styled(MultiStepCardWithExtraSpacing)`\n  max-height: calc(var(--card-inactive-top-position) * 2);\n\n  ${InnerWrapper} {\n    padding-bottom: calc(\n      var(--card-inactive-top-position) + ${({ theme }) => theme.spacing.x3}px\n    );\n  }\n\n  &.${CLASS_IS_ACTIVE} {\n    ${({ $myStep }) => `max-height: var(--card-${$myStep}-height);`}\n    box-shadow: none;\n\n    ${TagLine} {\n      display: block;\n    }\n  }\n\n  ${({ $isOnPreviousStep }) =>\n    $isOnPreviousStep &&\n    css`\n      box-shadow: 2px -2px 8px 0 ${({ theme }) => theme.color.shadow.dark};\n\n      ${TagLine} {\n        display: block;\n        font: ${({ theme }) =>\n          theme.textStyle.subscriptionConfirmationPage.cardTwoStepSubBeforeReg\n            .font};\n        letter-spacing: ${({ theme }) =>\n          theme.textStyle.subscriptionConfirmationPage.cardTwoStepSubBeforeReg\n            .letterSpacing};\n        opacity: 1;\n        text-transform: none;\n      }\n\n      @media ${device.tablet} {\n        box-shadow: 0 -10px 8px -8px ${({ theme }) => theme.color.shadow.dark};\n      }\n    `}\n\n  ${({ $hasThreeSteps }) =>\n    $hasThreeSteps &&\n    'margin-top: calc(var(--card-inactive-top-position) * -1);'}\n\n  @media ${device.tablet} {\n    ${ContinueButton} {\n      width: 364px;\n    }\n\n    &:not(.${CLASS_IS_ACTIVE}) {\n      ${Description} {\n        opacity: 0;\n      }\n    }\n  }\n\n  @media ${device.laptop} {\n    ${ContinueButton} {\n      width: 312px;\n    }\n  }\n`;\n\nconst NewsletterFormCard = forwardRef(function NewsletterFormCard(\n  {\n    currentStep,\n    myTabIndex,\n    totalSteps,\n    myStep,\n    isCardActive,\n    handleCurrentStepUpdate,\n    newsletters,\n    hasThreeSteps,\n  },\n  ref,\n) {\n  const goBackButtonRef = useRef(null);\n  const isOnFutureStep = currentStep > myStep;\n\n  useEffect(() => {\n    if (isOnFutureStep) {\n      goBackButtonRef.current?.focus();\n    }\n  }, [isOnFutureStep]);\n\n  return (\n    <Wrapper\n      currentStep={\n        currentStep !== myStep\n          ? 'Choose your newsletters'\n          : `Step ${myStep}/${totalSteps}`\n      }\n      title=\"Choose your newsletters\"\n      description=\"Receive the stories that matter, straight to your inbox. We've selected a few we think you'll like\"\n      isCardActive={isCardActive}\n      ref={ref}\n      $myStep={myStep}\n      $hasThreeSteps={hasThreeSteps}\n      $isOnPreviousStep={currentStep < myStep}\n      {...(isOnFutureStep && {\n        goBackToPreviousStep: (\n          <GoBackButton\n            ref={goBackButtonRef}\n            onClick={() => handleCurrentStepUpdate(myStep)}\n            tabIndex={isCardActive ? -1 : 0}\n            data-test={ONBOARDING_GO_BACK_BUTTON}\n          >\n            Go back to Newsletters\n          </GoBackButton>\n        ),\n      })}\n    >\n      <NewsletterForm\n        newsletters={newsletters}\n        cardPrimaryTabIndex={myTabIndex}\n      />\n      <ContinueButton\n        onClick={() => handleCurrentStepUpdate(myStep + 1)}\n        tabIndex={myTabIndex}\n        data-test={ONBOARDING_CONTINUE_BUTTON}\n      >\n        Continue\n      </ContinueButton>\n    </Wrapper>\n  );\n});\n\nNewsletterFormCard.propTypes = {\n  currentStep: PropTypes.number,\n  handleCurrentStepUpdate: PropTypes.func,\n  myTabIndex: PropTypes.number,\n  totalSteps: PropTypes.number,\n  myStep: PropTypes.number,\n  isCardActive: PropTypes.bool,\n  newsletters: PropTypes.array.isRequired,\n  hasThreeSteps: PropTypes.bool,\n};\n\nexport default NewsletterFormCard;\n"],"names":[],"sourceRoot":""}