{"version":3,"file":"2910.abb057f3.iframe.bundle.js","mappings":";AAeA;AAEA;AAIA;;AAGA","sources":["webpack://@indy/flow-web/./app/types/ElementIdType.js"],"sourcesContent":["import { minify } from '#app/util/taggedTemplates';\n\n/**\n * Custom prop-type helper function for element ID.\n * @param {bool} isRequired\n * @returns {import('prop-types').Requireable}\n */\nconst createType = (isRequired) => (props, propName, componentName) => {\n  const regex = /^[a-z][a-z0-9-_]*$/i;\n  const prop = props[propName];\n\n  if ([null, undefined].includes(prop) && isRequired) {\n    const value =\n      typeof prop === 'undefined' ? 'undefined' : JSON.stringify(prop);\n    return new Error(minify`\n      The prop ${propName} is marked as required in ${componentName}, but its value is ${value}\n    `);\n  }\n\n  if (!regex.test(prop)) {\n    return new Error(minify`\n        Invalid prop ${propName} supplied to ${componentName}.\n        The prop must contain digits, alphabets, hyphen and underscore only.\n      `);\n  }\n};\n\nconst Type = createType(false);\nType.isRequired = createType(true);\n\nexport const ElementIdType = Type;\n"],"names":[],"sourceRoot":""}